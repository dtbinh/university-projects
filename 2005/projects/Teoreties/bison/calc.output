Terminals which are not used

   '*'
   '/'
   '^'
   '!'
   COS
   SIN
   UMINUS


Grammar

    0 $accept: lines $end

    1 lines: lines statement '\n'
    2      | /* empty */
    3      | error '\n'

    4 statement: expr
    5          | REGISTER '=' expr

    6 expr: NUMBER
    7     | expr '+' expr
    8     | expr '-' expr
    9     | TAN '(' expr ')'
   10     | REGISTER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 3
'!' (33)
'(' (40) 9
')' (41) 9
'*' (42)
'+' (43) 7
'-' (45) 8
'/' (47)
'=' (61) 5
'^' (94)
error (256) 3
NUMBER (258) 6
REGISTER (259) 5 10
TAN (260) 9
COS (261)
SIN (262)
UMINUS (263)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
lines (20)
    on left: 1 2 3, on right: 0 1
statement (21)
    on left: 4 5, on right: 1
expr (22)
    on left: 6 7 8 9 10, on right: 4 5 7 8 9


state 0

    0 $accept: . lines $end

    error  shift, and go to state 1

    $end      reduce using rule 2 (lines)
    NUMBER    reduce using rule 2 (lines)
    REGISTER  reduce using rule 2 (lines)
    TAN       reduce using rule 2 (lines)

    lines  go to state 2


state 1

    3 lines: error . '\n'

    '\n'  shift, and go to state 3


state 2

    0 $accept: lines . $end
    1 lines: lines . statement '\n'

    $end      shift, and go to state 4
    NUMBER    shift, and go to state 5
    REGISTER  shift, and go to state 6
    TAN       shift, and go to state 7

    statement  go to state 8
    expr       go to state 9


state 3

    3 lines: error '\n' .

    $default  reduce using rule 3 (lines)


state 4

    0 $accept: lines $end .

    $default  accept


state 5

    6 expr: NUMBER .

    $default  reduce using rule 6 (expr)


state 6

    5 statement: REGISTER . '=' expr
   10 expr: REGISTER .

    '='  shift, and go to state 10

    $default  reduce using rule 10 (expr)


state 7

    9 expr: TAN . '(' expr ')'

    '('  shift, and go to state 11


state 8

    1 lines: lines statement . '\n'

    '\n'  shift, and go to state 12


state 9

    4 statement: expr .
    7 expr: expr . '+' expr
    8     | expr . '-' expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 4 (statement)


state 10

    5 statement: REGISTER '=' . expr

    NUMBER    shift, and go to state 5
    REGISTER  shift, and go to state 15
    TAN       shift, and go to state 7

    expr  go to state 16


state 11

    9 expr: TAN '(' . expr ')'

    NUMBER    shift, and go to state 5
    REGISTER  shift, and go to state 15
    TAN       shift, and go to state 7

    expr  go to state 17


state 12

    1 lines: lines statement '\n' .

    $default  reduce using rule 1 (lines)


state 13

    7 expr: expr '+' . expr

    NUMBER    shift, and go to state 5
    REGISTER  shift, and go to state 15
    TAN       shift, and go to state 7

    expr  go to state 18


state 14

    8 expr: expr '-' . expr

    NUMBER    shift, and go to state 5
    REGISTER  shift, and go to state 15
    TAN       shift, and go to state 7

    expr  go to state 19


state 15

   10 expr: REGISTER .

    $default  reduce using rule 10 (expr)


state 16

    5 statement: REGISTER '=' expr .
    7 expr: expr . '+' expr
    8     | expr . '-' expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 5 (statement)


state 17

    7 expr: expr . '+' expr
    8     | expr . '-' expr
    9     | TAN '(' expr . ')'

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    ')'  shift, and go to state 20


state 18

    7 expr: expr . '+' expr
    7     | expr '+' expr .
    8     | expr . '-' expr

    $default  reduce using rule 7 (expr)


state 19

    7 expr: expr . '+' expr
    8     | expr . '-' expr
    8     | expr '-' expr .

    $default  reduce using rule 8 (expr)


state 20

    9 expr: TAN '(' expr ')' .

    $default  reduce using rule 9 (expr)
