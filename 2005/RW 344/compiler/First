First(Program) = {"begin"}
First(Block) = {"begin"}
First(DefinitionPart) = {"const","integer","boolean","proc"}
First(Definition) = {"const","integer","boolean","proc"}
First(ConstantDefinition) = {"const"}
First(VariableDefinition) = {"integer","boolean"}
First(TypeSymbol) = {"integer","boolean"}
First(VariableList) = {variableName}  (* variablename word verkry vanaf token *)
First(ProcedureDefinition) = {"proc"}
First(StatementPart) = {"skip","read","write",variableName,"call","if","do"}
First(Statement) = {"skip","read","write",variableName,"call","if","do"}
First(EmptyStatement) = {"skip"}
First(ReadStatement) = {"read"}
First(VariableAccessList) = {variableName}
First(WriteStatement)={"write"}
First(ExpressionList) = {"-",numeral,ConstantName,variableName,"(","~"}
First(AssignmentStatement) = {variableName}
First(ProcedureStatement) = {"call"}
First(IfStatement) = {"if"}
First(DoStatement) = {"do"}
First(GuardedCommandList) = {"-",numeral,ConstantName,variableName,"(","~"}
First(GuardedCommand) = {"-",numeral,ConstantName,variableName,"(","~"}
First(Expression) = {"-",numeral,ConstantName,variableName,"(","~"}
First(PrimaryOperator) = {"&","|"}
First(PrimaryExpression) = {"-",numeral,ConstantName,variableName,"(","~"}
First(RelationalOperator) = {"<","=",">"}
First(SimpleExpression) = {"-",numeral,ConstantName,variableName,"(","~"}
First(AddingOperator) = {"+","-"}
First(Term) = {numeral,ConstantName,variableName,"(","~"}
First(MultiplyingOperator) = {"*","/","\"}
First(Factor) = {numeral,ConstantName,variableName,"(","~"}
First(VariableAccess) = {variableName}
First(IndexedSelector) = {"["}
First(Constant) = {numeral,constantName}
First(Numeral) = {digit}
First(Name) = {letter}
First(ConstantName) = {Name}

Follow(Program) = {}
Follow(Block) = {".",follow(procedureDefinition)}
Follow(DefinitionPart) = {first(StatementPart)}
Follow(Definition) = {";"} 
Follow(ConstantDefinition) = {follow(definition)}
Follow(VariableDefinition) = {follow(definition)}
Follow(TypeSymbol) = {"array", first(variableList)}
Follow(VariableList) = {"["} + follow(VariableDefinition)
Follow(ProcedureDefinition) = {follow(definition)}
Follow(StatementPart) = {"end",Follow(GuardedCommand)}
Follow(Statement) = {";"
Follow(EmptyStatement) = { Follow(statement)
Follow(ReadStatement) = { Follow(statement)
Follow(VariableAccessList) = {follow(ReadStatemnt), ":="
Follow(WriteStatement)={Follow(statement)
Follow(ExpressionList) = {Follow(WriteStatement),follow(AssignmentStatement)
Follow(AssignmentStatement) = {Follow(statement)
Follow(ProcedureStatement) = {Follow(statement)
Follow(IfStatement) = {Follow(statement)
Follow(DoStatement) = {Follow(statement)
Follow(GuardedCommandList) = {"fi","od"
Follow(GuardedCommand) = {"[]",follow(GuardedCommandList)}
Follow(Expression) = {"]" , "," ,follow(ExpressionList),"->",")"
Follow(PrimaryOperator) = {first(PrimaryExpression)}
Follow(PrimaryExpression) = {First(PrimaryOperator),follow(expression)}
Follow(RelationalOperator) = {First(SimpleExpression)
Follow(SimpleExpression) = {First(RelationalOperator,Follow(PrimaryExpression)
Follow(AddingOperator) = {First(Term)
Follow(Term) = {First(AddingOperator),Follow(SimpleExpression
Follow(MultiplyingOperator) = {First(Factor}
Follow(Factor) = {First(MultiplyingOperator),Follow(Term),Follow(Factor)
Follow(VariableAccess) = {",",follow(VariableAccessList),Follow(Factor)}
Follow(IndexedSelector) = {Follow(VariableAccess)
Follow(Constant) = {follow(ConstantDefintion),"]",Follow(Factor)}
Follow(Numeral) = {Follow(Constant)}
    (* Follow(Name) *)
Follow(ConstantName) = {"=",Follow(Constant)}
Follow(VariableName) = {",",follow(VariableList),Follor(VariableAccess),First(IndexedSelector)}
Follow(ProcedureName) = {"begin", follow(ProcedureStatement)