%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: paper.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips paper
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1999.04.05:1612
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (paper.dvi)
@start /Fa 1 83 df<B512E0381020DC000813221421EC1080A21540A51580A2EC2100
1426EB21F8EB3FA0EB2410EB22081321EB2084144280EC2080EC1040EC08203910100410
39FFFE03F81D1C809B24>82 D E /Fb 12 115 df<1430146014C0EB0180EB03005B130E
130C5B1338133013705B5B12015B1203A290C7FC5A1206120EA2120C121CA312181238A4
5AA75AB3A31270A77EA41218121CA3120C120EA2120612077E7FA212017F12007F137013
30133813187F130E7F7FEB0180EB00C014601430146377811F>18
D<12C012607E7E7E120E7E7E6C7E7F12007F1370133013381318131CA2130C130E130613
07A27F1480A3130114C0A4EB00E0A71470B3A314E0A7EB01C0A414801303A314005BA213
06130E130C131CA213181338133013705B5B12015B48C7FC5A120E120C5A5A5A5A14637F
811F>I<1470EB01F0EB03C0EB0780EB0E005B5B5BA213F05BB3AC485AA3485A48C7FC12
06120E12385A12C012707E120E120612076C7E6C7EA36C7EB3AC7F1370A27F7F7FEB0780
EB03C0EB01F0EB007014637B811F>26 D<14181430146014E014C0EB01801303EB070013
06130E130C131C5BA25BA25BA212015BA2485AA3120790C7FCA25A120EA2121EA3121CA2
123CA412381278A8127012F0B3A812701278A81238123CA4121CA2121EA3120EA2120F7E
A27F1203A36C7EA27F1200A21370A27FA27F130C130E13061307EB03801301EB00C014E0
146014301418157C768121>32 D<12C012607E123812187E120E7E7E7F12017F6C7EA213
70A27FA2133C131CA27FA3130F7FA214801303A214C0A31301A214E0A4130014F0A81470
1478B3A8147014F0A814E01301A414C0A21303A31480A213071400A25B130EA35BA2133C
1338A25BA25BA2485A5B120390C7FC5A120E120C5A123812305A5A157C7F8121>I<B912
C018E06CC81201EE001F6C6CED03F06C6C1500000F17386D16186C6C160C6C6C1604A26C
6C16026C6C1600137FA26D7E6D7E130F806D7E6D7EA26D7E6D7E147E147F6E7E6E7EA214
0F6E5A14034AC9FC140E5C5C5CA25C495A495A49CAFC130EA24916024916045B49160C00
011718491638484816F848C9EA01F0000E160F48ED01FF003FB812E0A25AB912C0373A7E
7F3C>88 D<B9FCA3D80FF8C7EA1FF0000316C000011680B3B3AC486CEC3FC0D80FFFECFF
F0B5D8F00F13FFA3303A7E7F35>I<EAFF80A2EAC000B3B3B3B0EAFF80A2094A778114>
104 D<EAFF80A21201B3B3B3B012FFA2094A7F8114>I<16021606160CA21618A21630A2
1660A216C0A2ED0180A2ED0300A21506A25DA25DA25DA25D1208001C5C123C00CE495A12
0E4AC7FC7E1406EA03805CEA01C05C13E000005BA2EB7060A26D5AA2EB1D80A2011FC8FC
7F130E130627327C812A>112 D<16021606A2160CA31618A31630A31660A316C0A3ED01
80A3ED0300A31506A35DA35DA35DA35DA21208001C5C123C127C00DC495A128E120E4AC7
FC7EA21406EA0380A25CA2EA01C05CA2EA00E05CA3EB7060A36D5AA3EB1D80A3011FC8FC
7FA2130E1306A2274B7C812A>I<16021606A2160CA41618A41630A41660A416C0A4ED01
80A5ED0300A41506A45DA45DA45DA45DA31208001C5CA2123C125C4A5A128E120EA24AC7
FC7EA31406A2EA0380A25CA2EA01C0A25CA3EA00E0A25CA313705CA313385CA4EB1D80A4
010FC8FCA4130E1306A227647C812A>I E /Fc 2 117 df<1208A21200A41270129812B0
1230A21260126412681270060F7D8E0B>105 D<120CA3121812FE1218A21230A3123212
341238070D7E8C0C>116 D E /Fd 4 55 df<B512C0A212027D871A>0
D<001E1310EA3F80EA7FC038E1E03038C0787038803FE0EB1FC0EB078014087E8A1A>24
D<1204120EA2121CA31238A212301270A21260A212C0A2070F7F8F0A>48
D<1303A21306A2130C1318A21330A2136013C0A2EA0180A2EA0300A212065AA25AA25A5A
A25A1240101A7C9300>54 D E /Fe 13 107 df<B61280A219027D8A20>0
D<126012F0A2126004047C8B0C>I<0040132000C01360006013C03830018038180300EA
0C066C5A6C5AEA01B0EA00E0A2EA01B0EA0318EA060C487E487E38300180386000C04813
600040132013147A9320>I<EA03C0EA0FF0EA1FF8EA3FFCEA7FFEA2B5FCA4EA7FFEA2EA
3FFCEA1FF8EA0FF0EA03C010107E9115>15 D<EC01801407EC1E001478EB01E0EB078001
1EC7FC1378EA01E0EA0780001EC8FC127812E01278121EEA0780EA01E0EA0078131EEB07
80EB01E0EB0078141EEC0780140191C7FCA7007FB5FCB6128019227D9920>20
D<12C012F0123C120FEA03C0EA00F0133C130FEB03C0EB00F0143C140FEC0380EC0F0014
3C14F0EB03C0010FC7FC133C13F0EA03C0000FC8FC123C127012C0C9FCA7007FB5FCB612
8019227D9920>I<D80F801320EA1FE0EA3FF8D8707C1360D8E01F13E039C007C1C03980
03FF8001001300143E1B097E8E20>24 D<153081A381A281811680ED00C0B712F8A2C912
C0ED0380160015065DA25DA35D25167E942A>33 D<EB7FF8EA01FF38078000000EC7FC12
185AA25AA25AA3B512F8A200C0C7FCA31260A27EA27E120E6C7E3801FFF8EA007F151A7D
961C>50 D<1460A214C0A2EB0180A3EB0300A21306A25BA25BA35BA25BA25BA2485AA248
C7FCA31206A25AA25AA25AA35AA25A124013287A9D00>54 D<133C13E0EA01C013801203
AD13005A121C12F0121C12077E1380AD120113C0EA00E0133C0E297D9E15>102
D<12F0121C12077E1380AD120113C0EA00E0133C13E0EA01C013801203AD13005A121C12
F00E297D9E15>I<12C0B3B3A502297B9E0C>106 D E /Ff 51 122
df<14FE90380301801306EB0C03EB1C0191C7FC13181338A43803FFFE3800700EA35CA2
13E0A25CA3EA01C01472A438038034141891C7FC90C8FCA25A12C612E65A12781925819C
17>12 D<1218123CA31204A21208A21210122012401280060C779C0D>39
D<EAFFC0A30A037D890F>45 D<1230127812F0126005047C830D>I<133EEBE180380181
C0EA03005A1206000E13E0120C001C13C0A2EA18011238A338700380A43860070012E013
06130EA2130C5BEA60385BEA30C0001FC7FC131D7C9B15>48 D<1304130C131813381378
EA07B8EA0070A413E0A4EA01C0A4EA0380A4EA0700A45AEAFFF00E1C7B9B15>I<133EEB
4180EB80C0EA0100000213E0EA0440A21208A3381081C0A238110380000E1300EA00065B
5B136013800003C7FC12044813404813805AEB0100EA7F07EA43FEEA81FCEA8078131D7D
9B15>I<EB018014C0EB0380A314005BA21306130E130C131C1318A25BA25B134013C6EA
018E130E1202EA061C120C1218123FEA40F838803F8038003800A25BA45B136012247E9B
15>52 D<EB80603801FFC01480EBFE0090C7FC1202A45A13F8EA050CEA0606120C120812
0013071306130EA21270130CEAE01CEA80181338EA40305BEA21C0001FC7FC131D7C9B15
>I<131FEB60C0EBC060EA018038030030A200061360120714C013803803C10013E6EA01
FCEA0078EA01BCEA061E487E487E383003801220EA6001A238C00300A21306EA60045BEA
3830EA0FC0141D7D9B15>56 D<133E13E138018180380300C01206120E120C121CA21301
1238A31303001813801307EA080B380C3300EA03C7EA0007130E130C131C1318EAE0305B
EA80C0EAC180003EC7FC121D7C9B15>I<1206120FA212061200AA1230127812F0126008
127C910D>I<1418A21438A21478A214B8EB0138A2EB023C141C1304130C13081310A213
20A2EB7FFCEBC01C1380EA0100141E0002130EA25A120C001C131EB4EBFFC01A1D7E9C1F
>65 D<48B5FC39003C038090383801C0EC00E0A35B1401A2EC03C001E01380EC0F00141E
EBFFFC3801C00E801580A2EA0380A43907000F00140E141E5C000E13F0B512C01B1C7E9B
1D>I<903803F02090381E0C6090383002E09038E003C03801C001EA038048C7FC000E14
80121E121C123C15005AA35AA41404A35C12705C6C5B00185B6C485AD80706C7FCEA01F8
1B1E7A9C1E>I<48B5FC39003C03C090383800E0A21570A24913781538A215785BA44848
13F0A315E03803800115C0140315803907000700140E5C5C000E13E0B512801D1C7E9B1F
>I<48B512F038003C00013813301520A35BA214081500495AA21430EBFFF03801C020A4
39038040801400A2EC0100EA07005C14021406000E133CB512FC1C1C7E9B1C>I<48B512
F038003C00013813301520A35BA214081500495AA21430EBFFF03801C020A448485A91C7
FCA348C8FCA45AEAFFF01C1C7E9B1B>I<903803F02090381E0C6090383002E09038E003
C03801C001EA038048C7FC000E1480121E121C123C15005AA35AA2903801FF809038001E
00141CA400705BA27E001813786C139038070710D801F8C7FC1B1E7A9C20>I<EA03FFEA
00781370A413E0A4EA01C0A4EA0380A4EA0700A4120EA4121EEAFFC0101C7D9B10>73
D<EB3FF8EB03C01480A4EB0700A4130EA45BA45BA4EA607012E0EAC060EA80E0EA81C0EA
4380003EC7FC151D7C9B16>I<3801FFC038003C001338A45BA45BA4485AA438038002A3
1404EA0700140C14181438000E13F0B5FC171C7E9B1A>76 D<D801FEEB01FED8003E14E0
012EEB03C01505A21509014EEB0B801513152313470187EB4700A21587EC0107D8010713
0E14021404A20002495AEB0388149014A000045C14C0A2000C1380001CEB007839FF8307
FF271C7E9B25>I<D801FCEBFF80D8001CEB1C00012E13181510A2132701475B13431480
A2903881C040A3EB80E0D801005B1470A300020139C7FCA3141D48131E140EA2120C001C
1304EAFF80211C7E9B1F>I<3801FFFE39003C038090383801C0EC00E0A3EB7001A315C0
EBE0031580EC0700141C3801FFF001C0C7FCA3485AA448C8FCA45AEAFFE01B1C7E9B1C>
80 D<3801FFFE39003C078090383801C015E01400A2EB7001A3EC03C001E01380EC0700
141CEBFFE03801C03080141CA2EA0380A43807003C1520A348144039FFE01E80C7EA0F00
1B1D7E9B1E>82 D<EB0F84EB304CEB403CEB8018EA01005AA200061310A214001207A2EA
03E013FC6CB4FC38007F80EB07C01301A21300A21220A238600180A2EB03001302EAF004
EACC18EA83E0161E7D9C17>I<001FB512C0381C070138300E0000201480126012405B12
80A2000014005BA45BA45BA4485AA41203EA7FFE1A1C799B1E>I<3AFF83FF07F03A3C00
7001C00038158002F01300A290380170025D13025D13045D13085D131001305B1320D81C
405BA2D98071C7FCA2381D0072A2001E1374A2001C1338A20018133014201210241D779B
29>87 D<EA01E3EA0717EA0C0F1218EA380E12301270A2EAE01CA41339A3EA6079EA319A
EA1E0C10127C9115>97 D<123F1207A2120EA45AA4EA39E0EA3A18EA3C0C12381270130E
A3EAE01CA31318133813301360EA60C0EA3180EA1E000F1D7C9C13>I<13F8EA0304120E
EA1C0EEA181CEA30001270A25AA51304EA60081310EA3060EA0F800F127C9113>I<EB07
E01300A2EB01C0A4EB0380A43801E700EA0717EA0C0F1218EA380E12301270A2485AA413
39A3EA6079EA319AEA1E0C131D7C9C15>I<13F8EA0704120CEA1802EA38041230EA7008
EA7FF0EAE000A5EA60041308EA30101360EA0F800F127C9113>I<EB03C0EB0670130CEB
1C601400A25BA53803FF8038007000A55BA5485AA5485AA390C7FCA25A12C612E65A1278
1425819C0D>I<EB78C0EA01C5EA03031206000E1380120C121CA238380700A4130EA3EA
181EEA0C7CEA079CEA001CA25BA2EAC030EAE070EAC1C0007FC7FC121A7E9113>I<EA0F
C01201A2485AA448C7FCA4EA0E3E13C3380F0380120E121E121CA338380700A3130E0070
1340A2131C1480EAE00C38600700121D7E9C15>I<EA01801203EA0100C7FCA7121C1226
1247A2128EA2120E5AA35AA21271A31272A2123C091C7C9B0D>I<EA0FC01201A2485AA4
48C7FCA4380E07801308EB11C01321381C4180EB8000001DC7FC121EEA3FC0EA38E01370
A2EA7071A31372EAE032EA601C121D7E9C13>107 D<EA1F801203A2EA0700A4120EA45A
A45AA45AA412E2A312E412641238091D7D9C0B>I<391C1E078039266318C0394683A0E0
384703C0008E1380A2120EA2391C0701C0A3EC0380D8380E1388A2EC0708151039701C03
2039300C01C01D127C9122>I<EA383EEA4CC3384D0380124E129E129C121CA238380700
A3130E00701340A2131C1480EAE00C3860070012127C9117>I<13F8EA030CEA0E06487E
1218123000701380A238E00700A3130EA25BEA60185BEA30E0EA0F8011127C9115>I<38
0387803804C860EBD03013E0EA09C014381201A238038070A31460380700E014C0EB0180
EB8300EA0E86137890C7FCA25AA45AB4FC151A809115>I<EA1C3CEA2642EA4687EA4707
EA8E061300120EA25AA45AA45A123010127C9112>114 D<EA01F0EA0608120C131CEA18
18EA1C00121F13C0EA0FF01207EA00781338EA603012E012C0EA8060EA60C0EA1F000E12
7D9111>I<12035AA3120EA4EAFFE0EA1C00A35AA45AA4EAE080A2EAE100A2126612380B
1A7C990E>I<381C0180EA2E03124EA2388E0700A2121CA2EA380EA438301C80A3EA383C
38184D00EA0F8611127C9116>I<EA1C06EA2E0EEA4E06A2EA8E02A2121CA2EA3804A313
081230A21310EA3820EA1840EA0F800F127C9113>I<381E018338270387124714833887
0701A2120EA2381C0E02A31404EA180C131C1408EA1C1E380C26303807C3C018127C911C
>I<381C0180EA2E03124EA2388E0700A2121CA2EA380EA4EA301CA3EA383CEA1878EA0F
B8EA003813301370EAE0605BEA81800043C7FC123C111A7C9114>121
D E /Fg 9 122 df<EA03C0380C2080EA1830383019001260131AA2EAC01C13181240EA
6028EA20CDEA1F07110D7E8C16>11 D<3807FFE03800E0703801C018140CA2140EEA0380
A43807001CA31438000E1330147014E0EB01C0381C0700EAFFFC17147F931B>68
D<381FFFF838381C18EA2038140812401410EA807000001300A35BA4485AA4485AEA3FF8
1514809314>84 D<121E12065AA45AEA19E0EA1E30121812381230A3EA6060136413C413
C812C013700E147E9313>104 D<1206120712061200A41238124CA2128C12981218A212
301232A21264A2123808147F930C>I<3830F87C38590C86384E0D06EA9C0EEA980C1218
A248485A15801418A23960301900140E190D7F8C1D>109 D<1204120CA35AEAFF80EA18
00A25AA45A1261A212621264123809127F910D>116 D<EA0E3CEA13CEEA238EEA430C13
001203A21206130812C6EAE610EACA20EA71C00F0D7F8C13>120
D<EA380C124CA2EA8C1812981218A2EA3030A31370EA18E0EA0F60120013C012E0EAE180
EA4300123C0E137F8C11>I E /Fh 7 62 df<1202120412081218121012301220126012
40A212C0AA1240A212601220123012101218120812041202071E7D950D>40
D<1280124012201230121012181208120C1204A21206AA1204A2120C1208121812101230
122012401280071E7E950D>I<1360AAB512F0A238006000AA14167E9119>43
D<120C121C12EC120CAFEAFFC00A137D9211>49 D<121FEA60C01360EAF07013301260EA
0070A2136013C012011380EA02005AEA08101210EA2020EA7FE012FF0C137E9211>I<12
4012E012401200A7124012E01240030D7D8C09>58 D<387FFFE0B512F0C8FCA6B512F06C
13E0140A7E8B19>61 D E /Fi 25 122 df<13F8EA030C380E0604EA1C07383803080030
138800701390A200E013A0A214C01480A3EA6007EB0B8838307190380F80E016127E911B
>11 D<38078010EA1FC0383FE020EA7FF038603040EAC0183880088012001304EB0500A2
1306A31304A3130CA35BA45BA21320141B7F9115>13 D<EA01F8EA0700120C5A12381230
1270EA7FC0EAE000A51260A27EEA1860EA0F800D127E9111>15 D<137813CCEA0186EA03
061206120E120CEA1C071218EA3806A2EA300E1270A2EA7FFEEAE01CA31318133812C013
701360A213C0EAC1801261EA6200123C101D7E9C13>18 D<126012F0A2126004047C830C
>58 D<126012F0A212701210A41220A212401280040C7C830C>I<130113031306A3130C
A31318A31330A31360A213C0A3EA0180A3EA0300A31206A25AA35AA35AA35AA35AA21029
7E9E15>61 D<12E01278121EEA0780EA01E0EA0078131EEB0780EB01E0EB0078141EEC07
80A2EC1E001478EB01E0EB0780011EC7FC1378EA01E0EA0780001EC8FC127812E019187D
9520>I<48B5128039003C01E090383800701538153C151C5B151EA35BA44848133CA315
3848481378157015F015E039070001C0EC0380EC0700141C000E1378B512C01F1C7E9B22
>68 D<3A01FFC3FF803A003C00780001381370A4495BA449485AA390B5FC3901C00380A4
484848C7FCA43807000EA448131E39FFE1FFC0211C7E9B23>72 D<EB03F8EB0E0E903838
03809038E001C0EA01C039038000E048C7FC4814F0121E121C123CA25AA348EB01E0A3EC
03C0A2EC0780A2EC0F000070130E5C6C5B003C5B381C01C038070780D801FCC7FC1C1E7E
9C20>79 D<001FB512F0391C03807039300700300020142012601240130E1280A2000014
005BA45BA45BA45BA41201EA7FFF1C1C7F9B18>84 D<3A01FFC0FF803A001E003C00011C
13306D13205D010F5B6D48C7FC1482EB038414CCEB01D814F05C130080EB0170EB0278EB
04381308EB103CEB201CEB401EEB800E3801000F00027F1206001E497E39FF803FF0211C
7F9B22>88 D<39FFE007F8390F0001E0158015006C13026D5A00035BEBC018141000015B
6D5A00005B01F1C7FC13F21376137C1338A25BA45BA4485AEA1FFC1D1C7F9B18>I<90B5
12E09038F001C03901C003809038800700EB000E141E0002131C5C5CC75A495A495A49C7
FC5B131E131C5BEB7002495AEA01C0EA038048485A5A000E1318485B48137048485AB5FC
1B1C7E9B1C>I<130E131113311361A213C1A2EA01C21382EA0384A2EA07081310A21320
EA0E401380EA0F00A2120E120CA2121C122C124CEA8C02EA060C1310EA01E0101D809C11
>96 D<EB07E01300A2EB01C0A4EB0380A43801E700EA0717EA0C0F1218EA380E12301270
A2485AA4EB3880A3EA607838319900EA1E0E131D7E9C16>100 D<EA01F0EA0708120CEA
1804EA38081230EA7030EA7FC0EAE000A51304EA60081310EA3060EA0F800E127E9113>
I<EA0FC01201A2485AA448C7FCA4EA0E3E13C3380F0380120E121E121CA338380700A313
0E00701320A2131C144038E00C8038600700131D7E9C18>104 D<EA01C01203A2EA0180
C7FCA6121C12271247A21287A2120EA25AA35A1380A21270EA71001232121C0A1C7E9B0E
>I<39381F81F0394E20C618394640E81CEB80F0EA8F00008E13E0120EA2391C01C038A3
15703938038071A215E115E23970070064D83003133820127E9124>109
D<13C01201A3EA0380A4EAFFF0EA0700A3120EA45AA4EA3820A21340A2EA1880EA0F000C
1A80990F>116 D<001CEBC080392701C1C0124714C03987038040A2120EA2391C070080
A3EC0100EA1806A2381C0E02EB0F04380E13083803E1F01A127E911E>119
D<380787803808C8403810F0C03820F1E0EBE3C03840E1803800E000A2485AA438638080
12F3EB810012E5EA84C6EA787813127E9118>I<001C13C0EA27011247A238870380A212
0EA2381C0700A4EA180EA3EA1C1EEA0C3CEA07DCEA001C1318EA6038EAF0305B485AEA41
80003EC7FC121A7E9114>I E /Fj 86 127 df<EB7E1F3901C1B180390303E3C0000713
C3000EEBC180903801C000A6B512FC380E01C0B0387F87FC1A1D809C18>11
D<137E3801C180EA0301380703C0120EEB018090C7FCA5B512C0EA0E01B0387F87F8151D
809C17>I<EB7FC0EA01C1EA03031207EA0E01A7B5FCEA0E01B0387FCFF8151D809C17>I<
90383F07E03901C09C18380380F0D80701133C000E13E00100131892C7FCA5B612FC390E
00E01CB03A7FC7FCFF80211D809C23>I<EA6060EAF0F0EAF8F8EA6868EA0808A3EA1010
A2EA2020EA4040EA80800D0C7F9C15>34 D<9038030180A39038060300A5EB0C06A4495A
007FB512F8B612FC3900301800A4495AA4B612FC6C14F83900C0600048485AA438030180
A4D80603C7FCA31E257E9C23>I<000F14C0EA188039306003803970380700386027FB38
E010065CA25CA25C5CEA602000705B38304180EA1881390F0303C03900060620EC0C1090
380C1C08EB1818EC380413301360A213C0A2EA01803903001808141C0006EB0C1048EB06
200004EB03C01E217E9E23>37 D<126012F012F812681208A31210A2122012401280050C
7C9C0C>39 D<1380EA0100120212065AA25AA25AA35AA412E0AC1260A47EA37EA27EA27E
12027EEA0080092A7C9E10>I<7E12407E12307EA27EA27EA37EA41380AC1300A41206A3
5AA25AA25A12205A5A092A7E9E10>I<1306ADB612E0A2D80006C7FCAD1B1C7E9720>43
D<126012F0A212701210A41220A212401280040C7C830C>I<EAFFE0A20B0280890E>I<12
6012F0A2126004047C830C>I<130113031306A3130CA31318A31330A31360A213C0A3EA
0180A3EA0300A31206A25AA35AA35AA35AA35AA210297E9E15>I<EA03C0EA0C30EA1818
EA300CA2EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2EA1818EA0C30EA07E010
1D7E9B15>I<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>I<EA07C0EA1830EA201CEA
400C130EEAF00F12F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA03
00EA0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA
781E130E131E1238EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8
A3EAF00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2131C133CA2135C13DC139C
EA011C120312021204120C1208121012301220124012C0B512C038001C00A73801FFC012
1C7F9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA2C30EA3018131CEA200E1200
130FA3126012F0A3EA800EEA401E131CEA2038EA1870EA07C0101D7E9B15>I<13F0EA03
0CEA0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EAE430EAE818EAF00C130EEAE0
061307A51260A2EA7006EA300E130CEA1818EA0C30EA03E0101D7E9B15>I<1240387FFF
801400A2EA4002485AA25B485AA25B1360134013C0A212015BA21203A41207A66CC7FC11
1D7E9B15>I<EA03E0EA0C30EA1008EA200C13061260A21270A2EA7C0CEA3E18EA3FB0EA
1FE0EA07F013F8EA18FCEA307EEA601E130FEAC0071303A4EA60021304EA300CEA1C10EA
07E0101D7E9B15>I<EA03C0EA0C30EA1818EA300C1270EA600EEAE006A21307A51260EA
700F1230EA1817EA0C27EA07C7EA0006A2130EEA300C127813181270EA2030EA10C0EA0F
80101D7E9B15>I<126012F0A212601200AA126012F0A2126004127C910C>I<126012F0A2
12601200AA126012F0A212701210A41220A212401280041A7C910C>I<007FB512C0B612
E0C9FCA8B612E06C14C01B0C7E8F20>61 D<EA0FE0EA3038EA401CEAE00E12F0A3EA000C
131C1330136013C0138012011300A6C7FCA51203EA0780A2EA03000F1D7E9C14>63
D<1306A3130FA3EB1780A2EB37C01323A2EB43E01341A2EB80F0A338010078A2EBFFF838
02003CA3487FA2000C131F80001E5BB4EBFFF01C1D7F9C1F>65 D<B512C0380F00788080
140E140FA4140E141E5C14F8EBFFF0EB003C8080801580A5EC0F00A2141E1478B512E019
1C7F9B1D>I<90381F8080EBE0613801801938070007000E13035A14015A00781300A212
7000F01400A8007014801278A212386CEB0100A26C13026C5B380180083800E030EB1FC0
191E7E9C1E>I<B512C0380F00F0143C140E80A2EC038015C01401A215E0A815C0A21403
158014071500140E5C1470B512C01B1C7E9B20>I<B512FC380F003C140C1404A2140614
02A213011400A35B13FF13037FA3140113001402A31406A2140C143CB512FC181C7E9B1C
>I<B512F8380F007814181408A2140C1404A213011400A35B13FF13037FA490C7FCA8EA
FFF8161C7E9B1B>I<90381F8080EBE0613801801938070007000E13035A14015A007813
00A2127000F01400A6ECFFF0EC0F80007013071278A212387EA27E6C130B380180113800
E06090381F80001C1E7E9C21>I<39FFF0FFF0390F000F00AC90B5FCEB000FAD39FFF0FF
F01C1C7F9B1F>I<EAFFF0EA0F00B3A8EAFFF00C1C7F9B0F>I<3807FF8038007C00133CB3
127012F8A21338EA7078EA4070EA30E0EA0F80111D7F9B15>I<39FFF01FE0390F000780
EC060014045C5C5C5C5C49C7FC13021306130FEB17801327EB43C0EB81E013016D7E1478
A280143E141E80158015C039FFF03FF01C1C7F9B20>I<EAFFF8EA0F8090C7FCB01408A3
1418A2141014301470EB01F0B5FC151C7E9B1A>I<B46CEBFF80000FECF800A2390BC001
78A33809E002A23808F004A3EB7808A3EB3C10A3EB1E20A3EB0F40A2EB0780A3EB030012
1C3AFF8307FF80211C7E9B26>I<B4EB1FF0390F8003809038C00100120BEA09E0EA08F0
A21378133C133E131E130F14811307EB03C1EB01E114F113001479147D143D141FA28080
80121CB46C7E1C1C7F9B1F>I<EB3F80EBE0E03803803848487E000E7F487F003C148000
381303007814C0A20070130100F014E0A8007014C000781303A200381480003C1307001C
14006C130E6C5B6C6C5A3800E0E0EB3F801B1E7E9C20>I<B51280380F00E01478143C14
1C141EA5141C143C147814E0EBFF8090C7FCACEAFFF0171C7E9B1C>I<EB3F80EBE0E038
03803848487E000E7F487F003C148000381303007814C0A20070130100F014E0A8007014
C000781303A200381480383C0E07D81C111300380E208E0007135C3803A0783900F0E020
133FEB0060EC3060EC38E0EC3FC0A2EC1F80EC0F001B257E9C20>I<B5FC380F01E0EB00
7880141C141EA4141C143C5CEB01E001FFC7FCEB01E0EB0070147880A61510A2141CA239
FFF00E20C7EA03C01C1D7E9B1F>I<3807E080EA1C19EA30051303EA600112E01300A36C
13007E127CEA7FC0EA3FF8EA1FFEEA07FFC61380130FEB07C0130313011280A300C01380
A238E00300EAD002EACC0CEA83F8121E7E9C17>I<007FB512C038700F01006013000040
1440A200C014201280A300001400B1497E3803FFFC1B1C7F9B1E>I<39FFF01FF0390F00
0380EC0100B3A26C1302138000035BEA01C03800E018EB7060EB0F801C1D7F9B1F>I<39
FFE00FF0391F0003C0EC01806C1400A238078002A213C000035BA2EBE00C00011308A26C
6C5AA213F8EB7820A26D5AA36D5AA2131F6DC7FCA21306A31C1D7F9B1F>I<3AFFE1FFC0
FF3A1F003E003C001E013C13186C6D1310A32607801F1320A33A03C0278040A33A01E043
C080A33A00F081E100A39038F900F3017913F2A2017E137E013E137CA2013C133C011C13
38A20118131801081310281D7F9B2B>I<39FFF003FC390F8001E00007EB00C06D138000
03EB01006D5A000113026C6C5A13F8EB7808EB7C18EB3C10EB3E20131F6D5A14C06D5AAB
EB7FF81E1C809B1F>89 D<12FEA212C0B3B312FEA207297C9E0C>91
D<EA0808EA1010EA2020EA4040A2EA8080A3EAB0B0EAF8F8EA7878EA30300D0C7A9C15>
I<12FEA21206B3B312FEA20729809E0C>I<120C12121221EA4080EA80400A057B9B15>I<
EA1FC0EA3070EA78387F12301200A2EA01FCEA0F1C12381270126000E01340A3EA603C38
304E80381F870012127E9115>97 D<12FC121CAA137CEA1D87381E0180381C00C014E014
601470A6146014E014C0381E018038190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA18
1E1230EA700CEA600012E0A61260EA70021230EA1804EA0C18EA03E00F127F9112>I<EB
1F801303AAEA03F3EA0E0BEA1807EA30031270126012E0A6126012701230EA1807EA0E1B
3803E3F0141D7F9C17>I<EA07E0EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE0
00A41260EA70021230EA1804EA0C18EA03E00F127F9112>I<13F8EA018CEA071E1206EA
0E0C1300A6EAFFE0EA0E00B0EA7FE00F1D809C0D>I<EB03803807C4C0EA1C7838383880
38301800EA701CA4EA3018EA38386C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA20
03386001C0EAC000A33860018038300300EA1C0EEA07F8121C7F9215>I<12FC121CAA13
7C1387EA1D03001E1380121CAD38FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC
121CB0EAFF80091D7F9C0C>I<13C0EA01E0A2EA00C01300A7EA07E01200B3A21260EAF0
C012F1EA6180EA3E000B25839C0D>I<12FC121CAAEB0FE0EB0780EB06005B13105B5B13
E0121DEA1E70EA1C781338133C131C7F130F148038FF9FE0131D7F9C16>I<12FC121CB3
A9EAFF80091D7F9C0C>I<39FC7E07E0391C838838391D019018001EEBE01C001C13C0AD
3AFF8FF8FF8021127F9124>I<EAFC7CEA1C87EA1D03001E1380121CAD38FF9FF014127F
9117>I<EA03F0EA0E1CEA1806487E00701380EA600100E013C0A600601380EA70030030
1300EA1806EA0E1CEA03F012127F9115>I<EAFC7CEA1D87381E0180001C13C0EB00E0A2
1470A614E0A2EB01C0001E1380381D0700EA1CFC90C7FCA7B47E141A7F9117>I<3803E0
80EA0E19EA1805EA3807EA7003A212E0A61270A2EA38071218EA0E1BEA03E3EA0003A7EB
1FF0141A7F9116>I<EAFCE0EA1D38EA1E78A2EA1C301300ACEAFFC00D127F9110>I<EA1F
90EA2070EA4030EAC010A212E0EAF800EA7F80EA3FE0EA0FF0EA00F8EA8038131812C0A2
EAE010EAD060EA8FC00D127F9110>I<1204A4120CA2121C123CEAFFE0EA1C00A91310A5
120CEA0E20EA03C00C1A7F9910>I<38FC1F80EA1C03AD1307120CEA0E1B3803E3F01412
7F9117>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA
01D0A2EA00E0A3134013127F9116>I<39FF3FC7E0393C0703C0001CEB01801500130B00
0E1382A21311000713C4A213203803A0E8A2EBC06800011370A2EB8030000013201B127F
911E>I<38FF0FE0381E0700EA1C06EA0E046C5AEA039013B0EA01E012007F12011338EA
021C1204EA0C0E487E003C138038FE1FF014127F9116>I<38FF07E0383C0380381C0100
A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A31340A25BA212F000F1C7
FC12F312661238131A7F9116>I<EA7FFCEA70381260EA407013F013E0EA41C012031380
EA0700EA0F04120E121CEA3C0CEA380812701338EAFFF80E127F9112>I<B512F0140180
8B15>I<B812802901808B2A>I<EA1C04EA3F08EA43F0EA80E00E047D9B15>126
D E /Fk 1 25 df<D807E01301EA0FF8EA3FFCD8381E130338700780396003C00639C001
E00E903800781C48EB3FFCEC1FF0EC07E0200B7D9127>24 D E /Fl
41 122 df<133C136213C2EA0181A21203A41382A213841388EA01C813D09039E001FF80
9039C0007C006C6C1338000114300170132000025CEA0478D808385BEA181C003049C7FC
38700E02130F38F00704EB038814C8903801F001EB00E000781370ECB802393C031C0639
0E0C070C3903F001F021257EA326>38 D<127012F812FCA212741204A41208A21210A212
201240060F7C840E>44 D<127012F8A3127005057C840E>46 D<14801301A2EB0300A313
06A35BA35BA35BA35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA311317DA4
18>I<EA01F0EA071CEA0C06487E00381380A2387001C0A400F013E0AE007013C0A3EA78
0300381380A2381C0700EA0C06EA071CEA01F013227EA018>I<13801203120F12F31203
B3A9EA07C0EAFFFE0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0A2008013
E012F0EAF801A3EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213
205A5A00181360481340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA100F382007
80004013C0127813031307123800001380A214005B130C1338EA03F0EA001C130FEB0780
A2EB03C0A214E01220127012F8A200F013C01240EB0780122038100F00EA0C1CEA03F013
227EA018>I<12401260387FFFE014C0A23840008038C0010012801302A2485A5BA25B5B
A21360134013C0A21201A25B1203A41207A76CC7FC13237DA118>55
D<EA01F8EA060EEA0803381001801220386000C0A31270A238780180003E1300EA3F02EA
1FC4EA0FF812036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A1460A4006013
4014C06C138038180300EA0E0EEA03F013227EA018>I<EA01F0EA060C487EEA18073838
03801270A238F001C0A314E0A5127013031238EA1805120CEA0619EA03E1380001C0A3EB
0380A21230387807001306EA700CEA20186C5AEA0FC013227EA018>I<EB0FE0EB701CEB
800239030001800004EB0040481420A2391007C0103920183008EB300839406004049038
C007840041130300811482EA8380A7EA81C0124100401307016013843820300B90381831
88391007C0F06CC8FCA27E0003140EC66C137890387007C090380FFC001F237DA226>64
D<497EA3497EA3EB05E0A2EB09F01308A2EB1078A3497EA3497EA2EBC01F497EA248B512
80EB0007A20002EB03C0A348EB01E0A348EB00F0121C003EEB01F839FF800FFF20237EA2
25>I<B612C0380F80070007130114001540A215601520A314201500A3146014E013FF13
8014601420A491C7FCA9487EEAFFFE1B227EA120>70 D<3803FFE038001F007FB3A61270
12F8A2130EEAF01EEA401C6C5AEA1870EA07C013237EA119>74 D<EAFFFCEA1F806CC7FC
B3A21401A41403A214021406A2141E48137EB512FE18227DA11E>76
D<39FF8007FF3907C000F81570D805E01320EA04F0A21378137C133C7F131F7FEB0780A2
EB03C0EB01E0A2EB00F014F81478143C143E141E140FA2EC07A0EC03E0A21401A2140000
0E1460121FD8FFE0132020227EA125>78 D<B512F0380F803C0007130FEC078015C01403
15E0A615C014071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC1B227EA121>80
D<B512E0380F803C0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0EB807080
80141E140E140FA481A3168015C014073A0FC003C10039FFFC01E2C8127C21237EA124>
82 D<3803F020380C0C60EA1802383001E0EA70000060136012E0A21420A36C1300A212
78127FEA3FF0EA1FFE6C7E0003138038003FC0EB07E01301EB00F0A214707EA46C1360A2
6C13C07E38C8018038C60700EA81FC14247DA21B>I<007FB512F8397807807800601418
00401408A300C0140C00801404A400001400B3A3497E3801FFFE1E227EA123>I<39FFFC
07FF390FC000F86C4813701520B3A5000314407FA2000114806C7E9038600100EB3006EB
1C08EB03F020237EA125>I<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7EA1E
07123C1278127000F01308A3130FEA7817383C2390380FC1E015157E9418>97
D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C141EA7141C14
3C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA0703380C078012
1C383803000078C7FC127012F0A712700078134012386C1380380C0100EA0706EA01F812
157E9416>I<EA01FCEA0707380C0380381C01C01238007813E0EA700012F0B5FC00F0C7
FCA512700078132012386C13406C138038070300EA00FC13157F9416>101
D<120E12FE121E120EABEB1F80EB60C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B
>104 D<121C123EA3121CC7FCA8120E127E121E120EB1EAFFC00A227FA10E>I<120E12FE
121E120EABEB03FCEB01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E130E7F1480
EB03C0130114E0EB00F014F838FFE3FE17237FA21A>107 D<120E12FE121E120EB3ADEA
FFE00B237FA20E>I<390E1FC07F3AFE60E183803A1E807201C03A0F003C00E0A2000E13
38AF3AFFE3FF8FFE27157F942A>I<380E1F8038FE60C0381E80E0380F0070A2120EAF38
FFE7FF18157F941B>I<EA01FCEA0707380C0180381800C0003813E0481370A200F01378
A700701370007813F0003813E0381C01C0380E038038070700EA01FC15157F9418>I<EA
0E1F38FE61C0380E8060380F0070000E1338143CA2141EA7143CA21438000F1370380E80
E0EB41C0EB3F0090C7FCA9EAFFE0171F7F941B>I<EA0E3CEAFE46EA1E8FEA0F0F130613
00120EAD120FEAFFF010157F9413>114 D<EA0F88EA3078EA601812C01308A212E0EAF0
00127FEA3FE0EA0FF0EA01F8EA003CEA801C130CA212C01308EAE018EAD030EA8FC00E15
7E9413>I<1202A41206A3120E121E123EEAFFFCEA0E00AB1304A6EA07081203EA01F00E
1F7F9E13>I<000E137038FE07F0EA1E00000E1370AD14F0A238060170380382783800FC
7F18157F941B>I<38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A238
01C100A2EA00E2A31374A21338A3131017157F941A>I<39FF8FF87F393E01E03C001CEB
C01814E0000E1410EB0260147000071420EB04301438D803841340EB8818141CD801C813
80EBD00C140E3900F00F00497EA2EB6006EB400220157F9423>I<38FF80FE381E007814
30000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A31310A2
5BA35B12F05B12F10043C7FC123C171F7F941A>121 D E /Fm 31
123 df<EB0FF0EB7FFC3801F80E3803E01F48485AEA0F80A2141E140C91C7FCA4B6FCA2
380F801FB2397FF0FFE0A21B237FA21F>12 D<1238127C12FEA3127C123807077C8610>
46 D<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA201307F140F0170
7FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A23AFFE007FFF8A2
25227EA12A>65 D<B67E15F03907F001F86E7E157EA2157FA5157E15FE5DEC03F890B55A
A29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F815C022227EA1
28>I<B612FCA23807F000153C151C150C150EA21506140CA31500141C143CEBFFFCA2EB
F03C141C140CA21503A214001506A3150EA2151E153EEC01FCB6FCA220227EA125>69
D<D903FE134090391FFFC0C090387F00F1D801F8133F4848130FD807C01307000F140348
5A48C71201A2481400127EA200FE1500A791380FFFFC127E007F9038001FC0A27EA26C7E
6C7E6C7E6C7ED801FC133F39007F80E790381FFFC30103130026227DA12C>71
D<D8FFF0EC0FFF6D5C000716E0D806FC1437A3017E1467A26D14C7A290391F800187A290
390FC00307A3903807E006A2903803F00CA2903801F818A3903800FC30A2EC7E60A2EC3F
C0A2EC1F80A3EC0F00D8FFF091B5FC140630227EA135>77 D<B512FEECFFC03907F007F0
EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA816
06EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82 D<3801FE023807FF86381F01FE38
3C007E007C131E0078130EA200F81306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C
13FC000313FEEA003F1303EB007F143FA200C0131FA36C131EA26C133C12FCB413F838C7
FFE00080138018227DA11F>I<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200A2
133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B>
97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497EEC0F80A215C0A81580141F0180
1300EBC03E381EE07C381C3FF838180FC01A237EA21F>I<EBFF80000713E0380F83F0EA
1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0
C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F007E003E13
3E127E127C12FCA8127CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<
13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127C
A2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1
F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<38
01FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EB
FF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F8048
1307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>I<B4FCA2121FABEB
07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E12
7FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FABECFF80A2
EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F806D7E6D7E1301806D7E147C14
3C39FFE0FFC0A21A237EA21E>107 D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07
F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0
A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A
167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C13
7CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF838
1FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC0
90C8FCA8EAFFE0A21A207E951F>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7
FCADEAFFF0A213167E9517>114 D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7
FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0A238F00700EAFC0EEAEFFC
EAC7F011167E9516>I<487EA41203A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB83
00EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F003EAF147E14FE380F81BE39
07FF3FC0EA01FC1A167E951F>I<39FFE07FC0A2390F801C006C6C5A6C6C5AEBF0606C6C
5A3800F980137F6DC7FC7F80497E1337EB63E0EBC1F03801C0F848487E3807007E000E13
3E39FF80FFE0A21B167F951E>120 D<39FFE01FE0A2391F800700000F1306EBC00E0007
130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B
1278EAFC3813305BEA69C0EA7F80001FC8FC1B207F951E>I<387FFFF0A2387C03E03870
07C0EA600F38E01F8000C01300133E137EC65A5B485A00031330EA07E013C0380F807012
1F383F0060003E13E0EA7C03B5FCA214167E9519>I E /Fn 15 118
df<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7FC14E3A2903801C1FEA201037F1480
A249486C7EA24980010E133FA2496D7EA2013FB57EA39039700007F8A201F08049130300
0181491301A2000381D8FFFE013F13FCA32E297EA833>65 D<B612F815FF16C03A03F800
1FE0ED0FF0ED07F8150316FCA21501A3150316F8A2ED07F0150FED1FC0EDFF8090B5EAFE
00EDFFC09039F8000FF0ED03F8ED01FC16FE1500A216FFA616FE1501ED03FC1507ED1FF8
B712E016C0EDFE0028297DA830>I<B512F0A33803FC00B3B1B512F0A314297EA819>73
D<EB3FF03801FFFC3803F03E380FC07FEA1F80EA3F00A248133E007E90C7FCA212FEA712
7EA2127F6CEB03801380001FEB0700380FE00E3803F83C3801FFF838003FC0191B7E9A1E
>99 D<EC7FF0A31407ACEB3F873801FFF73807F03F380FC00F381F8007EA3F00A2127EA3
12FEA8127EA27EA2381F800F380FC01F3907E07FFF3801FFE738007F87202A7EA925>I<
EB3FC03801FFF03803E07C380F803E001F7F130048EB0F80127E15C0A200FE1307A2B6FC
A248C8FCA3127EA2127F6CEB01C07E390F8003803907C007003803F01E3800FFFCEB3FE0
1A1B7E9A1F>I<EB07F8EB3FFCEB7E3E3801FC7FEA03F813F01207143E1400A7B512C0A3
3807F000B3A3387FFF80A3182A7EA915>I<9038FF80F00003EBE3F8390FC1FE1C391F00
7C7C48137E003EEB3E10007EEB3F00A6003E133E003F137E6C137C380FC1F8380BFFE000
18138090C8FC1238A2123C383FFFF814FF6C14C06C14E06C14F0121F383C0007007CEB01
F8481300A4007CEB01F0A2003FEB07E0390FC01F806CB5120038007FF01E287E9A22>I<
1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFEA3
0F2B7EAA12>105 D<38FFC07E9038C1FF809038C30FC0D80FC413E0EBC80701D813F013
D0A213E0B039FFFE3FFFA3201B7D9A25>110 D<EB3FE03801FFFC3803F07E390FC01F80
391F800FC0393F0007E0A2007EEB03F0A300FE14F8A8007E14F0A26CEB07E0A2391F800F
C0390FC01F803907F07F003801FFFC38003FE01D1B7E9A22>I<38FFC1F0EBC7FCEBC63E
380FCC7F13D813D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>114
D<3803FE30380FFFF0EA3E03EA7800127000F01370A27E00FE1300EAFFE06CB4FC14C06C
13E06C13F0000713F8C6FCEB07FC130000E0137C143C7E14387E6C137038FF01E038E7FF
C000C11300161B7E9A1B>I<13E0A41201A31203A21207120F381FFFE0B5FCA2380FE000
AD1470A73807F0E0000313C03801FF8038007F0014267FA51A>I<39FFE07FF0A3000F13
07B2140FA2000713173903F067FF3801FFC738007F87201B7D9A25>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
gsave 560 750 moveto /Times-Italic findfont 10 scalefont setfont
(Proceedings of the Sixteenth International Joint
 Conference on Artificial Intelligence, 1999.)
dup stringwidth exch neg exch rmoveto show grestore
1 0 bop 488 150 a Fn(A)22 b(Brief)g(In)n(tro)r(duction)j(to)d(Bo)r
(osting)740 263 y Fm(Rob)r(ert)17 b(E.)h(Sc)n(hapire)611
321 y Fl(A)l(T&T)e(Labs,)h(Shannon)h(Lab)q(oratory)300
380 y(180)f(P)o(ark)g(Av)o(en)o(ue,)d(Ro)q(om)h(A279,)i(Florham)e(P)o
(ark,)h(NJ)32 b(07932,)18 b(USA)623 438 y(www.researc)o(h.att.com/)p
Fk(\030)p Fl(sc)o(hapire)696 496 y(sc)o(hapire@researc)o(h.att.com)324
642 y Fm(Abstract)8 718 y Fj(Bo)q(osting)12 b(is)f(a)h(general)g(metho)
q(d)e(for)i(impro)o(ving)d(the)8 764 y(accuracy)14 b(of)e(an)o(y)h(giv)
o(en)f(learning)g(algorithm.)k(This)8 810 y(short)g(pap)q(er)g(in)o
(tro)q(duces)g(the)g(b)q(o)q(osting)f(algorithm)8 855
y(AdaBo)q(ost,)g(and)g(explains)g(the)g(underlying)g(theory)8
901 y(of)k(b)q(o)q(osting,)h(including)f(an)g(explanation)g(of)g(wh)o
(y)8 947 y(b)q(o)q(osting)13 b(often)h(do)q(es)g(not)g(su\013er)g(from)
e(o)o(v)o(er\014tting.)8 992 y(Some)g(examples)g(of)g(recen)o(t)j
(applications)d(of)g(b)q(o)q(ost-)8 1038 y(ing)h(are)i(also)e(describ)q
(ed.)-75 1162 y Fm(Bac)n(kground)-75 1226 y Fj(Bo)q(osting)f(is)f(a)g
(general)h(metho)q(d)f(whic)o(h)h(attempts)f(to)h(\\b)q(o)q(ost")-75
1272 y(the)k(accuracy)g(of)e(an)o(y)h(giv)o(en)f(learning)h(algorithm.)
k(Bo)q(osting)-75 1317 y(has)12 b(its)g(ro)q(ots)g(in)f(a)g
(theoretical)h(framew)o(ork)e(for)i(studying)f(ma-)-75
1363 y(c)o(hine)k(learning)f(called)h(the)g(\\P)m(A)o(C")f(learning)g
(mo)q(del,)f(due)j(to)-75 1409 y(V)m(alian)o(t)c([37)o(];)h(see)i
(Kearns)g(and)f(V)m(azirani)e([24)o(])i(for)f(a)h(go)q(o)q(d)f(in-)-75
1454 y(tro)q(duction)18 b(to)g(this)g(mo)q(del.)28 b(Kearns)19
b(and)f(V)m(alian)o(t)e([22)o(,)h(23])-75 1500 y(w)o(ere)e(the)h
(\014rst)f(to)f(p)q(ose)h(the)g(question)g(of)f(whether)i(a)e(\\w)o
(eak")-75 1546 y(learning)25 b(algorithm)e(whic)o(h)j(p)q(erforms)f
(just)h(sligh)o(tly)f(b)q(et-)-75 1591 y(ter)e(than)f(random)e
(guessing)j(in)e(the)i(P)m(A)o(C)f(mo)q(del)f(can)h(b)q(e)-75
1637 y(\\b)q(o)q(osted")13 b(in)o(to)g(an)f(arbitrarily)g(accurate)i
(\\strong")f(learning)-75 1683 y(algorithm.)30 b(Sc)o(hapire)19
b([30)o(])g(came)f(up)g(with)h(the)g(\014rst)h(pro)o(v-)-75
1728 y(able)i(p)q(olynomial)o(-tim)o(e)d(b)q(o)q(osting)j(algorithm)d
(in)j(1989.)41 b(A)-75 1774 y(y)o(ear)16 b(later,)f(F)m(reund)h([14)o
(])f(dev)o(elop)q(ed)h(a)f(m)o(uc)o(h)g(more)f(e\016cien)o(t)-75
1820 y(b)q(o)q(osting)e(algorithm)e(whic)o(h,)j(although)e(optimal)f
(in)j(a)f(certain)-75 1865 y(sense,)j(nev)o(ertheless)h(su\013ered)g
(from)c(certain)i(practical)g(dra)o(w-)-75 1911 y(bac)o(ks.)26
b(The)16 b(\014rst)h(exp)q(erimen)o(ts)g(with)f(these)i(early)e(b)q(o)q
(osting)-75 1957 y(algorithms)h(w)o(ere)j(carried)g(out)f(b)o(y)f(Druc)
o(k)o(er,)j(Sc)o(hapire)f(and)-75 2002 y(Simard)12 b([13)o(])i(on)f(an)
h(OCR)f(task.)-75 2104 y Fm(AdaBo)r(ost)-75 2168 y Fj(The)h(AdaBo)q
(ost)f(algorithm,)d(in)o(tro)q(duced)k(in)f(1995)f(b)o(y)h(F)m(reund)
-75 2214 y(and)i(Sc)o(hapire)h([18)o(],)e(solv)o(ed)h(man)o(y)f(of)g
(the)i(practical)f(di\016cul-)-75 2260 y(ties)21 b(of)f(the)i(earlier)f
(b)q(o)q(osting)f(algorithms,)g(and)g(is)h(the)g(fo-)-75
2305 y(cus)g(of)e(this)h(pap)q(er.)37 b(Pseudo)q(co)q(de)21
b(for)f(AdaBo)q(ost)g(is)g(giv)o(en)-75 2351 y(in)j(Fig.)g(1.)47
b(The)24 b(algorithm)d(tak)o(es)k(as)e(input)h(a)f(training)-75
2397 y(set)14 b(\()p Fi(x)29 2403 y Fh(1)48 2397 y Fi(;)7
b(y)87 2403 y Fh(1)105 2397 y Fj(\))p Fi(;)g(:)g(:)g(:)e(;)i
Fj(\()p Fi(x)254 2403 y Fg(m)285 2397 y Fi(;)g(y)324
2403 y Fg(m)355 2397 y Fj(\))14 b(where)h(eac)o(h)f Fi(x)622
2403 y Fg(i)648 2397 y Fj(b)q(elongs)g(to)f(some)-75
2442 y Ff(domain)26 b Fj(or)21 b Ff(instanc)n(e)i(sp)n(ac)n(e)i
Fi(X)s Fj(,)f(and)e(eac)o(h)g Ff(lab)n(el)j Fi(y)817
2448 y Fg(i)853 2442 y Fj(is)d(in)-75 2488 y(some)c(lab)q(el)g(set)h
Fi(Y)9 b Fj(.)32 b(F)m(or)18 b(most)g(of)g(this)g(pap)q(er,)i(w)o(e)f
(assume)-75 2534 y Fi(Y)i Fj(=)12 b Fe(f\000)p Fj(1)p
Fi(;)7 b Fj(+1)p Fe(g)p Fj(;)k(later,)i(w)o(e)g(discuss)g(extensions)h
(to)f(the)g(m)o(ulti-)-75 2579 y(class)h(case.)k(AdaBo)q(ost)c(calls)f
(a)g(giv)o(en)g Ff(we)n(ak)k Fj(or)c Ff(b)n(ase)i(le)n(arning)-75
2625 y(algorithm)j Fj(rep)q(eatedly)f(in)e(a)g(series)j(of)d(rounds)h
Fi(t)e Fj(=)h(1)p Fi(;)7 b(:)g(:)g(:)t(;)g(T)f Fj(.)1013
631 y(Giv)o(en:)17 b(\()p Fi(x)1189 637 y Fh(1)1207 631
y Fi(;)7 b(y)1246 637 y Fh(1)1265 631 y Fj(\))p Fi(;)g(:)g(:)g(:)e(;)i
Fj(\()p Fi(x)1414 637 y Fg(m)1445 631 y Fi(;)g(y)1484
637 y Fg(m)1515 631 y Fj(\))1192 677 y(where)15 b Fi(x)1336
683 y Fg(i)1361 677 y Fe(2)d Fi(X)s Fj(,)i Fi(y)1484
683 y Fg(i)1509 677 y Fe(2)e Fi(Y)20 b Fj(=)12 b Fe(f\000)p
Fj(1)p Fi(;)7 b Fj(+1)p Fe(g)1013 722 y Fj(Initialize)12
b Fi(D)1218 728 y Fh(1)1237 722 y Fj(\()p Fi(i)p Fj(\))g(=)g(1)p
Fi(=m)p Fj(.)1013 768 y(F)m(or)h Fi(t)f Fj(=)f(1)p Fi(;)c(:)g(:)g(:)e
(;)i(T)f Fj(:)1054 830 y Fe(\017)21 b Fj(T)m(rain)12
b(w)o(eak)i(learner)h(using)e(distribution)h Fi(D)1819
836 y Fg(t)1834 830 y Fj(.)1054 876 y Fe(\017)21 b Fj(Get)14
b(w)o(eak)f(h)o(yp)q(othesis)i Fi(h)1509 882 y Fg(t)1535
876 y Fj(:)c Fi(X)k Fe(!)c(f\000)p Fj(1)p Fi(;)c Fj(+1)p
Fe(g)13 b Fj(with)h(error)1331 951 y Fi(\017)1348 957
y Fg(t)1374 951 y Fj(=)e(Pr)1462 957 y Fg(i)p Fd(\030)p
Fg(D)1527 961 y Fc(t)1550 951 y Fj([)p Fi(h)1586 957
y Fg(t)1600 951 y Fj(\()p Fi(x)1640 957 y Fg(i)1654 951
y Fj(\))f Fe(6)p Fj(=)h Fi(y)1745 957 y Fg(i)1759 951
y Fj(])7 b Fi(:)1054 1055 y Fe(\017)21 b Fj(Cho)q(ose)14
b Fi(\013)1267 1061 y Fg(t)1293 1055 y Fj(=)1341 1038
y Fh(1)p 1341 1045 17 2 v 1341 1069 a(2)1370 1055 y Fj(ln)1411
996 y Fb(\022)1447 1026 y Fj(1)9 b Fe(\000)g Fi(\017)1535
1032 y Fg(t)p 1447 1045 103 2 v 1483 1083 a Fi(\017)1500
1089 y Fg(t)1555 996 y Fb(\023)1585 1055 y Fj(.)1054
1127 y Fe(\017)21 b Fj(Up)q(date:)1133 1228 y Fi(D)1167
1234 y Fg(t)p Fh(+1)1224 1228 y Fj(\()p Fi(i)p Fj(\))42
b(=)1391 1200 y Fi(D)1425 1206 y Fg(t)1440 1200 y Fj(\()p
Fi(i)p Fj(\))p 1391 1219 96 2 v 1418 1257 a Fi(Z)1446
1263 y Fg(t)1501 1228 y Fe(\002)1543 1170 y Fb(\032)1594
1205 y Fi(e)1613 1190 y Fd(\000)p Fg(\013)1661 1194 y
Fc(t)1719 1205 y Fj(if)13 b Fi(h)1781 1211 y Fg(t)1795
1205 y Fj(\()p Fi(x)1835 1211 y Fg(i)1849 1205 y Fj(\))f(=)f
Fi(y)1940 1211 y Fg(i)1594 1251 y Fi(e)1613 1235 y Fg(\013)1635
1239 y Fc(t)1719 1251 y Fj(if)i Fi(h)1781 1257 y Fg(t)1795
1251 y Fj(\()p Fi(x)1835 1257 y Fg(i)1849 1251 y Fj(\))f
Fe(6)p Fj(=)f Fi(y)1940 1257 y Fg(i)1312 1344 y Fj(=)1391
1316 y Fi(D)1425 1322 y Fg(t)1440 1316 y Fj(\()p Fi(i)p
Fj(\))c(exp)q(\()p Fe(\000)p Fi(\013)1632 1322 y Fg(t)1647
1316 y Fi(y)1667 1322 y Fg(i)1681 1316 y Fi(h)1705 1322
y Fg(t)1719 1316 y Fj(\()p Fi(x)1759 1322 y Fg(i)1773
1316 y Fj(\)\))p 1391 1334 415 2 v 1577 1372 a Fi(Z)1605
1378 y Fg(t)1096 1443 y Fj(where)17 b Fi(Z)1246 1449
y Fg(t)1277 1443 y Fj(is)f(a)g(normalization)d(factor)j(\(c)o(hosen)i
(so)e(that)1096 1488 y Fi(D)1130 1494 y Fg(t)p Fh(+1)1200
1488 y Fj(will)d(b)q(e)h(a)g(distribution\).)1013 1551
y(Output)g(the)h(\014nal)e(h)o(yp)q(othesis:)1261 1668
y Fi(H)s Fj(\()p Fi(x)p Fj(\))f(=)g(sign)1489 1597 y
Fb( )1540 1616 y Fg(T)1522 1628 y Fb(X)1525 1716 y Fg(t)p
Fh(=1)1589 1668 y Fi(\013)1616 1674 y Fg(t)1630 1668
y Fi(h)1654 1674 y Fg(t)1669 1668 y Fj(\()p Fi(x)p Fj(\))1725
1597 y Fb(!)1765 1668 y Fi(:)1111 1841 y Fj(Figure)i(1:)k(The)c(b)q(o)q
(osting)f(algorithm)f(AdaBo)q(ost.)1013 1947 y(One)18
b(of)f(the)h(main)e(ideas)h(of)h(the)g(algorithm)d(is)i(to)h(main)o
(tain)1013 1993 y(a)i(distribution)g(or)h(set)g(of)f(w)o(eigh)o(ts)h(o)
o(v)o(er)g(the)g(training)f(set.)1013 2039 y(The)13 b(w)o(eigh)o(t)g
(of)f(this)h(distribution)f(on)h(training)f(example)g
Fi(i)h Fj(on)1013 2084 y(round)18 b Fi(t)g Fj(is)g(denoted)h
Fi(D)1411 2090 y Fg(t)1426 2084 y Fj(\()p Fi(i)p Fj(\).)32
b(Initially)m(,)16 b(all)h(w)o(eigh)o(ts)h(are)h(set)1013
2130 y(equally)m(,)f(but)h(on)g(eac)o(h)g(round,)h(the)g(w)o(eigh)o(ts)
f(of)f(incorrectly)1013 2175 y(classi\014ed)10 b(examples)f(are)i
(increased)g(so)f(that)h(the)f(w)o(eak)g(learner)1013
2221 y(is)15 b(forced)i(to)f(fo)q(cus)h(on)e(the)i(hard)f(examples)g
(in)f(the)i(training)1013 2267 y(set.)1054 2312 y(The)j(w)o(eak)g
(learner's)g(job)g(is)f(to)h(\014nd)g(a)f Ff(we)n(ak)i(hyp)n(othesis)
1013 2358 y Fi(h)1037 2364 y Fg(t)1064 2358 y Fj(:)13
b Fi(X)k Fe(!)12 b(f\000)p Fj(1)p Fi(;)7 b Fj(+1)p Fe(g)14
b Fj(appropriate)h(for)g(the)g(distribution)f Fi(D)1998
2364 y Fg(t)2013 2358 y Fj(.)1013 2404 y(The)j(go)q(o)q(dness)i(of)e(a)
g(w)o(eak)h(h)o(yp)q(othesis)g(is)f(measured)h(b)o(y)f(its)1013
2449 y Ff(err)n(or)1130 2512 y Fi(\017)1147 2518 y Fg(t)1173
2512 y Fj(=)12 b(Pr)1262 2518 y Fg(i)p Fd(\030)p Fg(D)1327
2522 y Fc(t)1349 2512 y Fj([)p Fi(h)1385 2518 y Fg(t)1399
2512 y Fj(\()p Fi(x)1439 2518 y Fg(i)1453 2512 y Fj(\))g
Fe(6)p Fj(=)f Fi(y)1544 2518 y Fg(i)1559 2512 y Fj(])g(=)1679
2473 y Fb(X)1625 2564 y Fg(i)p Fh(:)p Fg(h)1665 2568
y Fc(t)1680 2564 y Fh(\()p Fg(x)1712 2568 y Fc(i)1725
2564 y Fh(\))p Fd(6)p Fh(=)p Fg(y)1780 2568 y Fc(i)1800
2512 y Fi(D)1834 2518 y Fg(t)1849 2512 y Fj(\()p Fi(i)p
Fj(\))p Fi(:)1013 2625 y Fj(Notice)19 b(that)g(the)h(error)g(is)f
(measured)g(with)g(resp)q(ect)i(to)e(the)p eop
%%Page: 2 2
2 1 bop -7 535 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 -7 535 a 261 w Fj(error)603 535 y
 currentpoint grestore moveto
 603
535 a 56 535 a
 currentpoint currentpoint translate 0.43239 0.43239 scale neg exch
neg exch translate
 56 535 a @beginspecial 71.730827 @llx
219.177551 @lly 537.981262 @urx 557.906494 @ury 4662
@rwi @setspecial
%%BeginDocument: letter-bst-c4-err.special.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0 0.333333 0 0.0309017 [
[(10)] .33333 0 0 2 Msboxa
[(100)] .66667 0 0 2 Msboxa
[(1000)] 1 0 0 2 Msboxa
[(0)] -0.0125 0 1 0 Msboxa
[()] -0.0125 .07725 1 0 Msboxa
[(5)] -0.0125 .15451 1 0 Msboxa
[()] -0.0125 .23176 1 0 Msboxa
[(10)] -0.0125 .30902 1 0 Msboxa
[()] -0.0125 .38627 1 0 Msboxa
[(15)] -0.0125 .46353 1 0 Msboxa
[()] -0.0125 .54078 1 0 Msboxa
[(20)] -0.0125 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
0 .0958 m
1 .0958 L
s
P
p
0 0 .5 r
.001 w
0 .42722 m
1 .42722 L
s
P
p
.002 w
.10034 0 m
.10034 .00625 L
s
P
p
.002 w
.15904 0 m
.15904 .00625 L
s
P
p
.002 w
.20069 0 m
.20069 .00625 L
s
P
p
.002 w
.23299 0 m
.23299 .00625 L
s
P
p
.002 w
.25938 0 m
.25938 .00625 L
s
P
p
.002 w
.2817 0 m
.2817 .00625 L
s
P
p
.002 w
.30103 0 m
.30103 .00625 L
s
P
p
.002 w
.31808 0 m
.31808 .00625 L
s
P
p
.002 w
.33333 0 m
.33333 .00625 L
s
P
[(10)] .33333 0 0 2 Mshowa
p
.002 w
.43368 0 m
.43368 .00625 L
s
P
p
.002 w
.49237 0 m
.49237 .00625 L
s
P
p
.002 w
.53402 0 m
.53402 .00625 L
s
P
p
.002 w
.56632 0 m
.56632 .00625 L
s
P
p
.002 w
.59272 0 m
.59272 .00625 L
s
P
p
.002 w
.61503 0 m
.61503 .00625 L
s
P
p
.002 w
.63436 0 m
.63436 .00625 L
s
P
p
.002 w
.65141 0 m
.65141 .00625 L
s
P
p
.002 w
.66667 0 m
.66667 .00625 L
s
P
[(100)] .66667 0 0 2 Mshowa
p
.002 w
.76701 0 m
.76701 .00625 L
s
P
p
.002 w
.82571 0 m
.82571 .00625 L
s
P
p
.002 w
.86735 0 m
.86735 .00625 L
s
P
p
.002 w
.89966 0 m
.89966 .00625 L
s
P
p
.002 w
.92605 0 m
.92605 .00625 L
s
P
p
.002 w
.94837 0 m
.94837 .00625 L
s
P
p
.002 w
.9677 0 m
.9677 .00625 L
s
P
p
.002 w
.98475 0 m
.98475 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
[(1000)] 1 0 0 2 Mshowa
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 Mshowa
p
.002 w
0 .07725 m
.00625 .07725 L
s
P
[()] -0.0125 .07725 1 0 Mshowa
p
.002 w
0 .15451 m
.00625 .15451 L
s
P
[(5)] -0.0125 .15451 1 0 Mshowa
p
.002 w
0 .23176 m
.00625 .23176 L
s
P
[()] -0.0125 .23176 1 0 Mshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(10)] -0.0125 .30902 1 0 Mshowa
p
.002 w
0 .38627 m
.00625 .38627 L
s
P
[()] -0.0125 .38627 1 0 Mshowa
p
.002 w
0 .46353 m
.00625 .46353 L
s
P
[(15)] -0.0125 .46353 1 0 Mshowa
p
.002 w
0 .54078 m
.00625 .54078 L
s
P
[()] -0.0125 .54078 1 0 Mshowa
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
[(20)] -0.0125 .61803 1 0 Mshowa
p
.001 w
0 .01545 m
.00375 .01545 L
s
P
p
.001 w
0 .0309 m
.00375 .0309 L
s
P
p
.001 w
0 .04635 m
.00375 .04635 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .09271 m
.00375 .09271 L
s
P
p
.001 w
0 .10816 m
.00375 .10816 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .13906 m
.00375 .13906 L
s
P
p
.001 w
0 .16996 m
.00375 .16996 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20086 m
.00375 .20086 L
s
P
p
.001 w
0 .21631 m
.00375 .21631 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26266 m
.00375 .26266 L
s
P
p
.001 w
0 .27812 m
.00375 .27812 L
s
P
p
.001 w
0 .29357 m
.00375 .29357 L
s
P
p
.001 w
0 .32447 m
.00375 .32447 L
s
P
p
.001 w
0 .33992 m
.00375 .33992 L
s
P
p
.001 w
0 .35537 m
.00375 .35537 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .40172 m
.00375 .40172 L
s
P
p
.001 w
0 .41717 m
.00375 .41717 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .44807 m
.00375 .44807 L
s
P
p
.001 w
0 .47898 m
.00375 .47898 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .50988 m
.00375 .50988 L
s
P
p
.001 w
0 .52533 m
.00375 .52533 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57168 m
.00375 .57168 L
s
P
p
.001 w
0 .58713 m
.00375 .58713 L
s
P
p
.001 w
0 .60258 m
.00375 .60258 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
0 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
p
.004 w
0 .2449 m
.12063 .32505 L
.1855 .00425 L
.23013 0 L
.2642 0 L
.3149 0 L
.35238 0 L
.44624 0 L
.54322 0 L
.64186 0 L
.69998 0 L
.74134 0 L
.77347 0 L
.79975 0 L
.82198 0 L
.84125 0 L
.85825 0 L
.87347 0 L
.88723 0 L
.8998 0 L
.91137 0 L
.92208 0 L
.93205 0 L
.94138 0 L
.95014 0 L
.9584 0 L
.96622 0 L
.97364 0 L
.98069 0 L
.98742 0 L
.99385 0 L
1 0 L
s
P
P
P
p
p
p
.004 w
0 .54928 m
.12063 .58868 L
.1855 .29202 L
.2642 .22713 L
.3149 .18 L
.33485 .16764 L
.35238 .15374 L
.36801 .14678 L
.38212 .14447 L
.39498 .14447 L
.40678 .14292 L
.4177 .14447 L
.42785 .1406 L
.44624 .13442 L
.4772 .12206 L
.48401 .11665 L
.49051 .11974 L
.49674 .1182 L
.5027 .11434 L
.50843 .11434 L
.51394 .11279 L
.51925 .11356 L
.52438 .11279 L
.52932 .10816 L
.5341 .10507 L
.53873 .10816 L
.54322 .11202 L
.54757 .11202 L
.5518 .11047 L
.55989 .11125 L
.56378 .11202 L
.56756 .11434 L
.57125 .11588 L
.57484 .11279 L
.57835 .11665 L
.58178 .11356 L
.58512 .11202 L
.58839 .11356 L
.59159 .11202 L
.59472 .11202 L
.59778 .11356 L
.60078 .1097 L
.60372 .11202 L
.6066 .11125 L
.60942 .10584 L
.61219 .10738 L
.61491 .1097 L
.61758 .10893 L
.6202 .10584 L
.62277 .10507 L
Mistroke
.6253 .10507 L
.62778 .10507 L
.63023 .10816 L
.63263 .10661 L
.63499 .10584 L
.63732 .10584 L
.6396 .10275 L
.64186 .10352 L
.64407 .10352 L
.64626 .10507 L
.64841 .10429 L
.65053 .10507 L
.65262 .10275 L
.65468 .10352 L
.65671 .10275 L
.65872 .10661 L
.66069 .10584 L
.66264 .10429 L
.66456 .10352 L
.66646 .10275 L
.66834 .10275 L
.67019 .10275 L
.67382 .10198 L
.67736 .1012 L
.6791 .10043 L
.68081 .10043 L
.68251 .10275 L
.68419 .10429 L
.68749 .10429 L
.68911 .10352 L
.69071 .10429 L
.6923 .10507 L
.69387 .10584 L
.69542 .10429 L
.69696 .10429 L
.69848 .10198 L
.69998 .10198 L
.70147 .1012 L
.70294 .1012 L
.7044 .1012 L
.70584 .1012 L
.70869 .09966 L
.71009 .09889 L
.71148 .09811 L
.71285 .09811 L
.71422 .09811 L
.71557 .09966 L
.7169 .10043 L
.71954 .10043 L
.72084 .10043 L
Mistroke
.72213 .10043 L
.72341 .1012 L
.72468 .09966 L
.72593 .1012 L
.72718 .10198 L
.72841 .10275 L
.72964 .09966 L
.73085 .10429 L
.73205 .10429 L
.73325 .10275 L
.73443 .10043 L
.73561 .1012 L
.73677 .09966 L
.73793 .09734 L
.73907 .09811 L
.74021 .09811 L
.74134 .09966 L
.74246 .09734 L
.74357 .09734 L
.74467 .09657 L
.74577 .09889 L
.74685 .10198 L
.74793 .09811 L
.75006 .09811 L
.75112 .09734 L
.75217 .09811 L
.7532 .09889 L
.75424 .09657 L
.75526 .09811 L
.75628 .1012 L
.75829 .09966 L
.75929 .09811 L
.76028 .09811 L
.76224 .09889 L
.76321 .09889 L
.76417 .09966 L
.76513 .10043 L
.76608 .09889 L
.76702 .09889 L
.76796 .1012 L
.76889 .10043 L
.76982 .1012 L
.77166 .10043 L
.77347 .09966 L
.77437 .10043 L
.77526 .09889 L
.77615 .09811 L
.77703 .09966 L
.7779 .1012 L
.77877 .09889 L
Mistroke
.77964 .1012 L
.7805 .10275 L
.78135 .1012 L
.7822 .1012 L
.78305 .09966 L
.78389 .10198 L
.78473 .10198 L
.78556 .1012 L
.7872 .1012 L
.78802 .1012 L
.78883 .1012 L
.78964 .09966 L
.79044 .09966 L
.79124 .09966 L
.79204 .09966 L
.79283 .09966 L
.79361 .10043 L
.79517 .09889 L
.79594 .09889 L
.79671 .09734 L
.79748 .09889 L
.79824 .09811 L
.79975 .09811 L
.8005 .09734 L
.80124 .09811 L
.80272 .09734 L
.80345 .09657 L
.80418 .09657 L
.80563 .09657 L
.80635 .09657 L
.80707 .09734 L
.80778 .09734 L
.80849 .0958 L
.80919 .09657 L
.8099 .09657 L
.81129 .09657 L
.81267 .09657 L
.81336 .09657 L
.81404 .09657 L
.81539 .09811 L
.81606 .09966 L
.81673 .09966 L
.8174 .09966 L
.81806 .09966 L
.81872 .09734 L
.81938 .09734 L
.82003 .09734 L
.82069 .09657 L
.82133 .09966 L
.82198 .09889 L
Mistroke
.82326 .09889 L
.82453 .09889 L
.82516 .09966 L
.82579 .09889 L
.82642 .09889 L
.82704 .10043 L
.82766 .1012 L
.82828 .10043 L
.8289 .10043 L
.82951 .1012 L
.83012 .09966 L
.83073 .09966 L
.83193 .10043 L
.83313 .1012 L
.83373 .10043 L
.83432 .10198 L
.83491 .10198 L
.8355 .1012 L
.83608 .10198 L
.83667 .1012 L
.83725 .10198 L
.83783 .10043 L
.8384 .10043 L
.83898 .10198 L
.83955 .1012 L
.84012 .1012 L
.84068 .10198 L
.84125 .10275 L
.84181 .10198 L
.84237 .1012 L
.84349 .10198 L
.84404 .10275 L
.84459 .10275 L
.84514 .10275 L
.84569 .1012 L
.84678 .1012 L
.84786 .1012 L
.8484 .1012 L
.84893 .1012 L
.84947 .10043 L
.85 .10043 L
.85053 .1012 L
.85106 .10043 L
.85158 .1012 L
.85211 .1012 L
.85263 .10043 L
.85315 .10043 L
.85418 .10043 L
.8547 .1012 L
.85521 .1012 L
Mistroke
.85623 .10043 L
.85674 .10043 L
.85725 .1012 L
.85775 .09889 L
.85825 .09889 L
.85875 .10043 L
.85925 .09966 L
.85975 .09966 L
.86024 .09966 L
.86074 .10043 L
.86123 .10043 L
.86172 .09889 L
.86221 .09889 L
.86269 .09966 L
.86318 .10043 L
.86366 .10043 L
.86415 .09966 L
.86463 .09966 L
.8651 .10043 L
.86558 .1012 L
.86606 .09966 L
.86653 .10043 L
.86701 .09966 L
.86748 .1012 L
.86795 .1012 L
.86841 .1012 L
.86888 .1012 L
.86935 .09966 L
.86981 .09966 L
.87027 .09966 L
.87073 .09966 L
.87119 .09966 L
.87165 .09889 L
.87256 .09889 L
.87347 .09889 L
.87392 .09811 L
.87437 .09811 L
.87526 .09811 L
.87615 .09811 L
.87659 .09889 L
.87703 .09811 L
.87791 .09889 L
.87878 .09966 L
.87922 .09966 L
.87965 .10043 L
.88008 .09889 L
.88051 .09889 L
.88094 .09889 L
.88137 .09966 L
.8818 .09966 L
Mistroke
.88222 .09966 L
.88307 .09889 L
.88349 .09889 L
.88391 .09811 L
.88433 .09889 L
.88475 .09966 L
.88516 .09811 L
.88558 .09811 L
.88599 .09966 L
.88641 .09966 L
.88682 .09889 L
.88723 .09734 L
.88764 .09734 L
.88805 .09734 L
.88846 .09811 L
.88886 .09889 L
.88927 .09889 L
.88967 .09811 L
.89008 .09889 L
.89048 .09966 L
.89088 .09734 L
.89128 .09734 L
.89168 .09734 L
.89207 .09657 L
.89247 .10043 L
.89287 .09966 L
.89365 .09889 L
.89404 .09889 L
.89444 .09811 L
.89521 .09811 L
.8956 .09811 L
.89599 .09811 L
.89637 .09811 L
.89676 .09889 L
.89753 .09811 L
.89829 .09734 L
.89867 .09734 L
.89905 .09734 L
.89942 .09734 L
.8998 .0958 L
.90055 .0958 L
.9013 .0958 L
.90167 .0958 L
.90204 .0958 L
.90241 .0958 L
.90278 .09657 L
.90315 .09657 L
.90352 .0958 L
.90388 .0958 L
.90425 .0958 L
Mistroke
.90461 .0958 L
.90498 .09734 L
.9057 .09734 L
.91137 .09734 L
.91171 .0958 L
.91206 .09811 L
.91275 .09734 L
.91309 .09734 L
.91344 .0958 L
.91378 .0958 L
.91412 .0958 L
.91446 .0958 L
.9148 .09657 L
.91548 .09657 L
.91581 .09734 L
.91615 .09734 L
.91649 .09734 L
.91682 .09657 L
.91715 .09657 L
.91749 .09811 L
.91782 .09811 L
.91815 .09734 L
.91848 .09734 L
.91881 .0958 L
.91914 .09734 L
.91947 .09734 L
.9198 .09734 L
.92013 .09811 L
.92045 .09657 L
.92078 .09657 L
.9211 .09657 L
.92143 .09811 L
.92175 .09657 L
.92208 .09734 L
.9224 .09657 L
.92272 .09734 L
.92304 .09734 L
.92336 .09657 L
.924 .09657 L
.92463 .09657 L
.92527 .09657 L
.9259 .09657 L
.92621 .09657 L
.92652 .09657 L
.92684 .09657 L
.92715 .09734 L
.92746 .09657 L
.92777 .09657 L
.92808 .09657 L
.92839 .09734 L
Mistroke
.9287 .09734 L
.929 .09734 L
.92931 .09734 L
.92962 .09811 L
.93023 .09811 L
.93084 .09811 L
.93144 .09811 L
.93205 .09811 L
.93235 .09811 L
.93265 .09811 L
.93295 .09811 L
.93325 .09734 L
.93354 .09734 L
.93384 .09811 L
.93444 .09734 L
.93473 .09734 L
.93503 .09657 L
.93532 .09657 L
.93562 .09734 L
.9362 .09734 L
.93679 .09734 L
.9391 .09734 L
.93939 .09734 L
.93967 .09734 L
.93996 .09811 L
.94024 .09811 L
.94053 .09811 L
.94081 .09811 L
.94138 .09734 L
.94166 .09734 L
.94194 .09657 L
.94222 .09657 L
.9425 .09657 L
.94278 .0958 L
.94306 .0958 L
.94362 .0958 L
.94389 .0958 L
.94417 .0958 L
.94445 .0958 L
.94472 .09657 L
.94527 .09657 L
.94582 .09657 L
.94637 .09657 L
.94691 .09657 L
.94719 .09657 L
.94746 .09657 L
.94773 .09657 L
.948 .09734 L
.94854 .09734 L
.9488 .09811 L
Mistroke
.94907 .09734 L
.94934 .09811 L
.94961 .09889 L
.95014 .09811 L
.9504 .09811 L
.95067 .09734 L
.9512 .09811 L
.95146 .09734 L
.95172 .09889 L
.95225 .09811 L
.95251 .09889 L
.95277 .09734 L
.95303 .09811 L
.95329 .09811 L
.95381 .09811 L
.95433 .09811 L
.95484 .09811 L
.9551 .09811 L
.95536 .09811 L
.95561 .09889 L
.95587 .09889 L
.95638 .09889 L
.9584 .09889 L
.95865 .09889 L
.9589 .09811 L
.9594 .09811 L
.95965 .09811 L
.9599 .09811 L
.96015 .09811 L
.9604 .09889 L
.96064 .09889 L
.96089 .09889 L
.96114 .09966 L
.96138 .09966 L
.96163 .09966 L
.96187 .09889 L
.96212 .09966 L
.96236 .09966 L
.96261 .10043 L
.96285 .09966 L
.96309 .09966 L
.96334 .10043 L
.96382 .10043 L
.9643 .10043 L
.96454 .10043 L
.96478 .09889 L
.96502 .09966 L
.96526 .10043 L
.9655 .10043 L
.96574 .10043 L
Mistroke
.96598 .09966 L
.96622 .09966 L
.96646 .09966 L
.96669 .09966 L
.96693 .09889 L
.96717 .09889 L
.96764 .09889 L
.96811 .09889 L
.96834 .09889 L
.96858 .09889 L
.96881 .09811 L
.96904 .09811 L
.96928 .0958 L
.96951 .0958 L
.96997 .0958 L
.97021 .0958 L
.97044 .09734 L
.97067 .09734 L
.9709 .0958 L
.97113 .09657 L
.97136 .0958 L
.97159 .09734 L
.97182 .09657 L
.97204 .09657 L
.97227 .09657 L
.9725 .09734 L
.97273 .09734 L
.97318 .09734 L
.97341 .09657 L
.97364 .09734 L
.97409 .09811 L
.97431 .09657 L
.97454 .09889 L
.97476 .09734 L
.97498 .09811 L
.97543 .09811 L
.97565 .09734 L
.97588 .09734 L
.9761 .09734 L
.97632 .09811 L
.97676 .09734 L
.97698 .09657 L
.97721 .09657 L
.97743 .09734 L
.97765 .09657 L
.97787 .09734 L
.97808 .09734 L
.9783 .09657 L
.97852 .09657 L
.97874 .09734 L
Mistroke
.97896 .09734 L
.97918 .09734 L
.97939 .09657 L
.97961 .09734 L
.97983 .09811 L
.98004 .09811 L
.98026 .09657 L
.98069 .09657 L
.9824 .09657 L
.98325 .09657 L
.98409 .09657 L
.98451 .09657 L
.98493 .09657 L
.98514 .09657 L
.98535 .09657 L
.98556 .09657 L
.98576 .0958 L
.98597 .0958 L
.98618 .09734 L
.98659 .09657 L
.98701 .0958 L
.98721 .0958 L
.98742 .09502 L
.98762 .0958 L
.98783 .0958 L
.98803 .0958 L
.98824 .09502 L
.98844 .09502 L
.98864 .0958 L
.98905 .0958 L
.98986 .0958 L
.99067 .0958 L
.99107 .0958 L
.99127 .0958 L
.99147 .0958 L
.99167 .09657 L
.99187 .09657 L
.99226 .09657 L
.99385 .09657 L
.99463 .09657 L
.99541 .09657 L
.9958 .09657 L
.99599 .09657 L
.99618 .09657 L
.99638 .0958 L
.99657 .0958 L
.99696 .0958 L
1 .0958 L
Mfstroke
P
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 56 535 a
 currentpoint currentpoint translate 1 0.43239 div 1 0.43239 div scale
neg exch neg exch translate
 56 535 a 1072 535 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 1072 535 a
93 w Fj(cum)o(ulativ)o(e)12 b(distribution)1682 535 y
 currentpoint grestore moveto

1682 535 a 1135 535 a
 currentpoint currentpoint translate 0.43239 0.43239 scale neg exch
neg exch translate
 1135 535 a @beginspecial 71.730827
@llx 219.177551 @lly 537.981262 @urx 557.906494 @ury
4662 @rwi @setspecial
%%BeginDocument: letter-bst-c4-margin.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.5 0.5 0 0.618034 [
[(-1)] 0 0 0 2 Msboxa
[(-0.5)] .25 0 0 2 Msboxa
[(0.5)] .75 0 0 2 Msboxa
[(1)] 1 0 0 2 Msboxa
[(0.5)] .4875 .30902 1 0 Msboxa
[(1.0)] .4875 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
0 0 m
0 .00625 L
s
P
[(-1)] 0 0 0 2 Mshowa
p
.002 w
.25 0 m
.25 .00625 L
s
P
[(-0.5)] .25 0 0 2 Mshowa
p
.002 w
.75 0 m
.75 .00625 L
s
P
[(0.5)] .75 0 0 2 Mshowa
p
.002 w
1 0 m
1 .00625 L
s
P
[(1)] 1 0 0 2 Mshowa
p
.002 w
0 0 m
0 .00625 L
s
P
p
.002 w
.05 0 m
.05 .00625 L
s
P
p
.002 w
.1 0 m
.1 .00625 L
s
P
p
.002 w
.15 0 m
.15 .00625 L
s
P
p
.002 w
.2 0 m
.2 .00625 L
s
P
p
.002 w
.25 0 m
.25 .00625 L
s
P
p
.002 w
.3 0 m
.3 .00625 L
s
P
p
.002 w
.35 0 m
.35 .00625 L
s
P
p
.002 w
.4 0 m
.4 .00625 L
s
P
p
.002 w
.45 0 m
.45 .00625 L
s
P
p
.002 w
.5 0 m
.5 .00625 L
s
P
p
.002 w
.55 0 m
.55 .00625 L
s
P
p
.002 w
.6 0 m
.6 .00625 L
s
P
p
.002 w
.65 0 m
.65 .00625 L
s
P
p
.002 w
.7 0 m
.7 .00625 L
s
P
p
.002 w
.75 0 m
.75 .00625 L
s
P
p
.002 w
.8 0 m
.8 .00625 L
s
P
p
.002 w
.85 0 m
.85 .00625 L
s
P
p
.002 w
.9 0 m
.9 .00625 L
s
P
p
.002 w
.95 0 m
.95 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
1 0 L
s
P
p
.002 w
.5 .30902 m
.50625 .30902 L
s
P
[(0.5)] .4875 .30902 1 0 Mshowa
p
.002 w
.5 .61803 m
.50625 .61803 L
s
P
[(1.0)] .4875 .61803 1 0 Mshowa
p
.002 w
.5 .0618 m
.50625 .0618 L
s
P
p
.002 w
.5 .12361 m
.50625 .12361 L
s
P
p
.002 w
.5 .18541 m
.50625 .18541 L
s
P
p
.002 w
.5 .24721 m
.50625 .24721 L
s
P
p
.002 w
.5 .30902 m
.50625 .30902 L
s
P
p
.002 w
.5 .37082 m
.50625 .37082 L
s
P
p
.002 w
.5 .43262 m
.50625 .43262 L
s
P
p
.002 w
.5 .49443 m
.50625 .49443 L
s
P
p
.002 w
.5 .55623 m
.50625 .55623 L
s
P
p
.002 w
.5 .61803 m
.50625 .61803 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
.5 0 m
.5 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .005 .01 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.52083 0 L
.54167 0 L
.55208 0 L
.55729 0 L
.5625 0 L
.5651 0 L
.56771 0 L
.56901 0 L
.57031 .00012 L
.57161 .00012 L
.57292 .00012 L
.57422 .0005 L
.57552 .0005 L
.57682 .0005 L
.57813 .0005 L
.58073 .0005 L
.58203 .0005 L
.58333 .0005 L
.58464 .00189 L
.58594 .00189 L
.58724 .00189 L
.58854 .00189 L
.58984 .00189 L
.59115 .00189 L
.59245 .00189 L
.59375 .00224 L
.59505 .00224 L
.59635 .00355 L
.59896 .00355 L
.60156 .00355 L
.60286 .00355 L
.60417 .00355 L
.60547 .00355 L
.60677 .0061 L
.60807 .0061 L
.60938 .0061 L
.61068 .00715 L
Mistroke
.61198 .00715 L
.61328 .00715 L
.61458 .00715 L
.61589 .00718 L
.61719 .00718 L
.61849 .00718 L
.61979 .00954 L
.625 .00954 L
.6276 .00954 L
.62891 .00954 L
.63021 .00954 L
.63151 .01286 L
.63281 .01286 L
.63542 .01286 L
.64583 .01286 L
.65625 .01286 L
.66146 .01286 L
.66406 .01286 L
.66667 .01286 L
.66797 .01286 L
.66927 .01286 L
.67057 .01286 L
.67188 .01329 L
.67318 .01329 L
.67448 .01452 L
.67578 .01452 L
.67708 .01452 L
.67839 .01452 L
.67969 .01877 L
.68099 .01877 L
.68229 .01877 L
.6875 .02043 L
.6901 .02043 L
.69271 .02043 L
.69401 .02043 L
.69531 .02043 L
.69661 .02379 L
.69792 .02379 L
.70313 .03055 L
.70443 .03055 L
.70573 .03484 L
.70703 .03496 L
.70833 .03496 L
.70964 .04009 L
.71094 .04009 L
.71224 .04009 L
.71354 .04009 L
.71615 .04009 L
.71875 .04009 L
.72005 .04009 L
Mistroke
.72135 .0477 L
.72396 .0477 L
.72917 .0477 L
.75 .0477 L
.76042 .0477 L
.76563 .0477 L
.76823 .0477 L
.77083 .0477 L
.77214 .0477 L
.77344 .0477 L
.77474 .10267 L
.77604 .10267 L
.78125 .10267 L
.78646 .10267 L
.78906 .10267 L
.79167 .10267 L
.79297 .10267 L
.79427 .10267 L
.79688 .153 L
.79818 .153 L
.79948 .20179 L
.80208 .20179 L
.80469 .20179 L
.80729 .20179 L
.80859 .20179 L
.8099 .20179 L
.8112 .26394 L
.8125 .26394 L
.8138 .26394 L
.8151 .26394 L
.81641 .26394 L
.81771 .26394 L
.81901 .26394 L
.82031 .29233 L
.82161 .29233 L
.82292 .29233 L
.83333 .29233 L
.875 .29233 L
.91667 .29233 L
.9375 .29233 L
.95833 .29233 L
.96875 .29233 L
.97917 .29233 L
.98438 .29233 L
.98958 .29233 L
.99219 .29233 L
.99479 .29233 L
.99609 .29233 L
.9974 .29233 L
.9987 .29233 L
Mistroke
1 .61803 L
Mfstroke
P
P
p
[ .02 .01 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.54167 0 L
.58333 0 L
.625 0 L
.66667 0 L
.70833 0 L
.72917 0 L
.75 0 L
.75521 0 L
.75781 0 L
.75911 0 L
.76042 0 L
.76172 0 L
.76302 4e-05 L
.76432 4e-05 L
.76563 4e-05 L
.76693 8e-05 L
.76823 .00035 L
.77083 .00108 L
.77344 .00162 L
.77474 .00182 L
.77604 .00228 L
.77865 .00328 L
.78125 .00464 L
.78646 .00784 L
.78906 .00966 L
.79036 .01066 L
.79167 .01128 L
.79427 .01441 L
.79688 .0168 L
.80208 .02213 L
.8125 .03704 L
.81771 .04736 L
.82292 .06045 L
.82813 .07598 L
.83073 .08591 L
.83333 .09819 L
.85417 .22732 L
Mistroke
.86458 .32366 L
.875 .39751 L
.88542 .45209 L
.89583 .49794 L
.90625 .5339 L
.91667 .56287 L
.92188 .57411 L
.92318 .57435 L
.92448 .5784 L
.92578 .58485 L
.92708 .58524 L
.93229 .59269 L
.9375 .60007 L
.94271 .60602 L
.94792 .61089 L
.94922 .61135 L
.95052 .61286 L
.95182 .61317 L
.95313 .61324 L
.95443 .61379 L
.95573 .61487 L
.95703 .61514 L
.95833 .61541 L
.96354 .6163 L
.96484 .61684 L
.96615 .61718 L
.96745 .61718 L
.96875 .61722 L
.97005 .61753 L
.97135 .61765 L
.97266 .61765 L
.97396 .61776 L
.97917 .61788 L
.98047 .61803 L
.98177 .61803 L
.98307 .61803 L
.98438 .61803 L
.98958 .61803 L
1 .61803 L
Mfstroke
P
P
p
[ .2 0 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.54167 0 L
.58333 0 L
.625 0 L
.66667 0 L
.70833 0 L
.75 0 L
.76042 0 L
.76563 0 L
.76823 0 L
.77083 0 L
.77344 0 L
.77474 0 L
.77604 .00027 L
.77865 .00147 L
.77995 .00193 L
.78125 .00239 L
.78255 .00336 L
.78385 .00417 L
.78646 .00599 L
.79167 .00993 L
.79688 .01479 L
.80208 .02067 L
.8125 .03643 L
.81771 .04701 L
.82292 .06149 L
.82813 .07822 L
.83333 .09807 L
.83854 .12558 L
.84375 .15679 L
.85417 .2454 L
.86458 .35973 L
.86719 .38693 L
.86849 .40126 L
.86979 .41404 L
.8724 .43038 L
.875 .44398 L
.88542 .49141 L
Mistroke
.89063 .5137 L
.89323 .52471 L
.89453 .53093 L
.89583 .53665 L
.89714 .53978 L
.89844 .54437 L
.90104 .55183 L
.90625 .56558 L
.91146 .57794 L
.91667 .58841 L
.91927 .59293 L
.92188 .59671 L
.92708 .6022 L
.93229 .60699 L
.9375 .61093 L
.94271 .61379 L
.94531 .61514 L
.94661 .6156 L
.94792 .61622 L
.94922 .61645 L
.95052 .61668 L
.95182 .61699 L
.95313 .6173 L
.95443 .61765 L
.95573 .61769 L
.95703 .6178 L
.95833 .61792 L
.96354 .618 L
.96484 .61803 L
.96615 .61803 L
.96875 .61803 L
.97917 .61803 L
1 .61803 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 1135 535 a
 currentpoint currentpoint translate 1 0.43239 div 1 0.43239 div scale
neg exch neg exch translate
 1135 535 a 391 581 a Fj(#)h(rounds)931
b(margin)-75 690 y(Figure)17 b(2:)25 b(Error)18 b(curv)o(es)h(and)e
(the)h(margin)d(distribution)i(graph)g(for)g(b)q(o)q(osting)g(C4.5)g
(on)g(the)h(letter)g(dataset)g(as)f(rep)q(orted)i(b)o(y)-75
736 y(Sc)o(hapire)c(et)g(al.)f([32)o(].)20 b Ff(L)n(eft)p
Fj(:)f(the)c(training)f(and)h(test)g(error)h(curv)o(es)g(\(lo)o(w)o(er)
e(and)h(upp)q(er)h(curv)o(es,)f(resp)q(ectiv)o(ely\))i(of)d(the)h(com)o
(bined)-75 781 y(classi\014er)h(as)f(a)f(function)h(of)f(the)i(n)o(um)o
(b)q(er)e(of)g(rounds)i(of)e(b)q(o)q(osting.)21 b(The)15
b(horizon)o(tal)f(lines)h(indicate)g(the)h(test)g(error)g(rate)f(of)f
(the)-75 827 y(base)f(classi\014er)h(as)f(w)o(ell)f(as)h(the)g(test)h
(error)g(of)e(the)h(\014nal)g(com)o(bined)e(classi\014er.)19
b Ff(R)o(ight)p Fj(:)e(The)c(cum)o(ulativ)o(e)e(distribution)h(of)h
(margins)-75 873 y(of)j(the)h(training)e(examples)h(after)g(5,)g(100)g
(and)g(1000)f(iterations,)i(indicated)f(b)o(y)g(short-dashed,)i
(long-dashed)e(\(mostly)f(hidden\))-75 918 y(and)f(solid)f(curv)o(es,)i
(resp)q(ectiv)o(ely)m(.)-75 1042 y(distribution)e Fi(D)185
1048 y Fg(t)214 1042 y Fj(on)h(whic)o(h)g(the)g(w)o(eak)g(learner)g(w)o
(as)g(trained.)-33 1089 y(In)c(practice,)h(the)g(w)o(eak)f(learner)h
(ma)o(y)d(b)q(e)j(an)f(algorithm)d(that)-75 1134 y(can)13
b(use)h(the)g(w)o(eigh)o(ts)f Fi(D)323 1140 y Fg(t)351
1134 y Fj(on)g(the)h(training)e(examples.)17 b(Alter-)-75
1180 y(nativ)o(ely)m(,)11 b(when)j(this)f(is)g(not)g(p)q(ossible,)g(a)f
(subset)j(of)d(the)i(train-)-75 1226 y(ing)d(examples)h(can)g(b)q(e)h
(sampled)e(according)h(to)g Fi(D)727 1232 y Fg(t)742
1226 y Fj(,)g(and)g(these)-75 1271 y(\(un)o(w)o(eigh)o(ted\))17
b(resampled)g(examples)f(can)h(b)q(e)g(used)h(to)f(train)-75
1317 y(the)d(w)o(eak)g(learner.)-33 1363 y(Once)h(the)f(w)o(eak)g(h)o
(yp)q(othesis)h Fi(h)477 1369 y Fg(t)505 1363 y Fj(has)g(b)q(een)g
(receiv)o(ed,)g(Ada-)-75 1409 y(Bo)q(ost)20 b(c)o(ho)q(oses)h(a)f
(parameter)f Fi(\013)475 1415 y Fg(t)509 1409 y Fj(as)h(in)g(the)g
(\014gure.)37 b(In)o(tu-)-75 1454 y(itiv)o(ely)m(,)15
b Fi(\013)89 1460 y Fg(t)120 1454 y Fj(measures)i(the)g(imp)q(ortance)f
(that)h(is)g(assigned)g(to)-75 1500 y Fi(h)-51 1506 y
Fg(t)-36 1500 y Fj(.)k(Note)15 b(that)g Fi(\013)216 1506
y Fg(t)244 1500 y Fe(\025)f Fj(0)g(if)h Fi(\017)382 1506
y Fg(t)409 1500 y Fe(\024)f Fj(1)p Fi(=)p Fj(2)g(\(whic)o(h)h(w)o(e)h
(can)f(assume)-75 1546 y(without)f(loss)g(of)f(generalit)o(y\),)g(and)h
(that)g Fi(\013)623 1552 y Fg(t)651 1546 y Fj(gets)h(larger)f(as)g
Fi(\017)923 1552 y Fg(t)-75 1591 y Fj(gets)h(smaller.)-33
1637 y(The)20 b(distribution)g Fi(D)325 1643 y Fg(t)360
1637 y Fj(is)f(next)i(up)q(dated)g(using)f(the)g(rule)-75
1683 y(sho)o(wn)13 b(in)g(the)h(\014gure.)k(The)c(e\013ect)h(of)d(this)
i(rule)f(is)g(to)g(increase)-75 1729 y(the)19 b(w)o(eigh)o(t)e(of)h
(examples)f(misclassi\014ed)g(b)o(y)h Fi(h)697 1735 y
Fg(t)712 1729 y Fj(,)g(and)g(to)g(de-)-75 1774 y(crease)d(the)f(w)o
(eigh)o(t)f(of)f(correctly)j(classi\014ed)f(examples.)j(Th)o(us,)-75
1820 y(the)d(w)o(eigh)o(t)g(tends)h(to)f(concen)o(trate)h(on)f(\\hard")
f(examples.)-33 1866 y(The)h Ff(\014nal)i(hyp)n(othesis)e
Fi(H)j Fj(is)d(a)g(w)o(eigh)o(ted)g(ma)r(jorit)o(y)e(v)o(ote)i(of)-75
1912 y(the)i Fi(T)21 b Fj(w)o(eak)15 b(h)o(yp)q(otheses)i(where)f
Fi(\013)509 1918 y Fg(t)539 1912 y Fj(is)f(the)g(w)o(eigh)o(t)g
(assigned)-75 1957 y(to)f Fi(h)0 1963 y Fg(t)14 1957
y Fj(.)-33 2004 y(Sc)o(hapire)h(and)g(Singer)g([33)o(])g(sho)o(w)g(ho)o
(w)g(AdaBo)q(ost)g(and)g(its)-75 2049 y(analysis)22 b(can)h(b)q(e)g
(extended)h(to)f(handle)f(w)o(eak)h(h)o(yp)q(otheses)-75
2095 y(whic)o(h)10 b(output)h(real-v)n(alued)f(or)h Ff(c)n(on\014denc)n
(e-r)n(ate)n(d)g Fj(predictions.)-75 2140 y(That)h(is,)g(for)f(eac)o(h)
i(instance)g Fi(x)p Fj(,)e(the)i(w)o(eak)f(h)o(yp)q(othesis)g
Fi(h)837 2146 y Fg(t)864 2140 y Fj(out-)-75 2186 y(puts)j(a)g
(prediction)g Fi(h)275 2192 y Fg(t)290 2186 y Fj(\()p
Fi(x)p Fj(\))e Fe(2)f Fa(R)d Fj(whose)15 b(sign)g(is)g(the)g(predicted)
-75 2232 y(lab)q(el)i(\()p Fe(\000)p Fj(1)h(or)f(+1\))h(and)f(whose)h
(magnitude)e Fe(j)p Fi(h)712 2238 y Fg(t)726 2232 y Fj(\()p
Fi(x)p Fj(\))p Fe(j)h Fj(giv)o(es)h(a)-75 2277 y(measure)c(of)f
(\\con\014dence")i(in)f(the)g(prediction.)-75 2379 y
Fm(Analyzing)k(the)g(training)g(error)-75 2442 y Fj(The)h(most)d(basic)
j(theoretical)f(prop)q(ert)o(y)h(of)f(AdaBo)q(ost)g(con-)-75
2488 y(cerns)k(its)f(abilit)o(y)e(to)i(reduce)i(the)e(training)f
(error.)40 b(Let)21 b(us)-75 2534 y(write)12 b(the)h(error)f
Fi(\017)215 2540 y Fg(t)241 2534 y Fj(of)g Fi(h)311 2540
y Fg(t)337 2534 y Fj(as)391 2517 y Fh(1)p 391 2524 17
2 v 391 2548 a(2)417 2534 y Fe(\000)5 b Fi(\015)475 2540
y Fg(t)491 2534 y Fj(.)17 b(Since)12 b(a)g(h)o(yp)q(othesis)g(that)-75
2579 y(guesses)h(eac)o(h)g(instance's)f(class)g(at)g(random)e(has)i(an)
f(error)i(rate)-75 2625 y(of)e(1)p Fi(=)p Fj(2)f(\(on)h(binary)g
(problems\),)f Fi(\015)466 2631 y Fg(t)493 2625 y Fj(th)o(us)h
(measures)h(ho)o(w)f(m)o(uc)o(h)1013 1042 y(b)q(etter)21
b(than)f(random)e(are)i Fi(h)1502 1048 y Fg(t)1517 1042
y Fj('s)f(predictions.)37 b(F)m(reund)20 b(and)1013 1088
y(Sc)o(hapire)15 b([18)o(])f(pro)o(v)o(e)h(that)g(the)g(training)f
(error)i(\(the)f(fraction)1013 1134 y(of)h(mistak)o(es)g(on)g(the)i
(training)e(set\))i(of)e(the)i(\014nal)e(h)o(yp)q(othesis)1013
1179 y Fi(H)g Fj(is)e(at)g(most)1135 1221 y Fb(Y)1155
1308 y Fg(t)1195 1214 y Fb(h)1215 1260 y Fj(2)1236 1223
y Fb(p)p 1277 1223 167 2 v 1277 1260 a Fi(\017)1294 1266
y Fg(t)1308 1260 y Fj(\(1)c Fe(\000)f Fi(\017)1413 1266
y Fg(t)1428 1260 y Fj(\))1444 1214 y Fb(i)1505 1260 y
Fj(=)1579 1221 y Fb(Y)1599 1308 y Fg(t)1639 1209 y Fb(q)p
1680 1209 135 2 v 1680 1260 a Fj(1)g Fe(\000)h Fj(4)p
Fi(\015)1796 1246 y Fh(2)1794 1270 y Fg(t)1505 1401 y
Fe(\024)42 b Fj(exp)1649 1330 y Fb( )1682 1401 y Fe(\000)p
Fj(2)1742 1362 y Fb(X)1765 1449 y Fg(t)1809 1401 y Fi(\015)1832
1384 y Fh(2)1830 1412 y Fg(t)1851 1330 y Fb(!)1891 1401
y Fi(:)69 b Fj(\(1\))1013 1508 y(Th)o(us,)11 b(if)f(eac)o(h)i(w)o(eak)e
(h)o(yp)q(othesis)i(is)f(sligh)o(tly)f(b)q(etter)i(than)f(ran-)1013
1554 y(dom)k(so)i(that)g Fi(\015)1276 1560 y Fg(t)1307
1554 y Fe(\025)g Fi(\015)j Fj(for)d(some)f Fi(\015)j(>)e
Fj(0,)g(then)g(the)h(training)1013 1600 y(error)c(drops)h(exp)q(onen)o
(tially)e(fast.)1054 1645 y(A)g(similar)d(prop)q(ert)o(y)k(is)e(enjo)o
(y)o(ed)h(b)o(y)f(previous)h(b)q(o)q(osting)g(al-)1013
1691 y(gorithms.)30 b(Ho)o(w)o(ev)o(er,)20 b(previous)f(algorithms)d
(required)k(that)1013 1737 y(suc)o(h)e(a)f(lo)o(w)o(er)g(b)q(ound)h
Fi(\015)i Fj(b)q(e)e(kno)o(wn)f(a)h(priori)e(b)q(efore)j(b)q(o)q(ost-)
1013 1782 y(ing)e(b)q(egins.)31 b(In)18 b(practice,)h(kno)o(wledge)f
(of)f(suc)o(h)i(a)f(b)q(ound)g(is)1013 1828 y(v)o(ery)12
b(di\016cult)g(to)g(obtain.)17 b(AdaBo)q(ost,)12 b(on)g(the)h(other)g
(hand,)f(is)1013 1874 y Ff(adaptive)j Fj(in)f(that)g(it)h(adapts)f(to)h
(the)g(error)g(rates)h(of)e(the)h(indi-)1013 1919 y(vidual)c(w)o(eak)h
(h)o(yp)q(otheses.)20 b(This)12 b(is)h(the)g(basis)f(of)g(its)h(name)e
(|)1013 1965 y(\\Ada")i(is)h(short)g(for)g(\\adaptiv)o(e.")1054
2011 y(The)c(b)q(ound)g(giv)o(en)g(in)f(Eq.)h(\(1\),)g(com)o(bined)e
(with)i(the)g(b)q(ounds)1013 2056 y(on)g(generalization)h(error)h(giv)o
(en)e(b)q(elo)o(w)h(pro)o(v)o(e)g(that)g(AdaBo)q(ost)1013
2102 y(is)16 b(indeed)h(a)f(b)q(o)q(osting)h(algorithm)c(in)k(the)g
(sense)h(that)f(it)f(can)1013 2148 y(e\016cien)o(tly)d(con)o(v)o(ert)g
(a)g(w)o(eak)g(learning)g(algorithm)e(\(whic)o(h)i(can)1013
2193 y(alw)o(a)o(ys)h(generate)k(a)d(h)o(yp)q(othesis)i(with)f(a)f(w)o
(eak)h(edge)h(for)e(an)o(y)1013 2239 y(distribution\))10
b(in)o(to)g(a)h(strong)g(learning)f(algorithm)e(\(whic)o(h)j(can)1013
2285 y(generate)j(a)f(h)o(yp)q(othesis)h(with)f(an)g(arbitrarily)f(lo)o
(w)h(error)h(rate,)1013 2330 y(giv)o(en)f(su\016cien)o(t)h(data\).)1013
2427 y Fm(Generalization)i(error)1013 2488 y Fj(F)m(reund)24
b(and)f(Sc)o(hapire)h([18)o(])g(sho)o(w)o(ed)g(ho)o(w)f(to)h(b)q(ound)f
(the)1013 2534 y(generalization)17 b(error)i(of)e(the)i(\014nal)e(h)o
(yp)q(othesis)h(in)g(terms)g(of)1013 2579 y(its)i(training)g(error,)i
(the)f(size)h Fi(m)f Fj(of)f(the)h(sample,)f(the)h(V)o(C-)1013
2625 y(dimension)11 b Fi(d)j Fj(of)f(the)h(w)o(eak)f(h)o(yp)q(othesis)h
(space)h(and)e(the)i(n)o(um-)965 2750 y(2)p eop
%%Page: 3 3
3 2 bop 93 723 a
 currentpoint currentpoint translate 0.4611 0.4611 scale neg exch neg
exch translate
 93 723 a @beginspecial 83.685966 @llx
232.128952 @lly 539.973816 @urx 647.570068 @ury 4563
@rwi @clip @setspecial
%%BeginDocument: c4-vs-booststump.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting stumps)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting stumps)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.0294 .08525 Mdot
.27052 .46602 Mdot
.27314 .63749 Mdot
.1588 .18859 Mdot
.54306 .61649 Mdot
.48351 .8299 Mdot
.84427 .90926 Mdot
.68378 .66943 Mdot
.54903 .76723 Mdot
.29864 .39521 Mdot
.26172 .27291 Mdot
.1282 .12053 Mdot
.27226 .31032 Mdot
.42563 .46446 Mdot
.14771 .16291 Mdot
.70631 .8157 Mdot
.75244 .85769 Mdot
.53161 .08426 Mdot
.71797 .84432 Mdot
.14138 .1236 Mdot
.05277 .04721 Mdot
.1069 .08403 Mdot
.14704 .18593 Mdot
.14703 .03892 Mdot
.44135 .43716 Mdot
.02381 .02381 Mdot
.97549 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 93 723 a
 currentpoint currentpoint translate 1 0.4611 div 1 0.4611 div scale
neg exch neg exch translate
 93 723 a 1122 723 a
 currentpoint currentpoint translate 0.46112 0.46112 scale neg exch
neg exch translate
 1122 723 a
@beginspecial 157.409332 @llx 232.128952 @lly 539.973816
@urx 647.570068 @ury 3825 @rwi @clip @setspecial
%%BeginDocument: c4-vs-boostc4.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.11737 .08525 Mdot
.38875 .46602 Mdot
.16473 .63749 Mdot
.16438 .18859 Mdot
.48033 .61649 Mdot
.55333 .8299 Mdot
.65765 .90926 Mdot
.47608 .66943 Mdot
.62915 .76723 Mdot
.21434 .39521 Mdot
.18693 .27291 Mdot
.16495 .12053 Mdot
.31486 .31032 Mdot
.40991 .46446 Mdot
.11615 .16291 Mdot
.74111 .8157 Mdot
.6547 .85769 Mdot
.02381 .08426 Mdot
.72276 .84432 Mdot
.06276 .1236 Mdot
.05127 .04721 Mdot
.0812 .08403 Mdot
.15927 .18593 Mdot
.03255 .03892 Mdot
.27259 .43716 Mdot
.02381 .02381 Mdot
.11716 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 1122 723 a
 currentpoint currentpoint translate 1 0.46112 div 1 0.46112 div scale
neg exch neg exch translate
 1122 723 a 93 802 a
 currentpoint currentpoint translate 0.4611 0.4611 scale neg exch neg
exch translate
 93 802 a
@beginspecial 83.685966 @llx 159.401855 @lly 539.973816
@urx 198.256058 @ury 4563 @rwi @clip @setspecial
%%BeginDocument: c4-vs-booststump.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting stumps)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting stumps)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.0294 .08525 Mdot
.27052 .46602 Mdot
.27314 .63749 Mdot
.1588 .18859 Mdot
.54306 .61649 Mdot
.48351 .8299 Mdot
.84427 .90926 Mdot
.68378 .66943 Mdot
.54903 .76723 Mdot
.29864 .39521 Mdot
.26172 .27291 Mdot
.1282 .12053 Mdot
.27226 .31032 Mdot
.42563 .46446 Mdot
.14771 .16291 Mdot
.70631 .8157 Mdot
.75244 .85769 Mdot
.53161 .08426 Mdot
.71797 .84432 Mdot
.14138 .1236 Mdot
.05277 .04721 Mdot
.1069 .08403 Mdot
.14704 .18593 Mdot
.14703 .03892 Mdot
.44135 .43716 Mdot
.02381 .02381 Mdot
.97549 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 93 802 a
 currentpoint currentpoint translate 1 0.4611 div 1 0.4611 div scale
neg exch neg exch translate
 93 802 a 1122 802 a
 currentpoint currentpoint translate 0.46112 0.46112 scale neg exch
neg exch translate
 1122 802 a
@beginspecial 157.409332 @llx 159.401855 @lly 539.973816
@urx 198.256058 @ury 3825 @rwi @clip @setspecial
%%BeginDocument: c4-vs-boostc4.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.11737 .08525 Mdot
.38875 .46602 Mdot
.16473 .63749 Mdot
.16438 .18859 Mdot
.48033 .61649 Mdot
.55333 .8299 Mdot
.65765 .90926 Mdot
.47608 .66943 Mdot
.62915 .76723 Mdot
.21434 .39521 Mdot
.18693 .27291 Mdot
.16495 .12053 Mdot
.31486 .31032 Mdot
.40991 .46446 Mdot
.11615 .16291 Mdot
.74111 .8157 Mdot
.6547 .85769 Mdot
.02381 .08426 Mdot
.72276 .84432 Mdot
.06276 .1236 Mdot
.05127 .04721 Mdot
.0812 .08403 Mdot
.15927 .18593 Mdot
.03255 .03892 Mdot
.27259 .43716 Mdot
.02381 .02381 Mdot
.11716 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 1122 802 a
 currentpoint currentpoint translate 1 0.46112 div 1 0.46112 div scale
neg exch neg exch translate
 1122 802 a -75 910 a Fj(Figure)18
b(3:)25 b(Comparison)16 b(of)h(C4.5)f(v)o(ersus)j(b)q(o)q(osting)f
(stumps)f(and)g(b)q(o)q(osting)h(C4.5)e(on)i(a)f(set)i(of)e(27)g(b)q
(enc)o(hmark)g(problems)g(as)-75 956 y(rep)q(orted)e(b)o(y)e(F)m(reund)
g(and)g(Sc)o(hapire)h([16)o(].)j(Eac)o(h)c(p)q(oin)o(t)g(in)g(eac)o(h)g
(scatterplot)h(sho)o(ws)g(the)f(test)i(error)f(rate)f(of)g(the)g(t)o(w)
o(o)g(comp)q(eting)-75 1001 y(algorithms)g(on)i(a)f(single)h(b)q(enc)o
(hmark.)21 b(The)16 b Fi(y)q Fj(-co)q(ordinate)g(of)e(eac)o(h)i(p)q
(oin)o(t)f(giv)o(es)f(the)i(test)g(error)g(rate)g(\(in)f(p)q(ercen)o
(t\))i(of)d(C4.5)g(on)-75 1047 y(the)f(giv)o(en)f(b)q(enc)o(hmark,)f
(and)i(the)g Fi(x)p Fj(-co)q(ordinate)f(giv)o(es)g(the)h(error)g(rate)g
(of)f(b)q(o)q(osting)g(stumps)g(\(left)g(plot\))g(or)g(b)q(o)q(osting)g
(C4.5)f(\(righ)o(t)-75 1093 y(plot\).)18 b(All)13 b(error)h(rates)h(ha)
o(v)o(e)f(b)q(een)h(a)o(v)o(eraged)f(o)o(v)o(er)g(m)o(ultiple)d(runs.)
-75 1219 y(b)q(er)19 b(of)e(rounds)i Fi(T)24 b Fj(of)18
b(b)q(o)q(osting.)30 b(\(The)19 b(V)o(C-dimension)d(is)i(a)-75
1265 y(standard)d(measure)g(of)f(the)i(\\complexit)o(y")c(of)i(a)h
(space)h(of)e(h)o(y-)-75 1311 y(p)q(otheses.)27 b(See,)18
b(for)e(instance,)h(Blumer)f(et)g(al.)g([4)o(].\))25
b(Sp)q(eci\014-)-75 1356 y(cally)m(,)13 b(they)h(used)h(tec)o(hniques)h
(from)c(Baum)h(and)i(Haussler)g([3)o(])-75 1402 y(to)g(sho)o(w)h(that)g
(the)g(generalization)f(error,)i(with)e(high)g(proba-)-75
1448 y(bilit)o(y)m(,)c(is)j(at)g(most)183 1616 y(^)179
1627 y(Pr)7 b([)p Fi(H)s Fj(\()p Fi(x)p Fj(\))k Fe(6)p
Fj(=)h Fi(y)r Fj(])d(+)485 1616 y(~)475 1627 y Fi(O)515
1556 y Fb( )548 1560 y(r)p 589 1560 62 2 v 594 1599 a
Fi(T)d(d)p 594 1617 52 2 v 602 1655 a(m)651 1556 y Fb(!)-75
1816 y Fj(where)52 1806 y(^)48 1816 y(Pr)h([)p Fe(\001)o
Fj(])16 b(denotes)i(empirical)d(probabilit)o(y)g(on)i(the)g(train-)-75
1862 y(ing)22 b(sample.)44 b(This)22 b(b)q(ound)h(suggests)h(that)f(b)q
(o)q(osting)g(will)-75 1907 y(o)o(v)o(er\014t)c(if)e(run)i(for)f(to)q
(o)h(man)o(y)d(rounds,)k(i.e.,)e(as)h Fi(T)24 b Fj(b)q(ecomes)-75
1953 y(large.)18 b(In)13 b(fact,)g(this)h(sometimes)e(do)q(es)i(happ)q
(en.)k(Ho)o(w)o(ev)o(er,)c(in)-75 1999 y(early)k(exp)q(erimen)o(ts,)h
(sev)o(eral)g(authors)f([8)o(,)g(12,)f(28])g(observ)o(ed)-75
2044 y(empirically)h(that)i(b)q(o)q(osting)g(often)g(do)q(es)h
Ff(not)j Fj(o)o(v)o(er\014t,)e(ev)o(en)-75 2090 y(when)14
b(run)f(for)g(thousands)h(of)f(rounds.)18 b(Moreo)o(v)o(er,)c(it)f(w)o
(as)g(ob-)-75 2136 y(serv)o(ed)e(that)f(AdaBo)q(ost)h(w)o(ould)e
(sometimes)f(con)o(tin)o(ue)j(to)e(driv)o(e)-75 2181
y(do)o(wn)k(the)i(generalization)e(error)i(long)e(after)h(the)g
(training)f(er-)-75 2227 y(ror)j(had)g(reac)o(hed)h(zero,)f(clearly)g
(con)o(tradicting)f(the)h(spirit)g(of)-75 2273 y(the)j(b)q(ound)f(ab)q
(o)o(v)o(e.)30 b(F)m(or)18 b(instance,)h(the)g(left)f(side)g(of)g(Fig.)
f(2)-75 2318 y(sho)o(ws)22 b(the)g(training)e(and)i(test)g(curv)o(es)h
(of)e(running)g(b)q(o)q(ost-)-75 2364 y(ing)d(on)g(top)g(of)f
(Quinlan's)h(C4.5)f(decision-tree)j(learning)d(al-)-75
2410 y(gorithm)12 b([29)o(])h(on)h(the)g(\\letter")h(dataset.)-33
2488 y(In)66 b(resp)q(onse)i(to)e(these)i(empirical)c(\014ndings,)-75
2534 y(Sc)o(hapire)19 b(et)f(al.)f([32)o(],)h(follo)o(wing)e(the)j(w)o
(ork)f(of)f(Bartlett)i([1)o(],)-75 2579 y(ga)o(v)o(e)d(an)g(alternativ)
o(e)g(analysis)f(in)h(terms)g(of)g(the)h Ff(mar)n(gins)i
Fj(of)-75 2625 y(the)d(training)e(examples.)22 b(The)16
b(margin)d(of)i(example)f(\()p Fi(x;)7 b(y)q Fj(\))16
b(is)1013 1219 y(de\014ned)e(to)g(b)q(e)1397 1269 y Fi(y)1426
1229 y Fb(X)1450 1316 y Fg(t)1493 1269 y Fi(\013)1520
1275 y Fg(t)1534 1269 y Fi(h)1558 1275 y Fg(t)1573 1269
y Fj(\()p Fi(x)p Fj(\))p 1397 1327 232 2 v 1459 1336
a Fb(X)1483 1423 y Fg(t)1526 1376 y Fi(\013)1553 1382
y Fg(t)1634 1337 y Fi(:)1013 1481 y Fj(It)e(is)g(a)g(n)o(um)o(b)q(er)g
(in)g([)p Fe(\000)p Fj(1)p Fi(;)7 b Fj(+1])k(whic)o(h)h(is)g(p)q
(ositiv)o(e)g(if)g(and)g(only)g(if)1013 1527 y Fi(H)18
b Fj(correctly)f(classi\014es)f(the)h(example.)22 b(Moreo)o(v)o(er,)16
b(the)g(mag-)1013 1572 y(nitude)d(of)g(the)h(margin)e(can)i(b)q(e)g(in)
o(terpreted)h(as)f(a)f(measure)h(of)1013 1618 y(con\014dence)g(in)e
(the)h(prediction.)18 b(Sc)o(hapire)12 b(et)h(al.)k(pro)o(v)o(ed)c
(that)1013 1664 y(larger)18 b(margins)f(on)h(the)h(training)f(set)h
(translate)g(in)o(to)f(a)g(su-)1013 1709 y(p)q(erior)c(upp)q(er)g(b)q
(ound)g(on)g(the)g(generalization)f(error.)19 b(Sp)q(eci\014-)1013
1755 y(cally)m(,)12 b(the)i(generalization)f(error)i(is)f(at)g(most)
1193 1860 y(^)1189 1870 y(Pr)7 b([margin\()p Fi(x;)g(y)q
Fj(\))12 b Fe(\024)g Fi(\022)q Fj(])d(+)1625 1860 y(~)1616
1870 y Fi(O)1655 1799 y Fb( )1688 1804 y(r)p 1730 1804
86 2 v 1762 1842 a Fi(d)p 1735 1861 76 2 v 1735 1899
a(m\022)1791 1887 y Fh(2)1815 1799 y Fb(!)1013 1985 y
Fj(for)g(an)o(y)g Fi(\022)k(>)f Fj(0)d(with)g(high)g(probabilit)o(y)m
(.)14 b(Note)c(that)f(this)h(b)q(ound)1013 2031 y(is)18
b(en)o(tirely)h(indep)q(enden)o(t)g(of)f Fi(T)6 b Fj(,)20
b(the)f(n)o(um)o(b)q(er)f(of)f(rounds)j(of)1013 2077
y(b)q(o)q(osting.)c(In)c(addition,)e(Sc)o(hapire)i(et)g(al.)17
b(pro)o(v)o(ed)11 b(that)h(b)q(o)q(ost-)1013 2122 y(ing)d(is)h
(particularly)f(aggressiv)o(e)h(at)g(reducing)h(the)g(margin)d(\(in)h
(a)1013 2168 y(quan)o(ti\014able)i(sense\))j(since)e(it)g(concen)o
(trates)i(on)e(the)h(examples)1013 2213 y(with)c(the)i(smallest)d
(margins)g(\(whether)k(p)q(ositiv)o(e)e(or)f(negativ)o(e\).)1013
2259 y(Bo)q(osting's)i(e\013ect)j(on)e(the)g(margins)e(can)j(b)q(e)f
(seen)h(empirically)m(,)1013 2305 y(for)g(instance,)h(on)g(the)h(righ)o
(t)e(side)h(of)g(Fig.)f(2)g(whic)o(h)h(sho)o(ws)g(the)1013
2350 y(cum)o(ulativ)o(e)j(distribution)j(of)f(margins)f(of)h(the)h
(training)f(ex-)1013 2396 y(amples)14 b(on)h(the)h(\\letter")h
(dataset.)23 b(In)16 b(this)g(case,)g(ev)o(en)h(after)1013
2442 y(the)12 b(training)g(error)h(reac)o(hes)h(zero,)f(b)q(o)q(osting)
f(con)o(tin)o(ues)h(to)g(in-)1013 2487 y(crease)18 b(the)f(margins)e
(of)g(the)j(training)d(examples)h(e\013ecting)h(a)1013
2533 y(corresp)q(onding)d(drop)g(in)g(the)g(test)h(error.)1054
2579 y(A)o(ttempts)j(\(not)f(alw)o(a)o(ys)g(successful\))j(to)d(use)i
(the)f(insigh)o(ts)1013 2625 y(gleaned)k(from)e(the)j(theory)g(of)f
(margins)f(ha)o(v)o(e)h(b)q(een)h(made)965 2750 y(3)p
eop
%%Page: 4 4
4 3 bop -75 631 a
 currentpoint currentpoint translate 0.672 0.672 scale neg exch neg
exch translate
 -75 631 a @beginspecial 50 @llx 50
@lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: reut_disj_top_comp.ps
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
LTb
LTa
828 720 M
6264 0 V
LTb
828 720 M
63 0 V
6201 0 R
-63 0 V
720 720 M
(0) Rshow
LTa
828 1238 M
3717 0 V
2439 0 R
108 0 V
LTb
828 1238 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(2) Rshow
LTa
828 1755 M
6264 0 V
LTb
828 1755 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(4) Rshow
LTa
828 2273 M
6264 0 V
LTb
828 2273 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(6) Rshow
LTa
828 2790 M
6264 0 V
LTb
828 2790 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(8) Rshow
LTa
828 3308 M
6264 0 V
LTb
828 3308 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(10) Rshow
LTa
828 3825 M
6264 0 V
LTb
828 3825 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(12) Rshow
LTa
828 4343 M
6264 0 V
LTb
828 4343 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(14) Rshow
LTa
828 4860 M
6264 0 V
LTb
828 4860 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(16) Rshow
LTa
1275 720 M
0 4140 V
LTb
1275 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(3) Cshow
LTa
3065 720 M
0 4140 V
LTb
3065 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(4) Cshow
LTa
4855 720 M
0 63 V
0 900 R
0 3177 V
LTb
4855 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(5) Cshow
LTa
6645 720 M
0 63 V
0 900 R
0 3177 V
LTb
6645 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(6) Cshow
LTb
828 720 M
6264 0 V
0 4140 V
-6264 0 V
828 720 L
380 2790 M
currentpoint gsave translate 90 rotate 0 0 M
(% Error) Cshow
grestore
3960 270 M
(Number of Classes) Cshow
1.500 UP
1.000 UL
LT0
6273 1593 M
(AdaBoost) Rshow
6381 1593 M
495 0 V
1275 1163 M
1790 130 V
1790 427 V
1790 90 V
1275 1163 Pls
3065 1293 Pls
4855 1720 Pls
6645 1810 Pls
6628 1593 Pls
1.500 UP
1.000 UL
LT1
6273 1413 M
(Sleeping-experts) Rshow
6381 1413 M
495 0 V
1275 1884 M
1790 458 V
1790 754 V
1790 195 V
1275 1884 Crs
3065 2342 Crs
4855 3096 Crs
6645 3291 Crs
6628 1413 Crs
1.500 UP
1.000 UL
LT2
6273 1233 M
(Rocchio) Rshow
6381 1233 M
495 0 V
1275 4527 M
1790 -90 V
1790 228 V
1790 33 V
1275 4527 Star
3065 4437 Star
4855 4665 Star
6645 4698 Star
6628 1233 Star
1.500 UP
1.000 UL
LT3
6273 1053 M
(Naive-Bayes) Rshow
6381 1053 M
495 0 V
1275 1917 M
1790 200 V
1790 218 V
1790 272 V
1275 1917 Box
3065 2117 Box
4855 2335 Box
6645 2607 Box
6628 1053 Box
1.500 UP
1.000 UL
LT4
6273 873 M
(PrTFIDF) Rshow
6381 873 M
495 0 V
1275 3811 M
1790 233 V
1790 -11 V
1790 80 V
1275 3811 BoxF
3065 4044 BoxF
4855 4033 BoxF
6645 4113 BoxF
6628 873 BoxF
stroke
grestore
end
showpage
%%EndDocument
 @endspecial -75 631 a
 currentpoint currentpoint translate 1 0.672 div 1 0.672 div scale
neg exch neg exch translate
 -75 631 a 1017 631 a
 currentpoint currentpoint translate 0.672 0.672 scale neg exch neg
exch translate
 1017 631
a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 3600
@rwi @setspecial
%%BeginDocument: ap_1_top_comp.ps
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
LTb
LTa
828 720 M
6264 0 V
LTb
828 720 M
63 0 V
6201 0 R
-63 0 V
720 720 M
(5) Rshow
LTa
828 1410 M
3717 0 V
2439 0 R
108 0 V
LTb
828 1410 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(10) Rshow
LTa
828 2100 M
6264 0 V
LTb
828 2100 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(15) Rshow
LTa
828 2790 M
6264 0 V
LTb
828 2790 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(20) Rshow
LTa
828 3480 M
6264 0 V
LTb
828 3480 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(25) Rshow
LTa
828 4170 M
6264 0 V
LTb
828 4170 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(30) Rshow
LTa
828 4860 M
6264 0 V
LTb
828 4860 M
63 0 V
6201 0 R
-63 0 V
-6309 0 R
(35) Rshow
LTa
1350 720 M
0 4140 V
LTb
1350 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(4) Cshow
LTa
2046 720 M
0 4140 V
LTb
2046 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(6) Cshow
LTa
2742 720 M
0 4140 V
LTb
2742 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(8) Cshow
LTa
3438 720 M
0 4140 V
LTb
3438 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(10) Cshow
LTa
4134 720 M
0 4140 V
LTb
4134 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(12) Cshow
LTa
4830 720 M
0 63 V
0 900 R
0 3177 V
LTb
4830 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(14) Cshow
LTa
5526 720 M
0 63 V
0 900 R
0 3177 V
LTb
5526 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(16) Cshow
LTa
6222 720 M
0 63 V
0 900 R
0 3177 V
LTb
6222 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(18) Cshow
LTa
6918 720 M
0 63 V
0 900 R
0 3177 V
LTb
6918 720 M
0 63 V
0 4077 R
0 -63 V
0 -4257 R
(20) Cshow
LTb
828 720 M
6264 0 V
0 4140 V
-6264 0 V
828 720 L
380 2790 M
currentpoint gsave translate 90 rotate 0 0 M
(% Error) Cshow
grestore
3960 270 M
(Number of Classes) Cshow
1.500 UP
1.000 UL
LT0
6273 1593 M
(AdaBoost) Rshow
6381 1593 M
495 0 V
1002 840 M
348 478 V
348 284 V
348 248 V
348 -105 V
348 -53 V
348 73 V
348 97 V
348 134 V
348 -38 V
348 102 V
348 41 V
348 73 V
348 6 V
348 58 V
348 -9 V
348 -3 V
348 52 V
1002 840 Pls
1350 1318 Pls
1698 1602 Pls
2046 1850 Pls
2394 1745 Pls
2742 1692 Pls
3090 1765 Pls
3438 1862 Pls
3786 1996 Pls
4134 1958 Pls
4482 2060 Pls
4830 2101 Pls
5178 2174 Pls
5526 2180 Pls
5874 2238 Pls
6222 2229 Pls
6570 2226 Pls
6918 2278 Pls
6628 1593 Pls
1.500 UP
1.000 UL
LT1
6273 1413 M
(Sleeping-experts) Rshow
6381 1413 M
495 0 V
1002 748 M
348 590 V
348 337 V
348 273 V
348 -75 V
348 -14 V
348 102 V
348 124 V
348 118 V
348 46 V
348 57 V
348 65 V
348 16 V
348 34 V
348 36 V
348 47 V
348 -48 V
348 59 V
1002 748 Crs
1350 1338 Crs
1698 1675 Crs
2046 1948 Crs
2394 1873 Crs
2742 1859 Crs
3090 1961 Crs
3438 2085 Crs
3786 2203 Crs
4134 2249 Crs
4482 2306 Crs
4830 2371 Crs
5178 2387 Crs
5526 2421 Crs
5874 2457 Crs
6222 2504 Crs
6570 2456 Crs
6918 2515 Crs
6628 1413 Crs
1.500 UP
1.000 UL
LT2
6273 1233 M
(Rocchio) Rshow
6381 1233 M
495 0 V
1002 3452 M
348 1153 V
348 -300 V
348 41 V
348 -283 V
348 -201 V
348 32 V
348 53 V
348 225 V
348 -35 V
348 67 V
348 10 V
348 17 V
348 26 V
348 56 V
348 -7 V
348 7 V
348 148 V
1002 3452 Star
1350 4605 Star
1698 4305 Star
2046 4346 Star
2394 4063 Star
2742 3862 Star
3090 3894 Star
3438 3947 Star
3786 4172 Star
4134 4137 Star
4482 4204 Star
4830 4214 Star
5178 4231 Star
5526 4257 Star
5874 4313 Star
6222 4306 Star
6570 4313 Star
6918 4461 Star
6628 1233 Star
1.500 UP
1.000 UL
LT3
6273 1053 M
(Naive-Bayes) Rshow
6381 1053 M
495 0 V
1002 1621 M
348 742 V
348 570 V
348 390 V
348 -272 V
348 -83 V
348 59 V
348 145 V
348 142 V
348 141 V
348 29 V
348 169 V
348 55 V
348 30 V
348 30 V
348 -9 V
348 7 V
348 -4 V
1002 1621 Box
1350 2363 Box
1698 2933 Box
2046 3323 Box
2394 3051 Box
2742 2968 Box
3090 3027 Box
3438 3172 Box
3786 3314 Box
4134 3455 Box
4482 3484 Box
4830 3653 Box
5178 3708 Box
5526 3738 Box
5874 3768 Box
6222 3759 Box
6570 3766 Box
6918 3762 Box
6628 1053 Box
1.500 UP
1.000 UL
LT4
6273 873 M
(PrTFIDF) Rshow
6381 873 M
495 0 V
1002 923 M
348 787 V
348 301 V
348 327 V
348 -78 V
348 301 V
348 114 V
348 144 V
348 103 V
348 32 V
348 65 V
348 28 V
348 71 V
348 75 V
348 50 V
348 32 V
348 64 V
348 50 V
1002 923 BoxF
1350 1710 BoxF
1698 2011 BoxF
2046 2338 BoxF
2394 2260 BoxF
2742 2561 BoxF
3090 2675 BoxF
3438 2819 BoxF
3786 2922 BoxF
4134 2954 BoxF
4482 3019 BoxF
4830 3047 BoxF
5178 3118 BoxF
5526 3193 BoxF
5874 3243 BoxF
6222 3275 BoxF
6570 3339 BoxF
6918 3389 BoxF
6628 873 BoxF
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 1017 631 a
 currentpoint currentpoint translate 1 0.672 div 1 0.672 div scale
neg exch neg exch translate
 1017 631 a -75 688 a Fj(Figure)15
b(4:)j(Comparison)13 b(of)h(error)h(rates)h(for)e(AdaBo)q(ost)h(and)f
(four)g(other)h(text)g(categorization)f(metho)q(ds)g(\(naiv)o(e)h(Ba)o
(y)o(es,)f(proba-)-75 734 y(bilistic)f(TF-IDF,)g(Ro)q(cc)o(hio)g(and)h
(sleeping)g(exp)q(erts\))h(as)f(rep)q(orted)h(b)o(y)f(Sc)o(hapire)g
(and)g(Singer)g([34)o(].)j(The)d(algorithms)e(w)o(ere)i(tested)-75
780 y(on)k(t)o(w)o(o)h(text)g(corp)q(ora)g(|)f(Reuters)i(newswire)g
(articles)f(\(left\))g(and)g(AP)g(newswire)g(headlines)g(\(righ)o(t\))g
(|)f(and)h(with)f(v)n(arying)-75 825 y(n)o(um)o(b)q(ers)c(of)f(class)h
(lab)q(els)g(as)g(indicated)g(on)f(the)i Fi(x)p Fj(-axis)e(of)g(eac)o
(h)h(\014gure.)-75 950 y(b)o(y)20 b(sev)o(eral)i(authors)f([6)o(,)f
(20,)g(26)o(].)38 b(In)21 b(addition,)g(the)g(mar-)-75
995 y(gin)13 b(theory)g(p)q(oin)o(ts)g(to)g(a)g(strong)h(connection)g
(b)q(et)o(w)o(een)g(b)q(o)q(ost-)-75 1041 y(ing)e(and)g(the)i(supp)q
(ort-v)o(ector)g(mac)o(hines)e(of)g(V)m(apnik)f(and)i(oth-)-75
1087 y(ers)18 b([5)o(,)e(9,)g(38])g(whic)o(h)g(explicitly)g(attempt)g
(to)g(maximi)o(ze)f(the)-75 1132 y(minim)n(um)10 b(margin.)-33
1179 y(The)22 b(b)q(eha)o(vior)g(of)f(AdaBo)q(ost)h(can)g(also)g(b)q(e)
g(understo)q(o)q(d)-75 1224 y(in)17 b(a)g(game-theoretic)g(setting)h
(as)f(explored)h(b)o(y)f(F)m(reund)h(and)-75 1270 y(Sc)o(hapire)g([17,)
f(19])g(\(see)j(also)d(Gro)o(v)o(e)h(and)f(Sc)o(h)o(uurmans)h([20)o(])
-75 1316 y(and)13 b(Breiman)f([7]\).)17 b(In)c(particular,)g(b)q(o)q
(osting)g(can)g(b)q(e)h(view)o(ed)-75 1361 y(as)j(rep)q(eated)h(pla)o
(y)e(of)g(a)g(certain)h(game,)f(and)g(AdaBo)q(ost)h(can)-75
1407 y(b)q(e)i(sho)o(wn)f(to)g(b)q(e)h(a)f(sp)q(ecial)h(case)g(of)f(a)g
(more)f(general)i(algo-)-75 1453 y(rithm)11 b(for)h(pla)o(ying)f(rep)q
(eated)j(games)e(and)g(for)g(appro)o(ximately)-75 1498
y(solving)g(a)g(game.)k(This)d(also)f(sho)o(ws)i(that)f(b)q(o)q(osting)
f(is)h(related)-75 1544 y(to)h(linear)f(programming.)-75
1647 y Fm(Multiclass)18 b(classi\014cation)-75 1711 y
Fj(There)k(are)g(sev)o(eral)g(metho)q(ds)f(of)f(extending)i(AdaBo)q
(ost)g(to)-75 1757 y(the)17 b(m)o(ulticlass)e(case.)27
b(The)17 b(most)e(straigh)o(tforw)o(ard)h(general-)-75
1802 y(ization)e([18)o(],)h(called)g(AdaBo)q(ost.M1,)g(is)g(adequate)g
(when)h(the)-75 1848 y(w)o(eak)11 b(learner)h(is)f(strong)g(enough)h
(to)f(ac)o(hiev)o(e)g(reasonably)g(high)-75 1894 y(accuracy)m(,)h(ev)o
(en)f(on)g(the)h(hard)f(distributions)f(created)j(b)o(y)e(Ada-)-75
1939 y(Bo)q(ost.)31 b(Ho)o(w)o(ev)o(er,)19 b(this)f(metho)q(d)f(fails)g
(if)g(the)i(w)o(eak)f(learner)-75 1985 y(cannot)13 b(ac)o(hiev)o(e)g
(at)f(least)h(50\045)e(accuracy)j(when)f(run)g(on)f(these)-75
2031 y(hard)i(distributions.)-33 2077 y(F)m(or)h(the)i(latter)f(case,)i
(sev)o(eral)e(more)g(sophisticated)g(meth-)-75 2123 y(o)q(ds)h(ha)o(v)o
(e)g(b)q(een)h(dev)o(elop)q(ed.)28 b(These)18 b(generally)f(w)o(ork)f
(b)o(y)h(re-)-75 2168 y(ducing)g(the)g(m)o(ulticlass)e(problem)g(to)h
(a)h(larger)f(binary)h(prob-)-75 2214 y(lem.)f(Sc)o(hapire)c(and)f
(Singer's)g([33)o(])g(algorithm)e(AdaBo)q(ost.MH)-75
2260 y(w)o(orks)14 b(b)o(y)g(creating)g(a)f(set)i(of)f(binary)f
(problems,)f(for)i(eac)o(h)g(ex-)-75 2305 y(ample)k Fi(x)h
Fj(and)g(eac)o(h)g(p)q(ossible)h(lab)q(el)f Fi(y)q Fj(,)i(of)d(the)i
(form:)27 b(\\F)m(or)-75 2351 y(example)21 b Fi(x)p Fj(,)i(is)e(the)i
(correct)g(lab)q(el)f Fi(y)h Fj(or)f(is)g(it)f(one)i(of)e(the)-75
2397 y(other)i(lab)q(els?")45 b(F)m(reund)23 b(and)g(Sc)o(hapire's)g
([18)o(])f(algorithm)-75 2442 y(AdaBo)q(ost.M2)c(\(whic)o(h)g(is)g(a)f
(sp)q(ecial)i(case)g(of)e(Sc)o(hapire)i(and)-75 2488
y(Singer's)h([33)o(])g(AdaBo)q(ost.MR)g(algorithm\))e(instead)j
(creates)-75 2534 y(binary)15 b(problems,)g(for)h(eac)o(h)g(example)f
Fi(x)g Fj(with)g(correct)j(lab)q(el)-75 2579 y Fi(y)e
Fj(and)e(eac)o(h)h Ff(inc)n(orr)n(e)n(ct)i Fj(lab)q(el)c
Fi(y)432 2564 y Fd(0)459 2579 y Fj(of)h(the)g(form:)j(\\F)m(or)d
(example)-75 2625 y Fi(x)p Fj(,)f(is)h(the)g(correct)i(lab)q(el)d
Fi(y)j Fj(or)e Fi(y)434 2610 y Fd(0)446 2625 y Fj(?")1054
950 y(These)24 b(metho)q(ds)f(require)g(additional)e(e\013ort)j(in)e
(the)i(de-)1013 995 y(sign)34 b(of)g(the)h(w)o(eak)g(learning)f
(algorithm.)78 b(A)35 b(di\013er-)1013 1041 y(en)o(t)22
b(tec)o(hnique)g([31)o(],)h(whic)o(h)e(incorp)q(orates)i(Dietteric)o(h)
f(and)1013 1087 y(Bakiri's)d([11])h(metho)q(d)g(of)g(error-correcting)i
(output)f(co)q(des,)1013 1132 y(ac)o(hiev)o(es)30 b(similar)d(pro)o(v)n
(able)i(b)q(ounds)h(to)f(those)h(of)f(Ada-)1013 1178
y(Bo)q(ost.MH)24 b(and)g(AdaBo)q(ost.M2,)h(but)g(can)f(b)q(e)g(used)h
(with)1013 1224 y(an)o(y)18 b(w)o(eak)i(learner)g(whic)o(h)f(can)h
(handle)f(simple,)g(binary)g(la-)1013 1269 y(b)q(eled)g(data.)31
b(Sc)o(hapire)19 b(and)f(Singer)h([33)o(])f(giv)o(e)g(y)o(et)h(another)
1013 1315 y(metho)q(d)10 b(of)g(com)o(bining)e(b)q(o)q(osting)j(with)f
(error-correcting)j(out-)1013 1361 y(put)h(co)q(des.)1013
1463 y Fm(Exp)r(erim)o(en)n(ts)i(and)j(applications)1013
1528 y Fj(Practically)m(,)c(AdaBo)q(ost)i(has)f(man)o(y)e(adv)n(an)o
(tages.)25 b(It)16 b(is)h(fast,)1013 1573 y(simple)f(and)j(easy)f(to)h
(program.)30 b(It)18 b(has)h(no)f(parameters)g(to)1013
1619 y(tune)c(\(except)h(for)e(the)h(n)o(um)o(b)q(er)f(of)g(round)h
Fi(T)6 b Fj(\).)18 b(It)13 b(requires)i(no)1013 1665
y(prior)h(kno)o(wledge)h(ab)q(out)g(the)g(w)o(eak)g(learner)h(and)e(so)
h(can)g(b)q(e)1013 1710 y(\015exibly)12 b(com)o(bined)f(with)h
Ff(any)17 b Fj(metho)q(d)12 b(for)h(\014nding)f(w)o(eak)g(h)o(y-)1013
1756 y(p)q(otheses.)18 b(Finally)m(,)9 b(it)h(comes)h(with)f(a)g(set)i
(of)e(theoretical)h(guar-)1013 1802 y(an)o(tees)j(giv)o(en)g
(su\016cien)o(t)g(data)f(and)h(a)g(w)o(eak)f(learner)i(that)f(can)1013
1847 y(reliably)9 b(pro)o(vide)h(only)f(mo)q(derately)g(accurate)j(w)o
(eak)e(h)o(yp)q(othe-)1013 1893 y(ses.)26 b(This)16 b(is)g(a)g(shift)g
(in)g(mind)f(set)i(for)f(the)h(learning-system)1013 1939
y(designer:)g(instead)10 b(of)g(trying)g(to)g(design)h(a)f(learning)g
(algorithm)1013 1984 y(that)19 b(is)g(accurate)h(o)o(v)o(er)f(the)h(en)
o(tire)g(space,)h(w)o(e)e(can)h(instead)1013 2030 y(fo)q(cus)d(on)f
(\014nding)g(w)o(eaking)g(learning)g(algorithms)e(that)j(only)1013
2076 y(need)d(to)g(b)q(e)h(b)q(etter)g(than)f(random.)1054
2122 y(On)i(the)g(other)h(hand,)f(some)f(ca)o(v)o(eats)h(are)g
(certainly)g(in)f(or-)1013 2168 y(der.)33 b(The)19 b(actual)g(p)q
(erformance)f(of)g(b)q(o)q(osting)h(on)f(a)h(partic-)1013
2213 y(ular)d(problem)g(is)h(clearly)g(dep)q(enden)o(t)h(on)f(the)h
(data)e(and)h(the)1013 2259 y(w)o(eak)e(learner.)24 b(Consisten)o(t)16
b(with)f(theory)m(,)h(b)q(o)q(osting)f(can)g(fail)1013
2305 y(to)i(p)q(erform)f(w)o(ell)h(giv)o(en)g(insu\016cien)o(t)h(data,)
f(o)o(v)o(erly)g(complex)1013 2350 y(w)o(eak)9 b(h)o(yp)q(otheses)j(or)
e(w)o(eak)g(h)o(yp)q(otheses)h(whic)o(h)f(are)h(to)q(o)f(w)o(eak.)1013
2396 y(Bo)q(osting)h(seems)i(to)f(b)q(e)g(esp)q(ecially)g(susceptible)i
(to)e(noise)g([10)o(].)1054 2442 y(AdaBo)q(ost)22 b(has)f(b)q(een)h
(tested)h(empirically)18 b(b)o(y)j(man)o(y)e(re-)1013
2488 y(searc)o(hers,)h(including)c([2,)h(10)o(,)h(12)o(,)f(21,)g(25)o
(,)g(28,)g(36].)28 b(F)m(or)18 b(in-)1013 2534 y(stance,)e(F)m(reund)g
(and)f(Sc)o(hapire)h([16)o(])e(tested)j(AdaBo)q(ost)f(on)f(a)1013
2579 y(set)f(of)g(UCI)g(b)q(enc)o(hmark)f(datasets)i([27)o(])f(using)g
(C4.5)f([29)o(])g(as)h(a)1013 2625 y(w)o(eak)h(learning)f(algorithm,)f
(as)i(w)o(ell)f(as)i(an)f(algorithm)d(whic)o(h)965 2750
y(4)p eop
%%Page: 5 5
5 4 bop -75 109 a
 currentpoint currentpoint translate 0.48204 0.48204 scale neg exch
neg exch translate
 -75 109 a @beginspecial 35.865421 @llx
563.884033 @lly 539.973816 @urx 653.547607 @ury 5041
@rwi @clip @setspecial
%%BeginDocument: /home/schapire/dotloss/adaboost/paper/pout16p2.ps
/Times-Roman findfont 12 scalefont setfont
gsave
36 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffeeaa9675892e1fdfffffffffffffffffee0842b1e67d4fcfffffffffffffffffddb761e1256ccfbfffffffffffffffffdd86e1a0c47c3fafffffffffffffffffdd66a180a41bff9fffffffffffffffffddb751d093dbaf7fffffffffffffffffdda741c093db9f6fffffffffffffffffbcf61150739b5f5fffffffffffffffff7c04c0d083eb9f6fffffffffffffffff9c3490c1055c8fafffffffffffffffffccd56121f79dbfdfffffffffffffffffdd66a1a268ae4fefffffffffffffffffee081232687e3fefffffffffffffffffeea9b32257fdffdfffffffffffffffffff6c35b3379dbfdfffffffffffffffffffde9ab7292e0fdffffffff>} image
grestore
(4:1/0.27,4/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffff8e7dfe9f8fefffde3afb1d7f5fffff9d79a819cd0f3fefeedb7828fcff6fbe09745314b81c7f2fefbe4a3618bdaecac502749686486c9f4fef9c65b50afc76a28429ec49e79a2e6fefcd365398a8f342c7ed8f4e3c6cef1fffdd5682f726a244dbaf4fefcf7f7fdfffcd2612867652b69d4fcfffffffffffff9c754266c742e62d0fcfffffffffffeeea5392e8f923345b6f4fffffffffffbd7762642b4bc51348ce4fefffffffef0b045236bd3e08a3e65caf8fffffdf2ca762c40a2ebf6c4664a94daf2f6eec77c3e4186d7f9feecb064598cb0b7aa7940468cd3f6fffffce9b36f4f443d3a3b5393d6f7fffffffffdeec78d5d464a6eaadef8ffffff>} image
grestore
(5:0/0.26,5/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffffffffddb9ab0eafefffffffff9f1f3fbfffff9c3617adafdfffffff9dcb2b7def7fdeea74464d2fdfffffeeba553549ad6e6ce7e3a70d8fdfffffdde7e3347759ba4884c469ce9fefffffdd9765092ad9986643c70cef9fffffffee29c91d2ebdec98d549deafefffffffff7e2e1f5fefce08d62bdf6fffffffffffffefdfffffcd47670d0fcfffffffffffffffffffff7c16687dffdffffffffffffffffffffeea861a5edfefffffffffffffffffffee4936ac2f8fffffffffffffffffffffddc887ad2fcfffffffffffffffffffffdd77d7cd5fcfffffffffffffffffffffdd87b71d0fbfffffffffffffffffffffee7a998dbfdffffffff>} image
grestore
(7:4/0.25,9/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffffdfbedb58dd5fdfffffffffffffffff2d5c6a5606ed3fdfffffffffffffffde0976b4040a6effffffffffffffffffff2d29b3641c3fbfffffffffffffffffffff9c24c60d1fcfffffffffffffffffffffbc56aa8efffffffffffffffffffffffefa96cc6fbfffffffffffffffffffffcd26d6dd2fcfffffffffffffffffffffcc86da9effffffffffffffffffffffffbc676c6fbffffffffffffffffffffffefa86bc7fcfffffffffffffffffffffcd1614fc6fcfffffffffffffffffffffbc44e61d1fcfffffffffffffffffffceca65da4ecfefffffffffffffffff2d3a855419ad1f2fffffffffffffffde0976d4d4c6c97e0fdffffffff>} image
grestore
(1:9/0.15,7/0.15) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffdf9e9cdbcc7e6fafffffffffffffcf2dec69b5d41569cdbf8fffffffffae5b87f5232140a164590d2f5fefffff2bb612710090c1a2f3c487fccf5fffff6c46123131f3f6d9c96543e82d7fffffdeab4775d77a9d2ead8832e44abfffefcf9edd9cfdaedfafdeb9e312888f1e0d4caccd3d7e0edf8fceca2321e70be8565515c75808da7c6ded47f2316607b3732415b7070635e6a89914f13186a6e3563a4c4d0cebca0764c34190a2b8fa15f79b7daecf2ecd8a24c14040c48b9dea77d7a8faab9b8a0692b0a04145ecffae7c295715e534a37200f111f2b6bd5fffdf4e1c59b7153453b3b557c7d9ee3fffffffdf8e9d7cac2b7b5c9dddde5f8>} image
grestore
(2:0/0.29,2/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffff9dfad7f666065738fbae8fcfffffffeedaa5b536a819089676abcf3fffffffeeca75f7eafc1b7884345abf0fffffffff8d39586989a7d4e244cc1f8fffffffffff6dcbda29184663363d2fcfffffffffffffbf1e3dacb8f4a82dffdfffffffffffffffffefad7794ea4edfefffffffffffffffffff5bb5860c7f9fffffffffffffffffffee28c4b8ae2fdfffffffffffffffffff9c86155b8f4fffffffffffffffffffeeba04d78d8fcfffffffffffffffffffbd4724ea6eefefffffffffffffffffff3b55569cdfafffffffffffffffffffee898569ae8fefffffffffffffffffffee3936fc3f8fffffffffffffffffffffeeebaa4defdffffffffffff>} image
grestore
(9:7/0.25,9/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<ddb79f8d7c6c66708ab4dff8ffffffffc0806b7882888b8576789fd4f6ffffffe6cac0cdd9dfe2ddcba98696d5f8fffffdfaf7fafdfdfefdf9e7b57fa4e7fefffffffffffefefefefffbde9481d4fdfffffffdf7ebe2e2ebf6fbeba574cbfcfffff9e5c4a49393a4c1dadb9c73cbfcfff8daa2776f76756f748c9e7a76d1fcffe39f7692bbcecebea2805f4771d2fbffc27999d7f4fbfbf6e8c376385cb5eefea681c7f6fffffffff7cf794c5f82c7f49b9fe1fdfffffffae09f698ba78697d997abe7fcfefdf7dda46c83cde5b889b5a69ac9e1e2dbc5936376c0f2fbe5b7b6c9928d918b7b655774baeefdfffaede8eec69672615d688cc5effdfffffffefe>} image
grestore
(2:3/0.27,2/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<e5b98a6763738aacd9f6feffffffffffa7542c222831384b87cdf4feffffffff6e23254b646a614e5488cef5fefefeff61285cb1d2d6d1ba8f7aa2e1f0e6e4f07b3b77d9fafdfcf5debeadbcaf908fb8b25f7ed9fcfffef8e6bf8c613f2d3f85dc927cbff0fbf2d39d5d311b172c5eadf5c47d82bad8ba773919192d5186bde8fde9a86360775326182e5b93c0dff3fdfff9d7813220151b498cc4e6f6fdfffffdf2cc7c2611163788d0f3fdfffffffff2c47b39213d423661aae2faffffffffdf832f1028697036234fa6ebfeffffffdd7b230816393b1b0e2d83dffdffffffeeaf5827202a2d2f3d68b0ecfefffffffbe7b986757f899ab2d0ebfbffffffff>} image
grestore
(8:2/0.30,8/0.21) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:1/0.27,4/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
36 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:1/0.28,4/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffef1c2816884bbe9fcfffffffffffffff8cf7e5c6d757bb9f0fffffffffffffee99d5989c5b97a8adcfdfffffffffffddb7a58b7f1da826fcffcfffffffffffdd6776ecef8d47467cefcfffffffffffdd8868fddf5bf5d74d7fdfffffffffffdde9daee7e8a1609ce9fefffffffffffeebc6d3e9c2767dcdf8fffffffffffffffaf0efd38662aaedfefffffffffffffffffde9a35c80d6fafffffffffffffffffff7c97163b8f2fefffffffffffffffffde4945a90dff9f9fdfffffffffffffff8c66666bce4d9cde8fcffffffffffffefa84e6aa2a17d6db3f0fffffffffffeea9d423f51534e579de7fefffffffffff3bf715c738ea7b9d7f5ffffff>} image
grestore
(2:8/0.22,2/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffff5d9ac754f64b0eafcfffffffffffff8d181401e101d5db8e8fafffffffffee99b3a1522322c3069a6dffafffffffee083323e7ca89050334a9be1fbfffffddd87649dd7f0e3ae582448a2e5fcfffee5b1b9e4fafefce89f361a53b7f2fffff8eaf1fcfffffffacc5e17298be3fefffffefffffffffffde082231f77dcfdfffffffffffffffffddd7e222482e0fefffffcf6fbfffffff5c3591b3ea7eefefffeeed2e4f8fcf5d3852e206dd1fafffffddb97a5cfd3b87d36173fa2ebfefffffcd0684f6c654224173888d8fafffffffcca4e191b180f19408ed5f7fffffffffbc5481a1f263863a0dbf8fffffffffffbce73657a89a7cdeafaffffffffff>} image
grestore
(0:2/0.26,0/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffad38b91c7eefcfffffffffffffffffffcd881536eb3e7f9fefffffffffffffff9dea45b32559fcbeffefffffffffffeefbd824d201b3971cffafffffffffffff2c58f6c4d2a1e5bc8f9fffffffffffffcefddd0b1603376d8fcfffffffffffffffefcf6c95f3d96e8fefffffffffffffffcf0d79c404bbaf5fffffffffffffffeefbc804b265bcaf9fffffffffffffffee3934e2c224ca9eafdfffffffffffffff0c493765b4361b9f2fffffffffffdfdfcf3e5dac17e4278dafdfffffef3e0e1eaf5faf9eeac3e4dc3f9fffff9d490889db9ccd0c7923546bdf7fffff9cf79524f5864635b46326ad1fbfffffdeec6a18c7c6b5a52586faeebfeff>} image
grestore
(5:3/0.25,5/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffeeaa9675892e1fdfffffffffffffffffee0842b1e67d4fcfffffffffffffffffddb761e1256ccfbfffffffffffffffffdd86e1a0c47c3fafffffffffffffffffdd66a180a41bff9fffffffffffffffffddb751d093dbaf7fffffffffffffffffdda741c093db9f6fffffffffffffffffbcf61150739b5f5fffffffffffffffff7c04c0d083eb9f6fffffffffffffffff9c3490c1055c8fafffffffffffffffffccd56121f79dbfdfffffffffffffffffdd66a1a268ae4fefffffffffffffffffee081232687e3fefffffffffffffffffeea9b32257fdffdfffffffffffffffffff6c35b3379dbfdfffffffffffffffffffde9ab7292e0fdffffffff>} image
grestore
(4:1/0.26,4/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffeeeba8d826a619ee7fefffffffffffffddb8048473d3265cffbfffffffffffffee5a27d8d8d6557b7f5fffffffffffffff9e7dce3dda05898e8fefffffffffffffffefdfef7bd597eddfdfffffffffffffffffffffbc75b6ed5fdfffffffffffffffffffffbc75967d2fdfffffffffffffffffffffcc95b66d1fcfffffffffffffffffffffcd06562cdfcfffffffffffffffffffffdd77259c0f8fffffffffffffffefdfcf6d98751a2edfefffffffffffbecd9cebfa5733e7adcfdfffffffffeebaf75655b4d41356cd5fdfffffffffdd872354867737c82aae7fefffffffffddf8747568abdd8dfebfafffffffffffff5cf967484c3f1fdfeffffffff>} image
grestore
(7:2/0.22,3/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffdeec4875742435f99d6f7fffffffffff0b9662a100a121f3f89d7f9fffffffcd46c20070311394733459be7fefffff8be420901021f73a7793a5fc4f7fffff8be410801021c74cfbb593b8ce2fdfffcd2651b0608267ddbde893354c6f9fffeecac5d343663b4eef3b4403cadf2fffffbeac5a4a6c8ebfcf8bf45349eecfffffef9eee3e7f3fbfef7bb3f2f96e9fffae8cfbbb4bdcbdaeceeb13a319eecf9dc9e60433c455674a0b4852d3bb1f3e3974421292d2a272a343d2e1748bff7c454172a6e867556331209070d40a6ebc24d122a7795886436120e18192467cddd873923333835302d364e6a644867c7f6d394665446465978a3c3d5cfb6bbe7>} image
grestore
(2:0/0.23,6/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffce3a87f72a8e8fdfffffffffffffffffacd67291e54c0f6fffffffffffffffffbd46c1a06298fe4fdfffffffffffffff7c45b13041458c4f7fffffffffffffde38c2e0a101f3690e4fdfffffffffff6c05312134562385ac3f7fffffffffee38b2a0d3695ac513c9ae9fdfefffffcd05e151a69ccce673680d8efeff5fdf8be430e33a0e9d7703162adc5cfe5f9eea4321251c6f7d86e274181b2d7f1fde690291b6cd7fad5682b5fb7e2f4fdffeb9c302075daf4c75e3483dffcfffffff6bc4a2263bcc88c3b3aa1ecfefffffffcdb7c30376862341f52bdf5fffffffffff3c26e38281c133592e1fcfffffffffffef0c88b57424a7fd0f8ffffffffff>} image
grestore
(0:6/0.20,5/0.15) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fefdfcfbf4e5d8cbb499826a608bd3f8e9d8cdc3b18e6e573d2d2418153fa4ecad755642352619141a2627110833a2ed965131170803030e2f5558251453c4f8cea174320b060c1721272512278ae3fdf6e09e3b21364d5d4b1c060633a7effffef2b65e6aabc8ca9a360b0c2783ddfbfffbdfafbce9f7e1912e1c34274cade3fffff9eef0f9eaad51234e844c2e6db9fffffffefdf1b75624449bbe6a2b5bc1fffffffef5c96f28398ed4c6663e87dffffffff5cc7d33327dc7cd944a63c1f5fffffad67e301b509cab7740439ae6fdfffff0ad420d113a54422a3475d0f9fffffeeda641120c1a29314780c4f2fefffffff8d38b58454e6c92b6daf4feffff>} image
grestore
(8:2/0.20,3/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
showpage
%%EndDocument
 @endspecial -75 109 a
 currentpoint currentpoint translate 1 0.48204 div 1 0.48204 div scale
neg exch neg exch translate
 -75 109 a -75 293 a
 currentpoint currentpoint translate 0.48204 0.48204 scale neg exch
neg exch translate
 -75 293 a
@beginspecial 35.865421 @llx 448.317719 @lly 539.973816
@urx 537.981262 @ury 5041 @rwi @clip @setspecial
%%BeginDocument: /home/schapire/dotloss/adaboost/paper/pout16p5.ps
/Times-Roman findfont 12 scalefont setfont
gsave
36 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:1/0.23,4/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<ffefb25d3e3d3e3d3c3e5db2effffffffcd15d14061225140605145dd1fcfffffcc53e05042c754b1102053ec5fcfffffcc43c040439ae9c2e04053ec5fcfffffcc43c04042e92912d04115cd1fcfffffcc43c04010e2d2d0e042ea2eefefffffcc43c040102040602042ea2eefefffffcc43c04010411221003125cd1fcfffffcc43c050f3059834c11063ec5fcfffffcc43c072d95ccdea22f073bc2fbfffffcc43c072ea0e8f5bf3a0730a6effffffcc43c05114ea3bf962e051f7cdefdfffcc53f0703112f3a2e0f0532a7effffffcd26932120505070505145ccffcfffffff2d0a55b321e241e325cb2effffffffffffcefcfa77a887aa7cfeffeffffff>} image
grestore
(8:6/0.18,8/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffde0afb9a793caf6fffffffffffffffff8c46f72695ca7ecfefffffffffffffff1b569654b5cbff6fffffffffffffffde49e777c4d68d1fcfffffffffffffff6c57366725277d8fdfffffffffffffbdb916172775b88dffdfffffffffffff1b87b9ac7b77b9ce5fefffffffffffeedbca9d8f5d286a7e9fefffffffffffff9eae9f8fcd182adedfefffffffffffffffefefffcce7eb4f1fffffffffffffffffffffffbcc82c1f6fffffffffffffffffffffff9cb8ecffbfffffffffffffffffffffff3c39cdafdfffffffffffffffffffffeecbaade3fefffffffffffffffffffffee9babfecfefffffffffffffffffffffeeeccd6f4ffffffffff>} image
grestore
(4:9/0.16,4/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffeeaa9675892e1fdfffffffffffffffffee0842b1e67d4fcfffffffffffffffffddb761e1256ccfbfffffffffffffffffdd86e1a0c47c3fafffffffffffffffffdd66a180a41bff9fffffffffffffffffddb751d093dbaf7fffffffffffffffffdda741c093db9f6fffffffffffffffffbcf61150739b5f5fffffffffffffffff7c04c0d083eb9f6fffffffffffffffff9c3490c1055c8fafffffffffffffffffccd56121f79dbfdfffffffffffffffffdd66a1a268ae4fefffffffffffffffffee081232687e3fefffffffffffffffffeea9b32257fdffdfffffffffffffffffff6c35b3379dbfdfffffffffffffffffffde9ab7292e0fdffffffff>} image
grestore
(4:1/0.23,4/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffee59b5b423f4b78bbeffefffffffffffdda7a351d110e2468cdf9fffffffffffeecb3724721090c44b6f4fffffffffffff7d18543170a236ccef9fffffffffffff2b54e18081d67bdf1fefffffffffffff2b7521a0b3198e6fdfffffffffffffffbe2a75c232370cff8fffffffffffffffef9e4b05f233692e4fdfffffffffffdf4e4ccb28f451e52bff6fffffffffceabf8e676d9575262c91e6fefffffeeeb15b354887c5a7381c69d6fdfffffdda7523216fc4eac0451755cefcfffffdde812e1c519ec19f39134fcbfcfffffff4c6773825374b3f171761d3fdfffffffef4d093532b1a11123b97e7fefffffffffff8e4bd855845538dd6f9ffff>} image
grestore
(3:5/0.18,3/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffef1ba788dcff6fffffffffffffffffff8d37f31419de9fefffffffffffffffbdf913c163ea2ebfefffffffffffffef0b14a12165ec7f7fffffffffffffffad57a2205145ac1f5fffffffffffffeeaa2400d0c223f85d3f7fffffffffff8cb661a082a6a5f4e8edbfafffffffee7983409155ab6a74d4ba4ebfefffff8c85d150b3798e2d4723368caf7fffee99932091c6ecff7e6922f3392e5fefdd568180a3ba9eefbe087251a69d6fdfcce55101765cef7f0ba57151d73dafdfdd66c1e2170bcccb46b230e379be9fefeecaa552c3e5b5645220c1e69cbf8fffffbe7b572442d19100d1e53a6e9fefffffffdf1d3a7734c3f476eb0e3faffff>} image
grestore
(0:6/0.22,0/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffef3d2a78d7f73615d6989bfeefefffff4c87f5f6f8487807c716078cbf8fff9d4845b87c0d9dddddbcb905eaaeffee89f5e84cff4fcfdfdfce79c5aa3ecface7068bef3fefffffff9d17962baf4f3b45d87defdfffffffde69f5b89dcfcf2ba7aacedfefffffff3bc6562bcf4fffbe5cce3fafffffffddf885294e3fdfffffcf8fcfffffffff5bd5f65c4f7fffffffffffffffffffcde895396e5fdfffffffffffffffffef1b45863c5f7fffffffffffffffffff9d2784a8ee2fdfffffffffffffffffeeba14d67c5f6fffffffffffffffffffdd974469be9fefffffffffffffffffffdd46c5bc2f8fffffffffffffffffffffee29d96ddfdffffffffff>} image
grestore
(7:9/0.20,7/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffff6d4a682665e78a1d1f5fffffffffffee49b5e4a4137334287dffdfffffffffee8af9297997c463278dbfdfffffffffff6e0d2c8b3824d5db2effffffffffffbe7c1a180573a4e9ee4fcfffffffffff3c1734f3c251e4aa0e3fbfffffffffff4ca93827962463b5aa7e3fbfffffffffcf0e2dfdcd0b2764355a5e9fefffffffffffefdfdfbf1cb7d3d5fc3f6fffffffffffffffffefdf3c2613f91e6fefffffffdfcf8f3efeceede94416bd6fdfffcf1decec1b2a89fa8ad8b3e5fcffcfce8b782655c5550423938321f4fbef6f2ba5e323c5058563b1c151713379eebeca64724323f44443f3f473f3453aceef7d18e6864666b7c93acaa7d7aa9dffa>} image
grestore
(3:5/0.29,3/0.29) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 698 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffde9b68e92b1def9fffffffffffffffff4c795a9b89fabe2fcfffffffffffffde1a7acdee4a577c2f7fffffffffffff9d09cccf6eba269bdf7fffffffffffff6cca3daf9df9074ccfbfffffffffffffad5a3ccdfb87385dbfdfffffffffffffddfa5a7a580629be6fefffffffffffffeeec3ada89679baf2fffffffffffffffffbefe5dbb48bcffafffffffffffffffffffefce5aa9fdffdfffffffffffffffffffffcd897b8effefffffffffffffffffffff8cb90ccf9fffffffffffffffffffffff0bb9bdafdfffffffffffffffffffffee8b0aae4fefffffffffffffffffffffee7b3b9ebfefffffffffffffffffffffef0cfd2f2ffffffffffff>} image
grestore
(9:9/0.15,4/0.15) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
36 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffff6d4a682665e78a1d1f5fffffffffffee49b5e4a4137334287dffdfffffffffee8af9297997c463278dbfdfffffffffff6e0d2c8b3824d5db2effffffffffffbe7c1a180573a4e9ee4fcfffffffffff3c1734f3c251e4aa0e3fbfffffffffff4ca93827962463b5aa7e3fbfffffffffcf0e2dfdcd0b2764355a5e9fefffffffffffefdfdfbf1cb7d3d5fc3f6fffffffffffffffffefdf3c2613f91e6fefffffffdfcf8f3efeceede94416bd6fdfffcf1decec1b2a89fa8ad8b3e5fcffcfce8b782655c5550423938321f4fbef6f2ba5e323c5058563b1c151713379eebeca64724323f44443f3f473f3453aceef7d18e6864666b7c93acaa7d7aa9dffa>} image
grestore
(3:5/0.28,3/0.28) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffef6e0bc916b5f92dffcfffffffffffceec995726b5c345bc8f9fffffffffeedb77e70898f602f61cffbfffffffffbd0756289987b4a327cdefdfffffffff8c5635970757c684a9beafefffffffffcdc967e92afba825bb7f5fffffffffffff7e2d9e1ecd47964c7fafffffffffffffffefdfdfbcc6265c7f8fffffffffffffffffffff7bb546dc8f6fffffffffffffffffffeeca2599be4fcfffffffffffffffffffee18a60bcf6fffffffffffffffffffffdd7796dcefbfffffffffffffffffffffaca6a7fdbfdfffffffffffffffffffff3b4639ae8fefffffffffffffffffffee89e6ebbf4fffffffffffffffffffffee8ada0ddfcffffffffff>} image
grestore
(9:7/0.19,9/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:1/0.23,4/0.23) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffeeaa9675892e1fdfffffffffffffffffee0842b1e67d4fcfffffffffffffffffddb761e1256ccfbfffffffffffffffffdd86e1a0c47c3fafffffffffffffffffdd66a180a41bff9fffffffffffffffffddb751d093dbaf7fffffffffffffffffdda741c093db9f6fffffffffffffffffbcf61150739b5f5fffffffffffffffff7c04c0d083eb9f6fffffffffffffffff9c3490c1055c8fafffffffffffffffffccd56121f79dbfdfffffffffffffffffdd66a1a268ae4fefffffffffffffffffee081232687e3fefffffffffffffffffeea9b32257fdffdfffffffffffffffffff6c35b3379dbfdfffffffffffffffffffde9ab7292e0fdffffffff>} image
grestore
(4:1/0.21,4/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffde0afb9a793caf6fffffffffffffffff8c46f72695ca7ecfefffffffffffffff1b569654b5cbff6fffffffffffffffde49e777c4d68d1fcfffffffffffffff6c57366725277d8fdfffffffffffffbdb916172775b88dffdfffffffffffff1b87b9ac7b77b9ce5fefffffffffffeedbca9d8f5d286a7e9fefffffffffffff9eae9f8fcd182adedfefffffffffffffffefefffcce7eb4f1fffffffffffffffffffffffbcc82c1f6fffffffffffffffffffffff9cb8ecffbfffffffffffffffffffffff3c39cdafdfffffffffffffffffffffeecbaade3fefffffffffffffffffffffee9babfecfefffffffffffffffffffffeeeccd6f4ffffffffff>} image
grestore
(4:9/0.16,4/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffef8e5be907fa5e6fefffffffffffffceecea1818cacd1f3fffffffffffff7e0b6877ea0d0ecf8fefffffffffff6d39e8395c0e3f7fbfbfefffffffff9d6937caadaf3fbf3dedaf3fffffffee9a36fa1e0f7f8e8be8998e0fdfffffdd77a6bb8dfddc99d5e4f98e6fefffffdda7e557f938876583258c1f6fffffffeeeb16a5e6470877e4670d6fcfffffffffceacdc2c3cbcd9a558fe4fefffffffffffefbf9faf9d97e5db7f4fffffffffffffffffffff8c56474d4fcfffffffffffffffffffeeca35d9de9fefffffffffffffffffffddc8066c1f7fffffffffffffffffffffcd17789dcfdfffffffffffffffffffffcd99abcf0ffffffffff>} image
grestore
(9:9/0.17,4/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffef3d2a78d7f73615d6989bfeefefffff4c87f5f6f8487807c716078cbf8fff9d4845b87c0d9dddddbcb905eaaeffee89f5e84cff4fcfdfdfce79c5aa3ecface7068bef3fefffffff9d17962baf4f3b45d87defdfffffffde69f5b89dcfcf2ba7aacedfefffffff3bc6562bcf4fffbe5cce3fafffffffddf885294e3fdfffffcf8fcfffffffff5bd5f65c4f7fffffffffffffffffffcde895396e5fdfffffffffffffffffef1b45863c5f7fffffffffffffffffff9d2784a8ee2fdfffffffffffffffffeeba14d67c5f6fffffffffffffffffffdd974469be9fefffffffffffffffffffdd46c5bc2f8fffffffffffffffffffffee29d96ddfdffffffffff>} image
grestore
(7:7/0.20,9/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<ffefb25d3e3d3e3d3c3e5db2effffffffcd15d14061225140605145dd1fcfffffcc53e05042c754b1102053ec5fcfffffcc43c040439ae9c2e04053ec5fcfffffcc43c04042e92912d04115cd1fcfffffcc43c04010e2d2d0e042ea2eefefffffcc43c040102040602042ea2eefefffffcc43c04010411221003125cd1fcfffffcc43c050f3059834c11063ec5fcfffffcc43c072d95ccdea22f073bc2fbfffffcc43c072ea0e8f5bf3a0730a6effffffcc43c05114ea3bf962e051f7cdefdfffcc53f0703112f3a2e0f0532a7effffffcd26932120505070505145ccffcfffffff2d0a55b321e241e325cb2effffffffffffcefcfa77a887aa7cfeffeffffff>} image
grestore
(8:8/0.18,6/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 468 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffcd98466a9ebfefffffffffffffffffef0b044379debfefffffffffffffffff4c86e223bb8f6fffffffffffffffff7d082371644c5fbfffffffffffffffee29150432c4dc3fafffffffffffffffdd4797289494ab0f1fffffffffffffffee5b5c5b94e3893e6fefffffffffffffff7e9e7ba432980dffdfffffffffffffff6d9b7842c2179ddfdfffffffffffffeecae6437121f7bdefdfffffffffffffff2c48246152486e2fefffffffffffffffcefca7823309debfefffffffffffffffffde1852c45b6f4fffffffffffffffffffee0823767cef9fffffffffffffffffffee289498ae1fdfffffffffffffffffffeeeb180b7f0ffffffffff>} image
grestore
(4:4/0.19,1/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
36 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffde0afb9a793caf6fffffffffffffffff8c46f72695ca7ecfefffffffffffffff1b569654b5cbff6fffffffffffffffde49e777c4d68d1fcfffffffffffffff6c57366725277d8fdfffffffffffffbdb916172775b88dffdfffffffffffff1b87b9ac7b77b9ce5fefffffffffffeedbca9d8f5d286a7e9fefffffffffffff9eae9f8fcd182adedfefffffffffffffffefefffcce7eb4f1fffffffffffffffffffffffbcc82c1f6fffffffffffffffffffffff9cb8ecffbfffffffffffffffffffffff3c39cdafdfffffffffffffffffffffeecbaade3fefffffffffffffffffffffee9babfecfefffffffffffffffffffffeeeccd6f4ffffffffff>} image
grestore
(4:9/0.16,4/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:1/0.23,4/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffeeaa9675892e1fdfffffffffffffffffee0842b1e67d4fcfffffffffffffffffddb761e1256ccfbfffffffffffffffffdd86e1a0c47c3fafffffffffffffffffdd66a180a41bff9fffffffffffffffffddb751d093dbaf7fffffffffffffffffdda741c093db9f6fffffffffffffffffbcf61150739b5f5fffffffffffffffff7c04c0d083eb9f6fffffffffffffffff9c3490c1055c8fafffffffffffffffffccd56121f79dbfdfffffffffffffffffdd66a1a268ae4fefffffffffffffffffee081232687e3fefffffffffffffffffeea9b32257fdffdfffffffffffffffffff6c35b3379dbfdfffffffffffffffffffde9ab7292e0fdffffffff>} image
grestore
(4:1/0.21,4/0.20) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffef8e5be907fa5e6fefffffffffffffceecea1818cacd1f3fffffffffffff7e0b6877ea0d0ecf8fefffffffffff6d39e8395c0e3f7fbfbfefffffffff9d6937caadaf3fbf3dedaf3fffffffee9a36fa1e0f7f8e8be8998e0fdfffffdd77a6bb8dfddc99d5e4f98e6fefffffdda7e557f938876583258c1f6fffffffeeeb16a5e6470877e4670d6fcfffffffffceacdc2c3cbcd9a558fe4fefffffffffffefbf9faf9d97e5db7f4fffffffffffffffffffff8c56474d4fcfffffffffffffffffffeeca35d9de9fefffffffffffffffffffddc8066c1f7fffffffffffffffffffffcd17789dcfdfffffffffffffffffffffcd99abcf0ffffffffff>} image
grestore
(9:9/0.17,4/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffef6e0bc916b5f92dffcfffffffffffceec995726b5c345bc8f9fffffffffeedb77e70898f602f61cffbfffffffffbd0756289987b4a327cdefdfffffffff8c5635970757c684a9beafefffffffffcdc967e92afba825bb7f5fffffffffffff7e2d9e1ecd47964c7fafffffffffffffffefdfdfbcc6265c7f8fffffffffffffffffffff7bb546dc8f6fffffffffffffffffffeeca2599be4fcfffffffffffffffffffee18a60bcf6fffffffffffffffffffffdd7796dcefbfffffffffffffffffffffaca6a7fdbfdfffffffffffffffffffff3b4639ae8fefffffffffffffffffffee89e6ebbf4fffffffffffffffffffffee8ada0ddfcffffffffff>} image
grestore
(9:9/0.19,7/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffff8d4957d9dd3f6fffffffffffffffff9da904a3f5696e3fefffffffffffffee89e473c6f7793defdfffffffffffff8c75e2d67b4ada6dafafffffffffffeeb9d393c9ebc7c61abedfefffffffffee2883558a98a362f8de5fefffffffffee6924156754213309cebfefffffffffff4bf694132170f47bbf5fffffffffffffdecbe8452231d66d2fcfffffffffffffffdf3d79638287fdffdfffffffffffffffffde1882e3ca4edfefffffffffffffffff7c5592867cef9fffffffffffffffffee99834349ae9fefffffffffffffffffdda732341b8f5fffffffffffffffffffdda742b49bbf6fffffffffffffffffffeecae7184d3faffffffffff>} image
grestore
(9:9/0.19,4/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffeeebc846a7293c9f2fefffffffffffff8cb715777846f81cdf8fffffffffffeeea65782bda95b48a1ebfefffffffffeeb9f5a8fa8702c2f90e6fefffffffffff5c27160542f1845aaeefefffffffffffdebba8b6a3c3285dafafffffffffffffffcf1ddb2564db7f4fffffffffffffffffffef7bf5260cefbfffffffffffffffffffff1ab4d76dafdfffffffffffffffffffee7934d92e6fefffffffffffffffffffddd7e4ea7effffffffffffffffffffffdd56b52baf6fffffffffffffffffffffccd5f5fcbfbfffffffffffffffffffffbc75a6ed5fdfffffffffffffffffffffbc76383defdfffffffffffffffffffffcd791adebfeffffffffff>} image
grestore
(9:9/0.19,4/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffef4ddbb9d8b8095d7fafffffffffffff1c68e6b6d807f79b3eefefffffffffcd87e5c7ba6a8815473d4fcfffffffffbcc6a5f8a9b7a583c51c4fafffffffffdde916569767a7d5455c3fafffffffffff6dcc1bdcad2b55a5fccfcfffffffffffffcf7f7faf4ba5574d8fdfffffffffffffffffffee99a5395e7fefffffffffffffffffffacf6c54b8f5fffffffffffffffffffeeea84b65d0fbfffffffffffffffffffbd575448fe5fefffffffffffffffffff0ae4e59bff6fffffffffffffffffffcd97a448ae1fdfffffffffffffffffff4b64f54bcf5fffffffffffffffffffee6924a81ddfdfffffffffffffffffffee59e7cbdf3ffffffffffff>} image
grestore
(9:9/0.21,7/0.21) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 237 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffef9e7ab706a7aa5e5fefffffffffffdeccdad6f69928a79c9f9fffffffffff4bd6b586bb0daae68aff1fffffffffee69137459ce4efb162a7eefffffffffcd56d3977d2f8e99c60b4f3fffffffff8c1595db9f2fcdf8667c6f9fffffffff3b9709de5fdfcd47572d2fcfffffffff9dab7daf9fff9c56580dcfdfffffffffef8eff8fffff0ac609eeafefffffffffffffffffffcdd896ac2f7fffffffffffffffffffff4ba6886dcfdfffffffffffffffffffcde8b63afeffffffffffffffffffffff4ba6680d6fbfffffffffffffffffffbdb8558a7edfefffffffffffffffffff7c36467c9f9fffffffffffffffffffff9d3919fe3fdffffffffff>} image
grestore
(7:7/0.17,9/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
showpage
%%EndDocument
 @endspecial -75 293 a
 currentpoint currentpoint translate 1 0.48204 div 1 0.48204 div scale
neg exch neg exch translate
 -75 293 a -75 478 a
 currentpoint currentpoint translate 0.48204 0.48204 scale neg exch
neg exch translate
 -75 478 a
@beginspecial 35.865421 @llx 334.743896 @lly 539.973816
@urx 424.407440 @ury 5041 @rwi @clip @setspecial
%%BeginDocument: /home/schapire/dotloss/adaboost/paper/pout16p10.ps
/Times-Roman findfont 12 scalefont setfont
gsave
36 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffff8dbac8e91b6e6fcfffffffffffffffadba28fb1bdb0cbf2fffffffffffffee8a67fb6e8e2b4b1e6fefffffffffff8cb8399deeec285a2e6fefffffffffeebaf8dc9eacc8d67aceefefffffffffddf9ca1d6cb9b8474c2f6fffffffffffde09d94a998969c8ad2fbffffffffffffefbc857c99b9a39ddefdfffffffffffffcebcdc6d9cf96b1ecfefffffffffffffffdf9f8f4c78ac6f7fffffffffffffffffffffeedb394d8fcfffffffffffffffffffffddd9babe8fefffffffffffffffffffffbcd86bcf4fffffffffffffffffffffff5bf82cafafffffffffffffffffffffff1b98ed5fcfffffffffffffffffffffff3caafe2fdffffffffff>} image
grestore
(9:9/0.16,4/0.14) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffff8e0ae745e8ddefdfffffffffffffef5d5955036529ae4fdfffffffffffdefc7833d20479ad9f7fffffffffffff5c77234202a5397d4f6fffffffffffff1b65f466076695b8bdafbfffffffffffadeb4b2c5cba34e51b8f4fffffffffffffaf1e5c8ae85363eb0f3fffffffffffffffde59c5a351f53c4f8fffffffffffffffff3c47f483377d9fcfffffffffffefffffdf3daa95b69c9f8fffffffff9ecf0fafefefbdc82519feafefffffee8b6b2cfe8f9feeda24a7adcfdfffffee59d6570a7e4f9e79b4067d4fdfffffff5c97d4d67aec9ad623270d9fdfffffffef3cc8b60656952323e95e6fefffffffffef6ddb58e75696786cef7ffff>} image
grestore
(3:3/0.19,5/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffff9e6be835b5b8cd7f9fffffffffffef6d79b5e44465981bde1f7fffffffff6d0864744687f7a6c7199e1fefffffee0883727506856483e3261d0fcfffffdd15f1c1c3346536c693d64d2fdfffffddf8c585a6a8cb6c491497adcfdfffffff7dfcfd0d6e3f2dd854b99e9fefffffffffdfcfcfdfdf8c9624fb6f4fffffffffffffffffffeea9e4666d0fbfffffffffffffffffff8cb684191e5fefffffffffffffffffce294425cc1f6fffffffffffffffffdecaf554699e6fdfffffffffffffffff3be643d7ad3f9fffffffffffffffffcda804166c1f4fffffffffffffffffff4ba5c60b3eefefffffffffffffffffeefb580aae7fdffffffffffff>} image
grestore
(9:9/0.20,7/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fff0b3665e7990a7c2d7ebf8fcfefffffeeb9d424e77796d6f86a6c1d4edfcfffff3b75f6da3b5a78d71554e6fbff3fffffcdd966e7d9394815d2e163ba7eefffffff7dbb08d76665c4d281449bdf6fffffffffbeeddccbcb194482a74d9fcfffffffffffefdfbf5e09c4143a6edfefffffffffffffffff7c8643271d1fafffffffffffffffffde3913842a6edfefffffffffffffffff3ba563177d4fafffffffffffffffffad67b3352b7f2fffffffffffffffffde9a1433a91e2fdfffffffffffffffff5c260336ecbf7fffffffffffffffffbde8b3d58b5effefffffffffffffffff4be5e4a9be5fcfffffffffffffffffff4c27d8dd6f9ffffffffffffff>} image
grestore
(9:9/0.25,7/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:4/0.22,1/0.19) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffff3c8895b5f90cbf2fefffffffffffffcd77c443c313871c7f5fffffffffffff4b652568e7438388de3fefffffffffee48e4882d2c56e3067d5fdfffffffffdda7a58abecde833565d4fdfffffffffee2a09bd9f8dc7a3a7adcfdfffffffffff7e5e6f7facf64449deafefffffffffffffefefef3b54e5cc5f8fffffffffffffffffffee48d4580defdfffffffffffffffffffbcf654aa8eefffffffffffffffffffff4b65266ccf9fffffffffffffffffffde38e4a8be2fdfffffffffffffffffff9c95f4aaff2fffffffffffffffffffff0ab4454c7fafffffffffffffffffffee99a466dd5fdfffffffffffffffffffeecae80aeecfeffffffffff>} image
grestore
(7:7/0.20,9/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffff7d39573a1d3eaf5fcfffffffffffffee4923d2040729abcdaf4fefffffffffde08534191620304b7dc3eefcfffffffff1c083654b3520162b6bb7edfefffffffdf2dfd4c5a8733d1c2567caf8fffffffffffdfdfaefd5a04e18349deafefffffffffffffffefae0912d1e6fd5fbfffffffffffffffffff6bb461547bcf6fffffffffffffffffffaca55153bb3f4fffffffffffffffffff4b9461547bef7fffefdfefffffffffcdf88291964d2fcfcedd8e1f5fcfdfbebaf4b153095e7fef6c77e88bbd6dcd6af5d1d1b5fc6f7fff8cb6e414f6d78704c20194ba7eafefffdecb4683b2e251f192350a1e2fbfffffffceec99668483f4b76b2e4faffffff>} image
grestore
(5:5/0.20,3/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffffff7d18f9ae0fcfffffffffffffffffef5d79d7094d1e7f8fffffffffffffceec99783a3c3b2b0e5fefffffffff9e3b88a89b6e1d68e8cdbfdfffffff8daa58599caedf8d0788ee0fdfffffee9a36a89caf2fdf7c06fa5ecfefffffee5965263a8dcf4e7a172c3f8fffffffff5cc8d5f648fbcb97d86d9fdfffffffffef5dfb988696863549be8fefffffffffffffdf3dbb47d4347a9effffffffffffffffffffceeba6370c9f8fffffffffffffffffffff5be72a3e8fdfffffffffffffffffffee89e73c2f7fffffffffffffffffffffdd9817cd4fcfffffffffffffffffffffcd1758adefdfffffffffffffffffffffdd996b5eefeffffffff>} image
grestore
(4:4/0.18,9/0.15) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 583 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffbe8bf90687accf8fffffffffffffffce6a6562a193ba7effffffffffffffeefb253160504217fdffdfffffffffffbd574210807041159cdfbfffffffffdeaa9410d0a11080d48b3f2fffffffff1bc641c05060904062881dffdfffffee1873214110c0402072574d9fdfffffee79e5b54594014051b5aa1e6fefffffff9e3cecdc995300d3da8e2f9fffffffffffefcfbeea7331355cbfafffffffffffffffffee792291c6fd9fdfffffffffffffffffdde7c21278be4fefffffffffffffffffdd9701d2f9fecfefffffffffffffffffdd6681e3fb5f4fffffffffffffffffffddb773162cffbfffffffffffffffffffeecab719de6feffffffff>} image
grestore
(4:4/0.20,9/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
36 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffee6b4bdecfbf1edf9fffffffffffffffddb92a2e4f0cbbbe7fefffffffffffffcd385a6e7e5a289d6fdfffffffffffffac87bb5f0e39575cffcfffffffffffff3b87ec6f5e19376cffcfffffffffffeeaa77cbcdabf7769c5f8fffffffffffeeba76c81896e4459b7f2fffffffffffff7d09379725c4286d7f9fffffffffffffef5e1d2c38f66b8f3fefffffffffffffffffdfae09a89d5fcfffffffffffffffffffff8cb87aaeafefffffffffffffffffffeeaa881c9f8fffffffffffffffffffffad28ba0e4fdfffffffffffffffffffeeeae7dc1f6fffffffffffffffffffffddf8f80d2fbfffffffffffffffffffffee29c8fd6fbffffffffffff>} image
grestore
(4:4/0.18,9/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
122 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffee49f85bff2fffffffffffffffffffffee1884577d8fcfffffffffffffffffffeeda03849bff8fffffffffffffffffffff7ba3e37a8f0fffffffffffffffffffffbc4452f93e7fefffffffffffffffffffcc8492980e0fefffffffffffffffffffbc6482576dbfdfffffffffffffffffff8bd3f2276dcfdfffffffffffffffffff4b238237edffdffffffffffffffffffefa532298de5fefffffffffffffffffee7932b309fecfefffffffffffffffffee081263bb5f5fffffffffffffffffffdde7b2545c3fafffffffffffffffffffee48c314fcafcfffffffffffffffffffff1b15263d0fcfffffffffffffffffffffbdb9896defdffffffffff>} image
grestore
(4:4/0.21,1/0.18) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
209 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffff9cc7a82c3f2fefffbf0e8f6fffffffff1ab3d2b6dcff7f4dcb19fdafbfffffee8952b113f9bc7b7854b53bcf6fffffddb7b2b314f6266563e2044baf6fffff8c4573c87aa87696a603864cffbfffff4bb5d6bc8ecdecebb7b4a90e5fefffffad9a6bbecfdfdf3c05e57bcf6fffffffef6eaf1fcfffde2914b7ddbfdfffffffffffefffffff4bd5f5fb8f2fffffffffffffffffffbdc895294e3fdfffffffffffffffffeeeac5968c6f7fffffffffffffffffffad07352a0e9fdfffffffffffffffffde69f5276d2fafffffffffffffffffff1b75f56adeefefffffffffffffffffddd814d89dcfbfffffffffffffffffffdde9082c9f6ffffffffffffff>} image
grestore
(7:7/0.24,9/0.21) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
295 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fff0b3665e7990a7c2d7ebf8fcfefffffeeb9d424e77796d6f86a6c1d4edfcfffff3b75f6da3b5a78d71554e6fbff3fffffcdd966e7d9394815d2e163ba7eefffffff7dbb08d76665c4d281449bdf6fffffffffbeeddccbcb194482a74d9fcfffffffffffefdfbf5e09c4143a6edfefffffffffffffffff7c8643271d1fafffffffffffffffffde3913842a6edfefffffffffffffffff3ba563177d4fafffffffffffffffffad67b3352b7f2fffffffffffffffffde9a1433a91e2fdfffffffffffffffff5c260336ecbf7fffffffffffffffffbde8b3d58b5effefffffffffffffffff4be5e4a9be5fcfffffffffffffffffff4c27d8dd6f9ffffffffffffff>} image
grestore
(9:9/0.25,7/0.22) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
382 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffce6b3a9e3fcf3e0e7f9fffffffffffeefb881a9e9f6ce9dc3f2fffffffffff5c88388d1f7e59c77c4f7fffffffffddf9179bcf1f9cf767fd7fcfffffffff8c47096e2fcf1b0659de9fefffffffff0ad65aef0fcdf8a68bff6ffffffffffefa962a5e6f4c96c7ad6fcfffffffffff7c77576a7bc955894e6fefffffffffffdecb5786a684a51b5f3fffffffffffffffcedceb595566ed0fbfffffffffffffffffef9efbd658ce1fefffffffffffffffffffff3b363a5edfefffffffffffffffffffee99c64b8f5fffffffffffffffffffffee29171c9fafffffffffffffffffffffee29581d4fcfffffffffffffffffffffeecb7a2dffdffffffffff>} image
grestore
(4:4/0.19,9/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
468 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffff9e6be835b5b8cd7f9fffffffffffef6d79b5e44465981bde1f7fffffffff6d0864744687f7a6c7199e1fefffffee0883727506856483e3261d0fcfffffdd15f1c1c3346536c693d64d2fdfffffddf8c585a6a8cb6c491497adcfdfffffff7dfcfd0d6e3f2dd854b99e9fefffffffffdfcfcfdfdf8c9624fb6f4fffffffffffffffffffeea9e4666d0fbfffffffffffffffffff8cb684191e5fefffffffffffffffffce294425cc1f6fffffffffffffffffdecaf554699e6fdfffffffffffffffff3be643d7ad3f9fffffffffffffffffcda804166c1f4fffffffffffffffffff4ba5c60b3eefefffffffffffffffffeefb580aae7fdffffffffffff>} image
grestore
(9:9/0.20,7/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
554 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffcdc979fdfede9f7fffffffffffffffff6bd5b70c6bea8dffdfffffffffffffeeda34870bd906dc5f9fffffffffffffee38a4583bd7754baf7fffffffffffffdd871469ec2684bb6f5fffffffffffffcce5b49b5c55a46b5f5fffffffffffffac34d50bbb94f4ec1f9fffffffffffff6b945468d7e3e69d3fcfffffffffffff6b9431e2c27318ee5fefffffffffffffad171351f1039b2f4fffffffffffffffef1c8965d2651c9fbfffffffffffffffffef5d0783872d9fdfffffffffffffffffffbd0643e97e8fefffffffffffffffffff9c14d49b8f5fffffffffffffffffffff9c55c6cd1fbfffffffffffffffffffffddc9caee9feffffffffff>} image
grestore
(4:4/0.19,9/0.16) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
641 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffff8dbac8e91b6e6fcfffffffffffffffadba28fb1bdb0cbf2fffffffffffffee8a67fb6e8e2b4b1e6fefffffffffff8cb8399deeec285a2e6fefffffffffeebaf8dc9eacc8d67aceefefffffffffddf9ca1d6cb9b8474c2f6fffffffffffde09d94a998969c8ad2fbffffffffffffefbc857c99b9a39ddefdfffffffffffffcebcdc6d9cf96b1ecfefffffffffffffffdf9f8f4c78ac6f7fffffffffffffffffffffeedb394d8fcfffffffffffffffffffffddd9babe8fefffffffffffffffffffffbcd86bcf4fffffffffffffffffffffff5bf82cafafffffffffffffffffffffff1b98ed5fcfffffffffffffffffffffff3caafe2fdffffffffff>} image
grestore
(9:9/0.16,4/0.14) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
gsave
727 352 translate
gsave
72 72 scale
16 16 8 [16 0 0 -16 0 16] {<fffffffffffbdc9b8cbfd1d9f2fefffffffffffffeedaa4e385d627cccf8fffffffffffff8cc6b28293d4162bbf3fffffffffffade9036295d849ab4e1fafffffffffeeca74716255883b7e2f9fffffffffffcd8752922384e5375bff2fffffffffffcd9855d79a0ac83507dd8fbfffffffffef2d6cadbecefc26054b7f4fffffffffffdfafafcfefddc7b4796e8fefffffffbefeaf7fefffee287417fdffdfffffeeebca5cff4fefde1843d78dcfdfffffee5955580d4f9fbd26b377fdffdfffffff1b25048a4e6e9ad483c9eebfefffffffcde8c4c68a2a4663260c8f8fffffffffff7d28c5544382b46a0e9fefffffffffffff7d9a1654a5992dafaffffff>} image
grestore
(5:5/0.19,3/0.17) dup stringwidth pop 72 exch sub 0.5 mul -14 moveto show
grestore
showpage
%%EndDocument
 @endspecial -75 478 a
 currentpoint currentpoint translate 1 0.48204 div 1 0.48204 div scale
neg exch neg exch translate
 -75 478 a 108 x Fj(Figure)11 b(5:)16
b(A)11 b(sample)f(of)g(the)i(examples)e(that)h(ha)o(v)o(e)g(the)g
(largest)-75 631 y(w)o(eigh)o(t)23 b(on)g(an)g(OCR)h(task)f(as)h(rep)q
(orted)h(b)o(y)e(F)m(reund)h(and)-75 677 y(Sc)o(hapire)10
b([16)o(].)16 b(These)11 b(examples)d(w)o(ere)j(c)o(hosen)f(after)g(4)f
(rounds)-75 723 y(of)i(b)q(o)q(osting)h(\(top)g(line\),)f(12)g(rounds)i
(\(middle\))d(and)i(25)f(rounds)-75 768 y(\(b)q(ottom\).)22
b(Underneath)17 b(eac)o(h)f(image)e(is)h(a)h(line)f(of)g(the)h(form)-75
814 y Fi(d)p Fj(:)p Fi(`)-24 820 y Fh(1)-6 814 y Fi(=w)45
820 y Fh(1)63 814 y Fj(,)p Fi(`)92 820 y Fh(2)111 814
y Fi(=w)162 820 y Fh(2)180 814 y Fj(,)i(where)g Fi(d)f
Fj(is)h(the)g(lab)q(el)f(of)g(the)h(example,)f Fi(`)919
820 y Fh(1)-75 860 y Fj(and)i Fi(`)28 866 y Fh(2)65 860
y Fj(are)h(the)f(lab)q(els)g(that)g(get)g(the)g(highest)h(and)e(second)
-75 905 y(highest)12 b(v)o(ote)g(from)e(the)j(com)o(bined)e(h)o(yp)q
(othesis)h(at)g(that)g(p)q(oin)o(t)-75 951 y(in)17 b(the)g(run)g(of)g
(the)g(algorithm,)e(and)i Fi(w)574 957 y Fh(1)592 951
y Fj(,)g Fi(w)651 957 y Fh(2)687 951 y Fj(are)g(the)g(corre-)-75
997 y(sp)q(onding)d(normalized)e(scores.)-75 1126 y(\014nds)20
b(the)f(b)q(est)i(\\decision)e(stump")f(or)h(single-test)g(decision)-75
1171 y(tree.)g(Some)11 b(of)g(the)i(results)g(of)e(these)j(exp)q
(erimen)o(ts)e(are)g(sho)o(wn)-75 1217 y(in)k(Fig.)f(3.)24
b(As)17 b(can)g(b)q(e)f(seen)i(from)c(this)j(\014gure,)f(ev)o(en)h(b)q
(o)q(ost-)-75 1263 y(ing)f(the)h(w)o(eak)g(decision)g(stumps)f(can)h
(usually)f(giv)o(e)g(as)h(go)q(o)q(d)-75 1308 y(results)f(as)g(C4.5,)e
(while)h(b)q(o)q(osting)g(C4.5)f(generally)h(giv)o(es)g(the)-75
1354 y(decision-tree)d(algorithm)c(a)i(signi\014can)o(t)h(impro)o(v)o
(em)o(en)o(t)e(in)h(p)q(er-)-75 1400 y(formance.)-33
1452 y(In)g(another)g(set)i(of)d(exp)q(erimen)o(ts,)i(Sc)o(hapire)g
(and)f(Singer)g([34)o(])-75 1498 y(used)22 b(b)q(o)q(osting)g(for)f
(text)h(categorization)f(tasks.)41 b(F)m(or)21 b(this)-75
1543 y(w)o(ork,)11 b(w)o(eak)g(h)o(yp)q(otheses)i(w)o(ere)f(used)g
(whic)o(h)f(test)i(on)e(the)h(pres-)-75 1589 y(ence)20
b(or)f(absence)h(of)e(a)g(w)o(ord)h(or)f(phrase.)34 b(Some)17
b(results)j(of)-75 1635 y(these)j(exp)q(erimen)o(ts)f(comparing)d
(AdaBo)q(ost)j(to)g(four)f(other)-75 1680 y(metho)q(ds)10
b(are)h(sho)o(wn)f(in)g(Fig.)f(4.)17 b(In)10 b(nearly)h(all)e(of)h
(these)h(exp)q(er-)-75 1726 y(imen)o(ts)16 b(and)g(for)h(all)e(of)h
(the)i(p)q(erformance)e(measures)h(tested,)-75 1772 y(b)q(o)q(osting)g
(p)q(erformed)f(as)i(w)o(ell)e(or)h(signi\014can)o(tly)f(b)q(etter)i
(than)-75 1817 y(the)g(other)h(metho)q(ds)e(tested.)32
b(Bo)q(osting)18 b(has)g(also)f(b)q(een)i(ap-)-75 1863
y(plied)13 b(to)h(text)h(\014ltering)e([35)o(])h(and)f(\\ranking")g
(problems)g([15)o(].)-33 1915 y(A)i(nice)h(prop)q(ert)o(y)g(of)f(AdaBo)
q(ost)h(is)f(its)g(abilit)o(y)f(to)h(iden)o(tify)-75
1961 y Ff(outliers)p Fj(,)f(i.e.,)f(examples)h(that)h(are)g(either)h
(mislab)q(eled)d(in)i(the)-75 2006 y(training)k(data,)h(or)f(whic)o(h)h
(are)g(inheren)o(tly)f(am)o(biguous)f(and)-75 2052 y(hard)12
b(to)f(categorize.)19 b(Because)13 b(AdaBo)q(ost)f(fo)q(cuses)h(its)f
(w)o(eigh)o(t)-75 2098 y(on)i(the)g(hardest)h(examples,)d(the)i
(examples)f(with)h(the)g(highest)-75 2143 y(w)o(eigh)o(t)f(often)g
(turn)h(out)f(to)g(b)q(e)h(outliers.)k(An)13 b(example)f(of)g(this)-75
2189 y(phenomenon)j(can)h(b)q(e)g(seen)h(in)e(Fig.)g(5)g(tak)o(en)h
(from)e(an)i(OCR)-75 2235 y(exp)q(erimen)o(t)e(conducted)h(b)o(y)f(F)m
(reund)g(and)g(Sc)o(hapire)g([16)o(].)-75 2360 y Fm(References)-54
2442 y Fj([1])19 b(P)o(eter)12 b(L.)e(Bartlett.)k(The)d(sample)e
(complexit)o(y)g(of)h(pattern)10 2488 y(classi\014cation)16
b(with)g(neural)g(net)o(w)o(orks:)23 b(the)17 b(size)f(of)g(the)10
2534 y(w)o(eigh)o(ts)e(is)g(more)f(imp)q(ortan)o(t)f(than)i(the)g(size)
h(of)e(the)i(net-)10 2579 y(w)o(ork.)26 b Ff(IEEE)18
b(T)m(r)n(ansactions)f(on)h(Information)f(The)n(ory)p
Fj(,)10 2625 y(44\(2\):525{536,)11 b(Marc)o(h)j(1998.)1033
-33 y([2])20 b(Eric)g(Bauer)h(and)e(Ron)h(Koha)o(vi.)34
b(An)20 b(empirical)e(com-)1098 12 y(parison)10 b(of)g(v)o(oting)f
(classi\014cation)h(algorithms:)k(Bagging,)1098 58 y(b)q(o)q(osting,)k
(and)f(v)n(arian)o(ts.)29 b Ff(Machine)19 b(L)n(e)n(arning)p
Fj(,)g(to)e(ap-)1098 103 y(p)q(ear.)1033 163 y([3])j(Eric)d(B.)f(Baum)f
(and)h(Da)o(vid)f(Haussler.)26 b(What)15 b(size)i(net)1098
209 y(giv)o(es)j(v)n(alid)f(generalization?)54 b Ff(Neur)n(al)20
b(Computation)p Fj(,)1098 254 y(1\(1\):151{160,)11 b(1989.)1033
314 y([4])20 b(Anselm)11 b(Blumer,)g(Andrzej)i(Ehrenfeuc)o(h)o(t,)h(Da)
o(vid)d(Haus-)1098 359 y(sler,)19 b(and)e(Manfred)h(K.)g(W)m(arm)o
(uth.)28 b(Learnabilit)o(y)16 b(and)1098 405 y(the)c(Vapnik-Cherv)o
(onenkis)f(dimension.)g Ff(Journal)i(of)f(the)1098 451
y(Asso)n(ciation)19 b(for)g(Computing)h(Machinery)p Fj(,)g
(36\(4\):929{)1098 496 y(965,)12 b(Octob)q(er)k(1989.)1033
556 y([5])k(Bernhard)36 b(E.)f(Boser,)41 b(Isab)q(elle)35
b(M.)f(Guy)o(on,)39 b(and)1098 601 y(Vladimir)14 b(N.)i(V)m(apnik.)26
b(A)17 b(training)f(algorithm)e(for)i(op-)1098 647 y(timal)11
b(margin)h(classi\014ers.)19 b(In)14 b Ff(Pr)n(o)n(c)n(e)n(e)n(dings)h
(of)f(the)h(Fifth)1098 693 y(A)o(nnual)k(A)o(CM)f(Workshop)h(on)g
(Computational)f(L)n(e)n(arn-)1098 738 y(ing)d(The)n(ory)p
Fj(,)e(pages)h(144{152,)e(1992.)1033 798 y([6])20 b(Leo)d(Breiman.)28
b(Arcing)18 b(the)g(edge.)29 b(T)m(ec)o(hnical)18 b(Rep)q(ort)1098
843 y(486,)11 b(Statistics)h(Departmen)o(t,)f(Univ)o(ersit)o(y)h(of)f
(California)1098 889 y(at)j(Berk)o(eley)m(,)g(1997.)1033
949 y([7])20 b(Leo)d(Breiman.)26 b(Prediction)17 b(games)f(and)h
(arcing)f(classi-)1098 994 y(\014ers.)j(T)m(ec)o(hnical)14
b(Rep)q(ort)h(504,)d(Statistics)j(Departmen)o(t,)1098
1040 y(Univ)o(ersit)o(y)f(of)f(California)f(at)h(Berk)o(eley)m(,)h
(1997.)1033 1099 y([8])20 b(Leo)h(Breiman.)39 b(Arcing)21
b(classi\014ers.)41 b Ff(The)21 b(A)o(nnals)h(of)1098
1145 y(Statistics)p Fj(,)13 b(26\(3\):801{849,)d(1998.)1033
1204 y([9])20 b(Corinna)i(Cortes)i(and)f(Vladimir)d(V)m(apnik.)44
b(Supp)q(ort-)1098 1250 y(v)o(ector)14 b(net)o(w)o(orks.)j
Ff(Machine)e(L)n(e)n(arning)p Fj(,)e(20\(3\):273{297,)1098
1296 y(Septem)o(b)q(er)h(1995.)1013 1355 y([10])19 b(Thomas)8
b(G.)h(Dietteric)o(h.)j(An)e(exp)q(erimen)o(tal)f(comparison)1098
1401 y(of)14 b(three)j(metho)q(ds)e(for)g(constructing)h(ensem)o(bles)f
(of)g(de-)1098 1447 y(cision)c(trees:)19 b(Bagging,)10
b(b)q(o)q(osting,)h(and)h(randomization.)1098 1492 y
Ff(Machine)k(L)n(e)n(arning)p Fj(,)d(to)h(app)q(ear.)1013
1552 y([11])19 b(Thomas)e(G.)i(Dietteric)o(h)g(and)g(Gh)o(ulum)e
(Bakiri.)33 b(Solv-)1098 1597 y(ing)9 b(m)o(ulticlass)e(learning)i
(problems)f(via)h(error-correcting)1098 1643 y(output)14
b(co)q(des.)21 b Ff(Journal)15 b(of)g(A)o(rti\014cial)f(Intel)r(ligenc)
n(e)h(R)n(e-)1098 1689 y(se)n(ar)n(ch)p Fj(,)e(2:263{286,)e(Jan)o(uary)
j(1995.)1013 1748 y([12])19 b(Harris)13 b(Druc)o(k)o(er)i(and)e
(Corinna)f(Cortes.)18 b(Bo)q(osting)c(deci-)1098 1794
y(sion)f(trees.)19 b(In)13 b Ff(A)n(dvanc)n(es)i(in)f(Neur)n(al)g
(Information)g(Pr)n(o-)1098 1839 y(c)n(essing)h(Systems)g(8)p
Fj(,)f(pages)g(479{485,)d(1996.)1013 1899 y([13])19 b(Harris)33
b(Druc)o(k)o(er,)k(Rob)q(ert)c(Sc)o(hapire,)38 b(and)32
b(P)o(atrice)1098 1944 y(Simard.)20 b(Bo)q(osting)15
b(p)q(erformance)g(in)g(neural)g(net)o(w)o(orks.)1098
1990 y Ff(International)22 b(Journal)f(of)h(Pattern)f(R)n(e)n(c)n(o)n
(gnition)h(and)1098 2036 y(A)o(rti\014cial)13 b(Intel)r(ligenc)n(e)p
Fj(,)h(7\(4\):705{719,)d(1993.)1013 2095 y([14])19 b(Y)m(oa)o(v)26
b(F)m(reund.)58 b(Bo)q(osting)28 b(a)f(w)o(eak)g(learning)f(algo-)1098
2141 y(rithm)14 b(b)o(y)i(ma)r(jorit)o(y)m(.)21 b Ff(Information)c(and)
g(Computation)p Fj(,)1098 2187 y(121\(2\):256{285,)10
b(1995.)1013 2246 y([15])19 b(Y)m(oa)o(v)h(F)m(reund,)i(Ra)r(j)f(Iy)o
(er,)h(Rob)q(ert)g(E.)e(Sc)o(hapire,)j(and)1098 2292
y(Y)m(oram)14 b(Singer.)26 b(An)17 b(e\016cien)o(t)g(b)q(o)q(osting)f
(algorithm)e(for)1098 2337 y(com)o(bining)e(preferences.)24
b(In)15 b Ff(Machine)i(L)n(e)n(arning:)j(Pr)n(o-)1098
2383 y(c)n(e)n(e)n(dings)d(of)g(the)g(Fifte)n(enth)g(International)h
(Confer)n(enc)n(e)p Fj(,)1098 2429 y(1998.)1013 2488
y([16])h(Y)m(oa)o(v)12 b(F)m(reund)i(and)f(Rob)q(ert)g(E.)g(Sc)o
(hapire.)18 b(Exp)q(erimen)o(ts)1098 2534 y(with)13 b(a)h(new)g(b)q(o)q
(osting)g(algorithm.)h(In)f Ff(Machine)i(L)n(e)n(arn-)1098
2579 y(ing:)39 b(Pr)n(o)n(c)n(e)n(e)n(dings)24 b(of)h(the)g(Thirte)n
(enth)f(International)1098 2625 y(Confer)n(enc)n(e)p
Fj(,)13 b(pages)h(148{156,)e(1996.)965 2750 y(5)p eop
%%Page: 6 6
6 5 bop -75 -33 a Fj([17])19 b(Y)m(oa)o(v)e(F)m(reund)h(and)f(Rob)q
(ert)h(E.)f(Sc)o(hapire.)29 b(Game)16 b(the-)10 12 y(ory)m(,)c(on-line)
f(prediction)i(and)f(b)q(o)q(osting.)j(In)e Ff(Pr)n(o)n(c)n(e)n(e)n
(dings)10 58 y(of)j(the)g(Ninth)g(A)o(nnual)h(Confer)n(enc)n(e)f(on)g
(Computational)10 103 y(L)n(e)n(arning)f(The)n(ory)p
Fj(,)e(pages)i(325{332,)c(1996.)-75 169 y([18])19 b(Y)m(oa)o(v)d(F)m
(reund)g(and)h(Rob)q(ert)f(E.)g(Sc)o(hapire.)26 b(A)16
b(decision-)10 215 y(theoretic)j(generalization)e(of)g(on-line)g
(learning)f(and)i(an)10 261 y(application)d(to)h(b)q(o)q(osting.)24
b Ff(Journal)16 b(of)h(Computer)g(and)10 306 y(System)e(Scienc)n(es)p
Fj(,)f(55\(1\):119{139,)d(August)k(1997.)-75 372 y([19])k(Y)m(oa)o(v)i
(F)m(reund)g(and)g(Rob)q(ert)h(E.)f(Sc)o(hapire.)41 b(Adaptiv)o(e)10
418 y(game)15 b(pla)o(ying)g(using)g(m)o(ultiplicativ)o(e)e(w)o(eigh)o
(ts.)25 b Ff(Games)10 464 y(and)16 b(Ec)n(onomic)f(Behavior)p
Fj(,)f(to)g(app)q(ear.)-75 530 y([20])19 b(Adam)g(J.)h(Gro)o(v)o(e)f
(and)h(Dale)g(Sc)o(h)o(uurmans.)36 b(Bo)q(osting)10 575
y(in)14 b(the)h(limit:)i(Maximizing)12 b(the)j(margin)d(of)i(learned)h
(en-)10 621 y(sem)o(bles.)33 b(In)18 b Ff(Pr)n(o)n(c)n(e)n(e)n(dings)i
(of)f(the)g(Fifte)n(enth)h(National)10 667 y(Confer)n(enc)n(e)15
b(on)h(A)o(rti\014cial)d(Intel)r(ligenc)n(e)p Fj(,)g(1998.)-75
733 y([21])19 b(Je\013rey)d(C.)e(Jac)o(kson)h(and)f(Mark)h(W.)e(Cra)o
(v)o(en.)20 b(Learning)10 778 y(sparse)13 b(p)q(erceptrons.)i(In)c
Ff(A)n(dvanc)n(es)i(in)f(Neur)n(al)g(Informa-)10 824
y(tion)j(Pr)n(o)n(c)n(essing)g(Systems)g(8)p Fj(,)f(pages)g(654{660,)e
(1996.)-75 890 y([22])19 b(Mic)o(hael)i(Kearns)h(and)f(Leslie)g(G.)f(V)
m(alian)o(t.)38 b(Learning)10 936 y(Bo)q(olean)25 b(form)o(ulae)e(or)i
(\014nite)g(automata)e(is)h(as)h(hard)10 981 y(as)17
b(factoring.)24 b(T)m(ec)o(hnical)16 b(Rep)q(ort)g(TR-14-88,)f(Harv)n
(ard)10 1027 y(Univ)o(ersit)o(y)f(Aik)o(en)f(Computation)f(Lab)q
(oratory)m(,)g(August)10 1073 y(1988.)-75 1138 y([23])19
b(Mic)o(hael)k(Kearns)i(and)e(Leslie)g(G.)f(V)m(alian)o(t.)45
b(Crypto-)10 1184 y(graphic)22 b(limitati)o(ons)d(on)i(learning)g(Bo)q
(olean)h(form)o(ulae)10 1230 y(and)13 b(\014nite)g(automata.)h
Ff(Journal)g(of)g(the)g(Asso)n(ciation)g(for)10 1275
y(Computing)h(Machinery)p Fj(,)f(41\(1\):67{95,)e(Jan)o(uary)h(1994.)
-75 1341 y([24])19 b(Mic)o(hael)c(J.)f(Kearns)i(and)f(Umesh)f(V.)g(V)m
(azirani.)20 b Ff(A)o(n)15 b(In-)10 1387 y(tr)n(o)n(duction)e(to)f
(Computational)h(L)n(e)n(arning)g(The)n(ory)p Fj(.)g(MIT)10
1433 y(Press,)i(1994.)-75 1499 y([25])k(Ric)o(hard)9
b(Maclin)g(and)h(Da)o(vid)e(Opitz.)k(An)e(empirical)d(ev)n(al-)10
1544 y(uation)16 b(of)g(bagging)f(and)h(b)q(o)q(osting.)26
b(In)16 b Ff(Pr)n(o)n(c)n(e)n(e)n(dings)i(of)10 1590
y(the)11 b(F)m(ourte)n(enth)g(National)g(Confer)n(enc)n(e)g(on)h(A)o
(rti\014cial)d(In-)10 1636 y(tel)r(ligenc)n(e)p Fj(,)k(pages)h
(546{551,)e(1997.)-75 1702 y([26])19 b(Llew)c(Mason,)f(P)o(eter)i
(Bartlett,)f(and)g(Jonathan)f(Baxter.)10 1747 y(Direct)22
b(optimization)d(of)h(margins)g(impro)o(v)o(es)f(general-)10
1793 y(ization)i(in)f(com)o(bined)g(classi\014ers.)40
b(T)m(ec)o(hnical)21 b(rep)q(ort,)10 1839 y(Deparmen)o(t)12
b(of)g(Systems)g(Engineering,)h(Australian)f(Na-)10 1884
y(tional)h(Univ)o(ersit)o(y)m(,)g(1998.)-75 1950 y([27])19
b(C.)29 b(J.)g(Merz)i(and)e(P)m(.)g(M.)g(Murph)o(y)m(.)64
b(UCI)30 b(rep)q(os-)10 1996 y(itory)45 b(of)f(mac)o(hine)f(learning)h
(databases,)53 b(1998.)10 2042 y(www.ics.uci.edu/)p Fe(\030)p
Fj(mlearn/MLRep)q(ository)m(.h)o(tm)o(l)o(.)-75 2108
y([28])19 b(J.)h(R.)e(Quinlan.)34 b(Bagging,)20 b(b)q(o)q(osting,)g
(and)g(C4.5.)33 b(In)10 2153 y Ff(Pr)n(o)n(c)n(e)n(e)n(dings)18
b(of)f(the)h(Thirte)n(enth)f(National)h(Confer)n(enc)n(e)10
2199 y(on)e(A)o(rti\014cial)d(Intel)r(ligenc)n(e)p Fj(,)h(pages)g
(725{730,)e(1996.)-75 2265 y([29])19 b(J.)24 b(Ross)g(Quinlan.)47
b Ff(C4.5:)37 b(Pr)n(o)n(gr)n(ams)23 b(for)h(Machine)10
2310 y(L)n(e)n(arning)p Fj(.)18 b(Morgan)c(Kaufmann,)d(1993.)-75
2376 y([30])19 b(Rob)q(ert)12 b(E.)f(Sc)o(hapire.)i(The)f(strength)g
(of)f(w)o(eak)g(learnabil-)10 2422 y(it)o(y)m(.)17 b
Ff(Machine)f(L)n(e)n(arning)p Fj(,)d(5\(2\):197{227,)e(1990.)-75
2488 y([31])19 b(Rob)q(ert)f(E.)g(Sc)o(hapire.)30 b(Using)18
b(output)g(co)q(des)g(to)g(b)q(o)q(ost)10 2534 y(m)o(ulticlass)10
b(learning)i(problems.)i(In)e Ff(Machine)i(L)n(e)n(arning:)10
2579 y(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)g(the)f(F)m(ourte)n(enth)h
(International)g(Confer-)10 2625 y(enc)n(e)p Fj(,)h(pages)g(313{321,)e
(1997.)1013 -33 y([32])19 b(Rob)q(ert)g(E.)f(Sc)o(hapire,)i(Y)m(oa)o(v)
e(F)m(reund,)i(P)o(eter)g(Bartlett,)1098 12 y(and)f(W)m(ee)h(Sun)f
(Lee.)36 b(Bo)q(osting)20 b(the)g(margin:)27 b(A)20 b(new)1098
58 y(explanation)12 b(for)g(the)h(e\013ectiv)o(eness)j(of)c(v)o(oting)g
(metho)q(ds.)1098 103 y Ff(The)i(A)o(nnals)h(of)g(Statistics)p
Fj(,)d(26\(5\):1651{1686,)e(Octob)q(er)1098 149 y(1998.)1013
211 y([33])19 b(Rob)q(ert)g(E.)f(Sc)o(hapire)h(and)g(Y)m(oram)d
(Singer.)32 b(Impro)o(v)o(ed)1098 257 y(b)q(o)q(osting)16
b(algorithms)e(using)j(con\014dence-rated)h(predic-)1098
303 y(tions.)23 b(In)15 b Ff(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)f
(Eleventh)h(A)o(nnual)g(Con-)1098 348 y(fer)n(enc)n(e)h(on)i
(Computational)f(L)n(e)n(arning)g(The)n(ory)p Fj(,)g(pages)1098
394 y(80{91,)12 b(1998.)17 b(T)m(o)c(app)q(ear,)h Ff(Machine)i(L)n(e)n
(arning)p Fj(.)1013 456 y([34])j(Rob)q(ert)g(E.)f(Sc)o(hapire)i(and)e
(Y)m(oram)f(Singer.)33 b(Bo)q(osT)m(ex-)1098 502 y(ter:)28
b(A)19 b(b)q(o)q(osting-based)g(system)f(for)h(text)g(categoriza-)1098
548 y(tion.)e Ff(Machine)f(L)n(e)n(arning)p Fj(,)d(to)h(app)q(ear.)1013
610 y([35])19 b(Rob)q(ert)14 b(E.)g(Sc)o(hapire,)g(Y)m(oram)e(Singer,)i
(and)g(Amit)f(Sing-)1098 656 y(hal.)j(Bo)q(osting)d(and)g(Ro)q(cc)o
(hio)g(applied)g(to)g(text)h(\014ltering.)1098 701 y(In)d
Ff(SIGIR)h('98:)18 b(Pr)n(o)n(c)n(e)n(e)n(dings)12 b(of)g(the)g(21st)g
(A)o(nnual)g(Inter-)1098 747 y(national)k(Confer)n(enc)n(e)g(on)g(R)n
(ese)n(ar)n(ch)g(and)h(Development)1098 793 y(in)e(Information)g(R)n
(etrieval)p Fj(,)d(1998.)1013 855 y([36])19 b(Holger)10
b(Sc)o(h)o(w)o(enk)g(and)g(Y)m(osh)o(ua)f(Bengio.)j(T)m(raining)c
(meth-)1098 901 y(o)q(ds)19 b(for)g(adaptiv)o(e)g(b)q(o)q(osting)g(of)g
(neural)g(net)o(w)o(orks.)35 b(In)1098 946 y Ff(A)n(dvanc)n(es)12
b(in)f(Neur)n(al)g(Information)g(Pr)n(o)n(c)n(essing)g(Systems)1098
992 y(10)p Fj(,)j(pages)g(647{653,)e(1998.)1013 1054
y([37])19 b(L.)14 b(G.)g(V)m(alian)o(t.)20 b(A)15 b(theory)h(of)e(the)i
(learnable.)21 b Ff(Commu-)1098 1100 y(nic)n(ations)13
b(of)f(the)h(A)o(CM)p Fj(,)e(27\(11\):1134{1142)o(,)e(No)o(v)o(em)o(b)q
(er)1098 1145 y(1984.)1013 1208 y([38])19 b(Vladimir)k(N.)i(V)m(apnik.)
52 b Ff(The)25 b(Natur)n(e)g(of)h(Statistic)n(al)1098
1253 y(L)n(e)n(arning)15 b(The)n(ory)p Fj(.)i(Springer,)d(1995.)965
2750 y(6)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
